const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ut=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const d=o*i;t:for(const l of e.keys())if(l===F){const a=u[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=o;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=u[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=u[f+y]+ +b,A=u[f+y+1]+1,w=u[p+y]+1,L=u[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,u,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=M(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ut(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,O(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},O=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const d=e.get(o);if(r===o.length)e=d;else{const l=new Map;l.set(o.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(o),e=l}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[u,o]=s.entries().next().value;q(n,u,o)}}},W=e=>{if(e.length===0)return;const[t,s]=M(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&q(e.slice(0,-1),n,u)}},q=(e,t,s)=>{if(e.length===0)return;const[n,u]=M(e);n.set(u+t,s),n.delete(u)},M=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",$="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},N=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),P(n.terms,o)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);P(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,u,o)=>{const{k:i,b:r,d}=o;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/u)))},ft=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},H=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const u=e._index.fetch(n,ht),o=u.get(t);o==null||o.get(s)==null?H(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:$,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,u,o,i,r,d=new Map)=>{if(u==null)return d;for(const l of Object.keys(o)){const a=o[l],h=e._fieldIds[l],m=u.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=G(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:G(n.boost,g)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,u,o,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,u,o,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,u,o,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),u=[];for(const[o,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(o),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(N),u},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=o,d.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:d}]of n)u.push({suggestion:o,terms:r,score:i/d});return u.sort(N),u};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=u,h._fieldLength=k(o),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&u.push(h),i+=h.length,a||(u.push(["mark",t]),i+=t.length,i>=100&&u.push(" …"))};let d=s.indexOf(n,o);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(o,d)),o=l,i>100)break;d=s.indexOf(n,o)}return i<100&&r(e.slice(o),!0),u},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,d=o.includes("@"),l=o.includes("#"),[a,h]=o.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>u.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(u.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in u)for(const c of u.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,u],[,o])=>"max"==="total"?xt(u,o):kt(u,o)).map(([u,{title:o,contents:i}])=>{if(!o){const r=it(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":171,\"nextId\":171,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-8daa1a0e#skywalking\",\"2\":\"v-8daa1a0e#elaticsearch-、logstash-、kibana\",\"3\":\"v-8daa1a0e#node-export\",\"4\":\"v-df975774\",\"5\":\"v-df975774#_1-冒泡排序\",\"6\":\"v-df975774#_2-选择排序\",\"7\":\"v-df975774#_3-插入排序\",\"8\":\"v-df975774#_4-希尔排序\",\"9\":\"v-df975774#_5-归并排序\",\"10\":\"v-df975774#_6-快速排序\",\"11\":\"v-df975774#_7-堆排序\",\"12\":\"v-df975774#_8\",\"13\":\"v-df975774#_1-顺序查找\",\"14\":\"v-df975774#_2-二分查找\",\"15\":\"v-df975774#_3-插值查找\",\"16\":\"v-df975774#_4-斐波那契查找\",\"17\":\"v-df975774#_5-树表查找\",\"18\":\"v-df975774#_6-分块查找\",\"19\":\"v-df975774#_7-哈希查找\",\"20\":\"v-df975774#二叉树\",\"21\":\"v-df975774#满二叉树\",\"22\":\"v-df975774#完全二叉树\",\"23\":\"v-670dda81\",\"24\":\"v-4b07ca2d\",\"25\":\"v-33f71d89\",\"26\":\"v-33f71d89#dma-直接储存器访问\",\"27\":\"v-520812c5\",\"28\":\"v-520812c5#mdk编译过程\",\"29\":\"v-520812c5#_1-2-程序的组成\",\"30\":\"v-57ee9ba0\",\"31\":\"v-57ee9ba0#提高液晶屏\",\"32\":\"v-341ba00d\",\"33\":\"v-341ba00d#简介\",\"34\":\"v-341ba00d#安装cmake-工具\",\"35\":\"v-341ba00d#cmakelists-txt\",\"36\":\"v-f5530aac\",\"37\":\"v-90cab8d4\",\"38\":\"v-3c8bfb9e\",\"39\":\"v-3c8bfb9e#freertos-下载地址\",\"40\":\"v-3c8bfb9e#目录结构\",\"41\":\"v-3c8bfb9e#新建工程\",\"42\":\"v-3c8bfb9e#导入文件\",\"43\":\"v-22a48fd3\",\"44\":\"v-fef39bbe\",\"45\":\"v-6472eb42\",\"46\":\"v-6472eb42#标准\",\"47\":\"v-6472eb42#ttl接线\",\"48\":\"v-6472eb42#传输协议\",\"49\":\"v-4fc2a189\",\"50\":\"v-4fc2a189#i2c总线\",\"51\":\"v-4fc2a189#时序\",\"52\":\"v-4fc2a189#_1-空闲状态\",\"53\":\"v-4fc2a189#_2-起始位与停止位的定义\",\"54\":\"v-4fc2a189#电平变化\",\"55\":\"v-109ec840\",\"56\":\"v-109ec840#spi通信具有以下几个主要特点\",\"57\":\"v-109ec840#引脚定义\",\"58\":\"v-109ec840#接线原理图\",\"59\":\"v-77794644\",\"60\":\"v-77794644#_1-电路和电路模型\",\"61\":\"v-77794644#_2-电流和电压的参考方向\",\"62\":\"v-ca2534f4\",\"63\":\"v-ca2534f4#电阻\",\"64\":\"v-ca2534f4#参数\",\"65\":\"v-ca2534f4#电容\",\"66\":\"v-ca2534f4#参数-1\",\"67\":\"v-ca2534f4#电感\",\"68\":\"v-22682619\",\"69\":\"v-0c4b9852\",\"70\":\"v-d138e06a\",\"71\":\"v-2d8a340c\",\"72\":\"v-fc2e16e2\",\"73\":\"v-5a38f0e7\",\"74\":\"v-149ec9fb\",\"75\":\"v-149ec9fb#下载jdk\",\"76\":\"v-149ec9fb#安装jdk\",\"77\":\"v-149ec9fb#配置path-classpath\",\"78\":\"v-149ec9fb#测试\",\"79\":\"v-0dbe4cc3\",\"80\":\"v-0dbe4cc3#java-关键字\",\"81\":\"v-0dbe4cc3#第一个java程序\",\"82\":\"v-aaf88de8\",\"83\":\"v-6426f446\",\"84\":\"v-6426f446#android四大组件详解\",\"85\":\"v-37053896\",\"86\":\"v-50e8c0ed\",\"87\":\"v-3c235346\",\"88\":\"v-61bafce5\",\"89\":\"v-2a34bce1\",\"90\":\"v-351bc31a\",\"91\":\"v-9dc78134\",\"92\":\"v-2c4ce95c\",\"93\":\"v-1760fc80\",\"94\":\"v-f06deeae\",\"95\":\"v-cac217ae\",\"96\":\"v-cac217ae#string\",\"97\":\"v-cac217ae#stringbuffer\",\"98\":\"v-cac217ae#stringbuilder\",\"99\":\"v-6768a10a\",\"100\":\"v-6768a10a#list\",\"101\":\"v-034a668c\",\"102\":\"v-034a668c#一、线程控制\",\"103\":\"v-034a668c#二、-锁\",\"104\":\"v-aa66a368\",\"105\":\"v-aa66a368#java-基础\",\"106\":\"v-aa66a368#string-、stringbuffer-、stringbuilder\",\"107\":\"v-aa66a368#集合类-list-、-map-、set\",\"108\":\"v-aa66a368#反射\",\"109\":\"v-aa66a368#代理\",\"110\":\"v-aa66a368#拷贝\",\"111\":\"v-aa66a368#多线程\",\"112\":\"v-aa66a368#分布式事务\",\"113\":\"v-aa66a368#spring\",\"114\":\"v-aa66a368#spring-1\",\"115\":\"v-aa66a368#spring-boot\",\"116\":\"v-aa66a368#spring-cloud\",\"117\":\"v-aa66a368#mysql\",\"118\":\"v-aa66a368#jvm\",\"119\":\"v-aa66a368#redis\",\"120\":\"v-aa66a368#rabbitmq\",\"121\":\"v-aa66a368#linux\",\"122\":\"v-aa66a368#设计模式\",\"123\":\"v-aa66a368#elk\",\"124\":\"v-aa66a368#docker\",\"125\":\"v-2301ce1a\",\"126\":\"v-2301ce1a#一、类加载\",\"127\":\"v-2301ce1a#二、堆\",\"128\":\"v-2301ce1a#三、虚拟机栈\",\"129\":\"v-2301ce1a#四、本地方法栈\",\"130\":\"v-2301ce1a#五、方法区\",\"131\":\"v-2301ce1a#六、程序计数器\",\"132\":\"v-2301ce1a#七、gc\",\"133\":\"v-2301ce1a#对象布局\",\"134\":\"v-cc7ffb64\",\"135\":\"v-cc7ffb64#官网\",\"136\":\"v-a555d4b2\",\"137\":\"v-a555d4b2#第一步-maven-pom-xml\",\"138\":\"v-a555d4b2#第二步-生成数据表\",\"139\":\"v-a555d4b2#第二步-生成数据表-方法二\",\"140\":\"v-e283fcf4\",\"141\":\"v-e283fcf4#部署流程\",\"142\":\"v-e283fcf4#查询流程\",\"143\":\"v-7cba7ed4\",\"144\":\"v-7cba7ed4#发起一个流程\",\"145\":\"v-b4770554\",\"146\":\"v-b4770554#查询一个待办任务\",\"147\":\"v-677edd98\",\"148\":\"v-677edd98#任务审批\",\"149\":\"v-3d93328c\",\"150\":\"v-3ca87478\",\"151\":\"v-aebdcb92\",\"152\":\"v-3dc20d1b\",\"153\":\"v-5a79d275\",\"154\":\"v-54f96206\",\"155\":\"v-5602ce49\",\"156\":\"v-5c853c80\",\"157\":\"v-176eef63\",\"158\":\"v-ec8fbf06\",\"159\":\"v-3eaf88e8\",\"160\":\"v-2ec10888\",\"161\":\"v-64afd7de\",\"162\":\"v-28d64ebc\",\"163\":\"v-65a31018\",\"164\":\"v-e3c090a8\",\"165\":\"v-af25ebea\",\"166\":\"v-5786cf42\",\"167\":\"v-191fae76\",\"168\":\"v-30d8f8be\",\"169\":\"v-4c05c3d6\",\"170\":\"v-6716afd5\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,5],\"1\":[1],\"2\":[3],\"3\":[2,20],\"4\":[2],\"5\":[2,39],\"6\":[2,39],\"7\":[2,38],\"8\":[2],\"9\":[2],\"10\":[2],\"11\":[2],\"12\":[2],\"13\":[2],\"14\":[2],\"15\":[2],\"16\":[2],\"17\":[2],\"18\":[2],\"19\":[2],\"20\":[1],\"21\":[1],\"22\":[1],\"23\":[2,1],\"24\":[2,8],\"25\":[1],\"26\":[2],\"27\":[1],\"28\":[1,11],\"29\":[3,9],\"30\":[1],\"31\":[1,2],\"32\":[2],\"33\":[1,35],\"34\":[2,16],\"35\":[2,1],\"36\":[2,27],\"37\":[2,3],\"38\":[2],\"39\":[2,5],\"40\":[1,4],\"41\":[1],\"42\":[1],\"43\":[2,23],\"44\":[1,2],\"45\":[2,1],\"46\":[1,13],\"47\":[2,12],\"48\":[1,12],\"49\":[2],\"50\":[1,7],\"51\":[1],\"52\":[2,6],\"53\":[3,9],\"54\":[1],\"55\":[2,5],\"56\":[2,20],\"57\":[1,9],\"58\":[1],\"59\":[2,2],\"60\":[2,5],\"61\":[2,16],\"62\":[4],\"63\":[1,3],\"64\":[1,8],\"65\":[1],\"66\":[1,8],\"67\":[1,3],\"68\":[1,1],\"69\":[2,36],\"70\":[3,65],\"71\":[2,13],\"72\":[2,81],\"73\":[2,41],\"74\":[2],\"75\":[1,14],\"76\":[1,8],\"77\":[2,16],\"78\":[1,4],\"79\":[2],\"80\":[2,186],\"81\":[1,14],\"82\":[2,17],\"83\":[2],\"84\":[1,144],\"85\":[2,19],\"86\":[1,39],\"87\":[1,4],\"88\":[1,25],\"89\":[1,23],\"90\":[1,1],\"91\":[1,44],\"92\":[1,21],\"93\":[1,62],\"94\":[1,73],\"95\":[3,4],\"96\":[1],\"97\":[1],\"98\":[1],\"99\":[4],\"100\":[1],\"101\":[3,6],\"102\":[2,48],\"103\":[2,35],\"104\":[1],\"105\":[2],\"106\":[3],\"107\":[4],\"108\":[1],\"109\":[1],\"110\":[1],\"111\":[1,21],\"112\":[1,2],\"113\":[1],\"114\":[1],\"115\":[2],\"116\":[2],\"117\":[1],\"118\":[1],\"119\":[1],\"120\":[1],\"121\":[1],\"122\":[1],\"123\":[1],\"124\":[1],\"125\":[3],\"126\":[2,4],\"127\":[2,8],\"128\":[2,2],\"129\":[2,4],\"130\":[2,3],\"131\":[2,2],\"132\":[2,5],\"133\":[1,12],\"134\":[2],\"135\":[1,5],\"136\":[2],\"137\":[4,27],\"138\":[2,84],\"139\":[4,39],\"140\":[2],\"141\":[1,39],\"142\":[1,34],\"143\":[2],\"144\":[1,17],\"145\":[2],\"146\":[1,34],\"147\":[2],\"148\":[1,15],\"149\":[1],\"150\":[3],\"151\":[1],\"152\":[3],\"153\":[1],\"154\":[1],\"155\":[1],\"156\":[1],\"157\":[1],\"158\":[1],\"159\":[1],\"160\":[1],\"161\":[1],\"162\":[1],\"163\":[1],\"164\":[5],\"165\":[2],\"166\":[5],\"167\":[2],\"168\":[5],\"169\":[2],\"170\":[2]},\"averageFieldLength\":[1.6900584795321638,20.638179109602987],\"storedFields\":{\"0\":{\"h\":\"鱼头笔记\",\"t\":[\"鱼头笔记\",\"项目架构 ================== 服务监控 ===================\"]},\"1\":{\"h\":\"SkyWalking\"},\"2\":{\"h\":\"ElaticSearch 、Logstash 、Kibana\"},\"3\":{\"h\":\"node export\",\"t\":[\" ==================================================== 调研 立项 启动 需求分析 需规编写 图：业务架构、技术架构、数据交互架构、部署架构 详细设计 UI 页面设计 ===================================================== 环境搭建 编写代码 ===================================================== 测试 上线 \"]},\"4\":{\"h\":\"01.排序算法\"},\"5\":{\"h\":\"1.冒泡排序\",\"t\":[\"public static void main(String[] args) { int[] arr = {1, 23, 4, 5, 88, 9, 6, 4, 7, 8, 2, 43, 54, 40}; for (int i = 0; i < arr.length; i++) { for (int j = i + 1; j < arr.length; j++) { if (arr[i] > arr[j]) { int m = arr[i]; arr[i] = arr[j]; arr[j] = m; } } } for (int i = 0; i < arr.length; i++) { System.out.print(arr[i] + \\\"\\\\t\\\"); } } \"]},\"6\":{\"h\":\"2.选择排序\",\"t\":[\"public static void main(String[] args) { int[] arr = {1, 23, 4, 5, 88, 9, 6, 4, 7, 8, 2, 43, 54, 40}; for (int i = 0; i < arr.length; i++) { int minIndex = i; for (int j = i + 1; j < arr.length; j++) { if (arr[j] - arr[minIndex] < 0) { minIndex = j; } } if (minIndex != i) { int temp = arr[i]; arr[i] = arr[minIndex]; arr[minIndex] = temp; } } for (int i = 0; i < arr.length; i++) { System.out.print(arr[i] + \\\"\\\\t\\\"); } } \"]},\"7\":{\"h\":\"3.插入排序\",\"t\":[\"public static void main(String[] args) { int[] arr = {1, 23, 4, 5, 88, 9, 6, 4, 7, 8, 2, 43, 54, 40}; int n = arr.length; for (int i = 0; i < n; i++) { int e = arr[i]; int j = i; for (; j > 0 && (arr[j - 1] - e > 0); j--) { arr[j] = arr[j - 1]; } arr[j] = e; } for (int i = 0; i < arr.length; i++) { System.out.print(arr[i] + \\\"\\\\t\\\"); } } \"]},\"8\":{\"h\":\"4.希尔排序\"},\"9\":{\"h\":\"5.归并排序\"},\"10\":{\"h\":\"6.快速排序\"},\"11\":{\"h\":\"7.堆排序\"},\"12\":{\"h\":\"8.\"},\"13\":{\"h\":\"1.顺序查找\"},\"14\":{\"h\":\"2.二分查找\"},\"15\":{\"h\":\"3.插值查找\"},\"16\":{\"h\":\"4.斐波那契查找\"},\"17\":{\"h\":\"5.树表查找\"},\"18\":{\"h\":\"6.分块查找\"},\"19\":{\"h\":\"7.哈希查找\"},\"20\":{\"h\":\"二叉树\"},\"21\":{\"h\":\"满二叉树\"},\"22\":{\"h\":\"完全二叉树\"},\"23\":{\"h\":\"10.PID算法\",\"t\":[\"sss\"]},\"24\":{\"h\":\"01.STM32简介\",\"t\":[\"STM32系列专为要求高性能、低成本、低功耗的嵌入式应用设计的ARM Cortex®-M0，M0+，M3, M4和M7内核\"]},\"25\":{\"h\":\"中级DMA\"},\"26\":{\"h\":\"DMA 直接储存器访问\"},\"27\":{\"h\":\"大师篇MDK编译过程\"},\"28\":{\"h\":\"mdk编译过程\",\"t\":[\"C代码(.c) -> 对象代码(.o) -> 映像文件(链接.axf) -> 16进制文件\",\"汇编代码(.s) -> 对象代码(.o) -> 映像文件(链接.axf) -> 16进制文件\"]},\"29\":{\"h\":\"1.2 程序的组成\",\"t\":[\"Code: 代码域\\nRO-data: 只读数据域\\nRW-data: 可读写数据域\\nZI-data:\"]},\"30\":{\"h\":\"提高液晶屏\"},\"31\":{\"h\":\"提高液晶屏\",\"t\":[\"TFT屏 SPI屏\"]},\"32\":{\"h\":\"01.CMake简介\"},\"33\":{\"h\":\"简介\",\"t\":[\"CMake是一个跨平台的安装（编译）工具，可以用简单的语句来描述所有平台的安装(编译过程)。 他能够输出各种各样的makefile或者project文件，能测试编译器所支持的C++特性, 类似UNIX下的automake。只是 CMake 的组态档取名为 CMakeLists.txt。Cmake 并不直接建构出最终的软件， 而是产生标准的建构档（如 Unix 的 Makefile 或 Windows Visual C++ 的 projects/workspaces）， 然后再依一般的建构方式使用。这使得熟悉某个集成开发环境（IDE）的开发者可以用标准的方式建构他的软件， 这种可以使用各平台的原生建构系统的能力是 CMake 和 SCons 等其他类似系统的区别之处。 \"]},\"34\":{\"h\":\"安装Cmake 工具\",\"t\":[\"下载 https://cmake.org/download/ 安装 添加Path C:\\\\Program Files\\\\CMake\\\\bin 验证 cmd -> cmake \"]},\"35\":{\"h\":\"CMakeLists.txt\",\"t\":[\" \"]},\"36\":{\"h\":\"02.CMakeLists文件编写\",\"t\":[\"# 指定Cmake 版本号 cmake_minimum_required(VERSION 3.15) # 设置项目名 project(项目名 语言) project(projectName C) set(CMAKE_C_STANDARD 11) # 生成执行文件 add_executable(执行文件 源文件) add_executable(test main.c) \"]},\"37\":{\"h\":\"03.CMake命令\",\"t\":[\"## 编译 cmake . cmake .. \"]},\"38\":{\"h\":\"01.环境搭建\"},\"39\":{\"h\":\"freertos 下载地址\",\"t\":[\"https://github.com/FreeRTOS/FreeRTOS \"]},\"40\":{\"h\":\"目录结构\",\"t\":[\" FreeRTOS FreeRTOS-Plus tools \"]},\"41\":{\"h\":\"新建工程\"},\"42\":{\"h\":\"导入文件\"},\"43\":{\"h\":\"02.移植freertos\",\"t\":[\" 第一章 FreeRTOS移植到STM32 第二章 FreeRTOS创建任务 第三章 FreeRTOS任务管理 第四章 FreeRTOS消息队列 第五章 FreeRTOS信号量 第六章 FreeRTOS互斥量 第七章 FreeRTOS事件组 第八章 FreeRTOS任务通知 第九章 FreeRTOS软件定时器 第十章 FreeRTOS内存管理 第十一章 FreeRTOS中断管理 \"]},\"44\":{\"h\":\"\",\"t\":[\" sas \"]},\"45\":{\"h\":\"02.串口\",\"t\":[\"===================================================\"]},\"46\":{\"h\":\"标准\",\"t\":[\"TTL 电平 ( 4根线 0-3.3V ) RS232 标准 ( 9根线 -15到15V ) RS422 9根线 RS485 9根线 \",\"===================================================\"]},\"47\":{\"h\":\"TTL接线:\",\"t\":[\" 设备1 设备2 1. 3v3 3v3 2. GND GND 3. TX RX 4. RX TX \",\"===================================================\"]},\"48\":{\"h\":\"传输协议\",\"t\":[\"串口名 COMx 波特率: 串口异步通讯中由于没有时钟信号，所以通讯双方需要约定好波特率 9600 115200 ... 校验位 数据位数 起始位 停止位 \"]},\"49\":{\"h\":\"03.I2C\"},\"50\":{\"h\":\"I2C总线\",\"t\":[\"双向二线制同步串行总线。它只需要两根线即可在连接于总线上的器件之间传送信息。\",\"SDA（串行数据线） SCL（串行时钟线） \"]},\"51\":{\"h\":\"时序\"},\"52\":{\"h\":\"1.空闲状态\",\"t\":[\"I2C总线总线的SDA和SCL两条信号线同时处于高电平时，规定为总线的空闲状态。\",\"此时各个器件的输出级场效应管均处在截止状态，即释放总线，\",\"由两条信号线各自的上拉电阻把电平拉高。\"]},\"53\":{\"h\":\"2.起始位与停止位的定义：\",\"t\":[\"起始信号： 当SCL为高期间，SDA由高到低的跳变；启动信号是一种电平跳变时序信号，而不是一个电平信号。\",\"停止信号：当SCL为高期间，SDA由低到高的跳变；停止信号也是一种电平跳变时序信号，而不是一个电平信号。\"]},\"54\":{\"h\":\"电平变化\"},\"55\":{\"h\":\"04.SPI通信\",\"t\":[\"SPI，是一种高速的，全双工，同步的通信总线，并且在芯片的管脚上只占用四根线\"]},\"56\":{\"h\":\"SPI通信具有以下几个主要特点：\",\"t\":[\"1. 全双工（Full-Duplex）通信：主设备和从设备可以同时发送和接收数据，实现了同时的双向数据传输。 2. 同步传输：通信的主设备和从设备需要共享时钟信号，以确保数据的同步传输。 3. 串行通信：数据以位的形式通过单个引脚进行传输，逐位进行 4. 硬件控制：SPI通信不需要复杂的协议来控制通信，而是通过硬件信号进行控制。 \"]},\"57\":{\"h\":\"引脚定义\",\"t\":[\" SDI（数据输入） SDO（数据输出） SCK（时钟） CS（片选） \"]},\"58\":{\"h\":\"接线原理图\"},\"59\":{\"h\":\"01.电路基础\",\"t\":[\"##第一章\"]},\"60\":{\"h\":\"1.电路和电路模型\",\"t\":[\"电阻\",\"电感\",\"电容\",\"电压\",\"电流\"]},\"61\":{\"h\":\"2.电流和电压的参考方向\",\"t\":[\"3.电功率和能量 4.电路元件 5.电阻元件 欧姆定律 6.电压和电流源 7.受控电源 8.基尔霍夫定律\",\"##第二章 电路的等效变换\",\"电阻的串联和并联\"]},\"62\":{\"h\":\"02.电阻、电容、电感\"},\"63\":{\"h\":\"电阻\",\"t\":[\"一个限流元件,它可限制通过它所连支路的电流大小 \"]},\"64\":{\"h\":\"参数\",\"t\":[\"1.电阻大小 （欧姆） 2.功率 最大可承受分得的电压 3. \"]},\"65\":{\"h\":\"电容\"},\"66\":{\"h\":\"参数\",\"t\":[\"1.容量大小 （法拉） 2.类型 3.容抗 \"]},\"67\":{\"h\":\"电感\",\"t\":[\"1.感抗 \"]},\"68\":{\"h\":\"鱼头笔记\",\"t\":[\"鱼头笔记\"]},\"69\":{\"h\":\"01.环境搭建\",\"t\":[\"下载： https://github.com/niXman/mingw-builds-binaries/releases x86_64-12.2.0-release-posix-seh-rt_v10-rev1.7z 解压：D:\\\\c\\\\mingw64 配置到path 配置 clion file->setting->build->toolchains-> + 添加 \"]},\"70\":{\"h\":\"02.C 编译过程\",\"t\":[\"gcc ***.c\",\" 1.预处理 译过程的第一步预就是预处理，与处理结束后会产生一个后缀为(.i)的临时文件，这一步由预处理器完成。预处理器主要完成以下任务。 删除所有的注释 宏扩展 文件包含 g++ -E text.cpp -o text.i 2.编译 C 中的编译阶段使用内置编译器软件将 （.i） 临时文件转换为具有汇编级指令（低级代码）的汇编文件 （.s）。 汇编代码是一种简单的英文语言，用于编写低级指令（在微控制器程序中，我们使用汇编语言）。 整个程序代码由编译器软件一次性解析（语法分析），并通过终端窗口告诉我们源代码中存在的任何语法错误或警告。 g++ -S text.i -o text.s 3.汇编 使用汇编程序将程序集级代码（.s 文件）转换为机器可理解的代码（二进制/十六进制形式）。 汇编程序是一个预先编写的程序，它将汇编代码转换为机器代码。 它从汇编文件中获取基本指令，并将其转换为特定于计算机类型（称为目标代码）的二进制/十六进制代码。 g++ -c text.s -o text.o 4.连接 链接是将库文件包含在我们的程序中的过程。 库文件是一些预定义的文件，其中包含机器语言中的函数定义，这些文件的扩展名为.lib。 链接过程会生成一个可执行文件，其扩展名为 .exe 在Linux 操作系统中为 .out g++ text.o -o mybin ld.exe 连接器 \"]},\"71\":{\"h\":\"02.基本关键字\",\"t\":[\" 常量： #define URl \\\"http://xxxxx.xxx\\\" const long aa = 111L; 宏定义： \"]},\"72\":{\"h\":\"04.计算机网络\",\"t\":[\"常用的网络协议\",\"物理层（Physical Layer）：负责传输数据的物理媒介和比特流，例如电缆、光纤、无线信号等。 数据链路层（Data Link Layer）：提供对物理层传输的比特流进行分帧和差错校验，确保可靠的数据传输，例如以太网协议。 以太网（Ethernet）：是最常用的局域网技术，定义了数据链路层的帧格式和MAC地址的使用规则。 PPP（Point-to-Point Protocol）：用于在点对点连接上建立和维护数据链路连接，例如拨号连接或串行链路。 HDLC（High-Level Data Link Control）：一种数据链路层协议，用于在点对点或点对多点的通信链路上提供可靠的数据传输。 SLIP（Serial Line Internet Protocol）：一种简单的数据链路层协议，通常用于串行线路上的IP数据传输。 PPPoE（Point-to-Point Protocol over Ethernet）：在以太网上运行的一种协议，将PPP封装在以太网帧中，用于在宽带接入网络中建立和维护连接。 Wi-Fi（Wireless Fidelity）：无线局域网技术，定义了无线数据链路层的帧格式和协议，如IEEE 802.11系列标准。 网络层（Network Layer）：处理分组的路由和转发，实现不同网络之间的数据传输，例如IP协议。 传输层（Transport Layer）：提供端到端的可靠数据传输，包括分段、流量控制和错误恢复，例如TCP协议和UDP协议。 会话层（Session Layer）：建立、管理和终止会话（连接）中的通信会话，例如会话控制协议。 表示层（Presentation Layer）：处理数据的表示格式，包括数据加密、压缩和格式转换，例如加密协议和压缩协议。 应用层（Application Layer）：提供网络应用服务和用户接口，例如HTTP协议、FTP协议、SMTP协议等。 \"]},\"73\":{\"h\":\"04.软件自动化控制\",\"t\":[\"================== dll 注入原理 首先我们知道在windows上面如果引入一个dll的话，那么需要用到一个函数 loadlibrary() 这个函数是用来引入外部dll的 因为这个函数在系统的kernel32.dll里面，所有软件都会引入包含这个dll, 而且都是使用同一份，所以在所有软件里面，这个 dll的基地址是固定的 我们其实主要是要用到它里面的一个函数， loadlibrary() 地址，你们想，既然所有软件这个dll的基址都是一样，那么它里面 的函数肯定也是一样的。那这就好办了，我们只需要在我们自己的程序，比如这个注入工具里面自己获取自己的loadlibrary()地 址，不就知道程序里面的loadlibrary()函数地址了么， 知道这个地址后,通过进程打开程序获取程序的句柄，然后写入我们的dll的路径，用远程线程方式去执行这个这个函数，程序就自己 引入我们的dll从而注入到程序内部，这个时候我们想怎么操作程序内存数据都没问题 =================== 工具 onlly Debug Cheat Engine \",\" \"]},\"74\":{\"h\":\"01.环境搭建\"},\"75\":{\"h\":\"下载JDK\",\"t\":[\"下载地址 https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html \"]},\"76\":{\"h\":\"安装JDK\",\"t\":[\"安装位置 D:\\\\java\\\\jdk1.8.0_191 \"]},\"77\":{\"h\":\"配置path & classpath\",\"t\":[\"JAVA_HOME D:\\\\java\\\\jdk1.8.0_191 Path %JAVA_HOME%\\\\bin CLASSPATH .;%JAVA_HOME%\\\\lib\\\\dt.jar;%JAVA_HOME%\\\\lib\\\\toos.jar \"]},\"78\":{\"h\":\"测试\",\"t\":[\"java javac java -version \"]},\"79\":{\"h\":\"02.基本操作\"},\"80\":{\"h\":\"JAVA 关键字\",\"t\":[\"序号\",\"关键字\",\"含义\",\"01\",\"abstract\",\"表明类或者成员方法具有抽象属性\",\"02\",\"assert\",\"断言，用来进行程序调试\",\"03\",\"boolean\",\"基本数据类型之一，声明布尔类型的关键字\",\"04\",\"break\",\"提前跳出一个块\",\"05\",\"byte\",\"基本数据类型之一，字节类型\",\"06\",\"case\",\"用在switch语句之中，表示其中的一个分支\",\"07\",\"catch\",\"用在异常处理中，用来捕捉异常\",\"08\",\"char\",\"基本数据类型之一，字符类型\",\"09\",\"class\",\"声明一个类\",\"10\",\"const\",\"保留关键字，没有具体含义\",\"11\",\"continue\",\"回到一个块的开始处\",\"12\",\"default\",\"默认，例如，用在switch语句中，表明一个默认的分支。Java8 中也作用于声明接口函数的默认实现\",\"13\",\"do\",\"用在do-while循环结构中\",\"14\",\"double\",\"基本数据类型之一，双精度浮点数类型\",\"15\",\"else\",\"用在条件语句中，表明当条件不成立时的分支\",\"16\",\"enum\",\"枚举\",\"17\",\"extends\",\"表明一个类型是另一个类型的子类型。对于类，可以是另一个类或者抽象类；对于接口，可以是另一个接口\",\"18\",\"final\",\"用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变，用来定义常量\",\"19\",\"finally\",\"用于处理异常情况，用来声明一个基本肯定会被执行到的语句块\",\"20\",\"float\",\"基本数据类型之一，单精度浮点数类型\",\"21\",\"for\",\"一种循环结构的引导词\",\"22\",\"goto\",\"保留关键字，没有具体含义\",\"23\",\"if\",\"条件语句的引导词\",\"24\",\"implements\",\"表明一个类实现了给定的接口\",\"25\",\"import\",\"表明要访问指定的类或包\",\"26\",\"instanceof\",\"用来测试一个对象是否是指定类型的实例对象\",\"27\",\"int\",\"基本数据类型之一，整数类型\",\"28\",\"interface\",\"接口\",\"29\",\"long\",\"基本数据类型之一，长整数类型\",\"30\",\"native\",\"用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的\",\"31\",\"new\",\"用来创建新实例对象\",\"32\",\"package\",\"包\",\"33\",\"private\",\"一种访问控制方式：私用模式\",\"34\",\"protected\",\"一种访问控制方式：保护模式\",\"35\",\"public\",\"一种访问控制方式：共用模式\",\"36\",\"record\",\"record在定义数据类时更为简洁、易读和易用。\",\"37\",\"return\",\"从成员方法中返回数据\",\"38\",\"short\",\"基本数据类型之一,短整数类型\",\"39\",\"static\",\"表明具有静态属性\",\"40\",\"strictfp\",\"用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范\",\"41\",\"super\",\"表明当前对象的父类型的引用或者父类型的构造方法\",\"42\",\"switch\",\"分支语句结构的引导词\",\"43\",\"synchronized\",\"表明一段代码需要同步执行\",\"44\",\"this\",\"指向当前实例对象的引用\",\"45\",\"throw\",\"抛出一个异常\",\"46\",\"throws\",\"声明在当前定义的成员方法中所有需要抛出的异常\",\"47\",\"transient\",\"声明不用序列化的成员域\",\"48\",\"try\",\"尝试一个可能抛出异常的程序块\",\"49\",\"void\",\"声明当前成员方法没有返回值\",\"50\",\"volatile\",\"表明两个或者多个变量必须同步地发生变化\",\"51\",\"while\",\"用在循环结构中\"]},\"81\":{\"h\":\"第一个java程序\",\"t\":[\" public class Test{ public static void main(String arg){ System.out.println(\\\"Hello World\\\"); } } \"]},\"82\":{\"h\":\"01.环境搭建\",\"t\":[\"安装jdk环境 下载android studio https://developer.android.google.cn/studio 创建工程： 安装模拟器： 日志打印： Log.i(\\\"=======================================:::\\\",\\\"onCreate: 执行onCreate方法\\\") \"]},\"83\":{\"h\":\"02.四大组件\"},\"84\":{\"h\":\"android四大组件详解\",\"t\":[\" 1、activity Activity可以看成是安卓系统的根本，在这个根本上才可以进行其他的工作， 因为在安卓系统里运行的所有的程序，它的流程都必须在【Activity】中运行， 所有他是最基本的模块。它的作用是一个框架或页面，每个程序会有多个【Activity】组成。 （1）一个Activity通常就是一个单独的屏幕（窗口）。 （2）Activity之间通过Intent进行通信。 （3）android应用中每一个Activity都必须要在AndroidManifest.xml配置文件中声明，否则系统将不识别也不执行该Activity。 2、service Service是安卓里非常很重要的组件，它的地位和优先级别是与活动相似的， 不过Service不能够自己运行，它只能在安卓的后台运行。 它的作用就是与安卓的其他逐渐进行交互，举个简单例子： 当我们打开手机上音乐播放器并将它放到后台，此时播放的音乐就是由Service在负责控制。 1）service用于在后台完成用户指定的操作。service分为两种： started（启动）：当应用程序组件（如activity）调用startService()方法启动服务时，服务处于started状态。 bound（绑定）：当应用程序组件调用bindService()方法绑定到服务时，服务处于bound状态。 2）startService()与bindService()区别： started service（启动服务）是由其他组件调用startService()方法启动的，这导致服务的onStartCommand()方法被调用。 当服务是started状态时，其生命周期与启动它的组件无关，并且可以在后台无限期运行，即使启动服务的组件已经被销毁。 因此，服务需要在完成任务后调用stopSelf()方法停止，或者由其他组件调用stopService()方法停止。 使用bindService()方法启用服务，调用者与服务绑定在了一起，调用者一旦退出，服务也就终止，大有“不求同时生，必须同时死”的特点。 3）开发人员需要在应用程序配置文件中声明全部的service，使用<service></service>标签。 4）Service通常位于后台运行，它一般不需要与用户交互，因此Service组件没有图形用户界面。 Service组件需要继承Service基类。Service组件通常用于为其他组件提供后台服务或监控其他组件的运行状态。 3、content provider（内容提供商） 内容提供商这个组件是专门为第三方应用而设计的，它非常的灵活，而且相当重要，它会为所有的应用准备一个内容窗口， 并且保留数据库、文件，作用就是我们在使用这些第三方软件的时候，可以有效的访问，并且保护里面的数据。 1）android平台提供了Content Provider使一个应用程序的指定数据集提供给其他应用程序。其他应用可以通过ContentResolver类从该内容提供者中获取或存入数据。 2）只有需要在多个应用程序间共享数据是才需要内容提供者。例如，通讯录数据被多个应用程序使用，且必须存储在一个内容提供者中。它的好处是统一数据访问方式。 3）ContentProvider实现数据共享。ContentProvider用于保存和获取数据，并使其对所有应用程序可见。这是不同应用程序间共享数据的唯一方式，因为android没有提供所有应用共同访问的公共存储区。 4）开发人员不会直接使用ContentProvider类的对象，大多数是通过ContentResolver对象实现对ContentProvider的操作。 5）ContentProvider使用URI来唯一标识其数据集，这里的URI以content://作为前缀，表示该数据由ContentProvider来管理。 4、broadcast receiver（广播接收器） 在安卓系统中，广播接收器并不是直接就可以看到的，它是程序之间传递信息时的一种机制， 作用就是接收或者发送通知。通俗的来说广播接收器更像是一种传递组件，它能够将信息接收， 甚至还可以对它进行过滤然后进行响应。 1）你的应用可以使用它对外部事件进行过滤，只对感兴趣的外部事件(如当电话呼入时，或者数据网络可用时)进行接收并做出响应。 广播接收器没有用户界面。然而，它们可以启动一个activity或serice来响应它们收到的信息， 或者用NotificationManager来通知用户。通知可以用很多种方式来吸引用户的注意力， 例如闪动背灯、震动、播放声音等。一般来说是在状态栏上放一个持久的图标，用户可以打开它并获取消息。 2）广播接收者的注册有两种方法，分别是程序动态注册和AndroidManifest文件中进行静态注册。 3）动态注册广播接收器特点是当用来注册的Activity关掉后，广播也就失效了。 静态注册无需担忧广播接收器是否被关闭，只要设备是开启状态，广播接收器也是打开着的。 也就是说哪怕app本身未启动，该app订阅的广播在触发时也会对它起作用。 \"]},\"85\":{\"h\":\"02.四大组件\",\"t\":[\" Button button = findViewById(R.id.button); button.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View view) { Log.i(\\\"点击\\\", \\\"onClick: \\\"); } }); \"]},\"86\":{\"h\":\"\",\"t\":[\" 1.线性布局（LinearLayout）：将子视图按照水平或垂直方向进行排列。 2.相对布局（RelativeLayout）：允许子视图相对于父视图或其他子视图进行定位。 3.帧布局（FrameLayout）：在单个视图上堆叠子视图，每个子视图覆盖前一个子视图。 4.表格布局（TableLayout）：将子视图放置在行和列的网格中。 5.网格布局（GridLayout）：将子视图放置在规则的网格中，可以指定每个单元格的行数和列数。 6.约束布局（ConstraintLayout）：使用约束条件定义子视图之间的关系，可以在不同屏幕尺寸上提供灵活的布局。 7.帧布局（CoordinatorLayout）：是一个扩展的相对布局，用于处理交互式效果和用户界面行为的容器布局。 8.绝对布局（AbsoluteLayout）：使用固定的坐标位置来放置子视图，已不推荐使用。 ======================================= 常用组件 \"]},\"87\":{\"h\":\"\",\"t\":[\" 滚动视图 ScrollView HorizontalScrollView \"]},\"88\":{\"h\":\"\",\"t\":[\" 1.assets 不需要通过编译的资源 2.res 需要通过aapt编译的资源索引表当中会生成索引 3.lib 存放so文件 4.resources.arsc 资源索引表 5.META-INF 签名文件 6.*.dex 存放java代码可执行文件 7.AndroidManifest.xml 配置清单文件 \"]},\"89\":{\"h\":\"\",\"t\":[\" /system/app 系统自带的应用程序 1.复制apk 到 /data/app/包名称/xxx.apk 2.复制dex 到 /data/dalvik-cache/x86/ 3.apk解压资源 到 /data/data/包名 4.记录包名图标等 到 /data/system/packages.xml \"]},\"90\":{\"h\":\"\",\"t\":[\" \"]},\"91\":{\"h\":\"\",\"t\":[\" 1. dalvik 寄存器 32位 , 支持所有类型, 2. 寄存器的命名法 v命名法 局部变量寄存器 v0 - vn 变量寄存器 p命名法 参数寄存器 p0 - pn 3. dex文件反汇编工具 过程: .java -> .class -> .dex -> smali 工具: dx.jar .class->.dex java -jar dx.jar -dex -output=xxx.com/xxx/xxx/xxx.class 工具: Baksmali.jar .dex->.smali java -jar Baksmali.jar -o smali_out/xxx.dex 工具: Samli.jar .smali -> .dex java -jar Samli.jar smali_out/ -o xxx.dex 4. dalvik字节码类型 dalvik | java 5. 字段 6. 方法 ========================================= dalvik指令 \"]},\"92\":{\"h\":\"\",\"t\":[\" 圈圈助手 elf可执行程序 --> 功能实现注入 so模块 --> 要注入的so hook --> inline hook // ====================================== dalvik 字节码 dalvik： 32位寄存器 寄存器命名法： v:局部变量 v0 - vn p: p0 - pn \"]},\"93\":{\"h\":\"\",\"t\":[\" #include <stdio.h> #include <Windows.h> LRESULT CALLBACK LowLevelKeyboardProc(int nCode, WPARAM wParam, LPARAM lParam) { if (nCode >= 0 && wParam == WM_KEYDOWN) { KBDLLHOOKSTRUCT* pKeyStruct = (KBDLLHOOKSTRUCT*)lParam; DWORD vkCode = pKeyStruct->vkCode; FILE* file = fopen(\\\"xxx.txt\\\", \\\"a\\\"); if (file != NULL) { fprintf(file, \\\"%ld\\\\n\\\", vkCode); fclose(file); } } return CallNextHookEx(NULL, nCode, wParam, lParam); } int main() { // 设置键盘钩子 HHOOK hook = SetWindowsHookEx(WH_KEYBOARD_LL, LowLevelKeyboardProc, NULL, 0); if (hook == NULL) { printf(\\\"Failed to install hook\\\\n\\\"); return 1; } // 消息循环，等待键盘事件 MSG msg; while (GetMessage(&msg, NULL, 0, 0) != 0) { TranslateMessage(&msg); DispatchMessage(&msg); } // 卸载键盘钩子 UnhookWindowsHookEx(hook); return 0; } \"]},\"94\":{\"h\":\"\",\"t\":[\"CMakeLists.txt\",\"target_link_libraries(untitled1 D:/c/mingw64/x86_64-w64-mingw32/lib/libiphlpapi.a)\",\" #include <stdio.h> #include <winsock2.h> #include <iphlpapi.h> #include <windows.h> int main() { PIP_ADAPTER_ADDRESSES pAddresses = NULL; ULONG outBufLen = 0; // 获取缓冲区大小 if (GetAdaptersAddresses(AF_UNSPEC, GAA_FLAG_INCLUDE_PREFIX, NULL, pAddresses, &outBufLen) == ERROR_BUFFER_OVERFLOW) { // 分配足够的缓冲区 pAddresses = (IP_ADAPTER_ADDRESSES*)malloc(outBufLen); } // 获取网卡列表 if (GetAdaptersAddresses(AF_UNSPEC, GAA_FLAG_INCLUDE_PREFIX, NULL, pAddresses, &outBufLen) == NO_ERROR) { PIP_ADAPTER_ADDRESSES pCurrAddresses = pAddresses; int i = 1; // 遍历网卡列表并打印信息 while (pCurrAddresses) { printf(\\\" 序号: %d. %ws \\\\n\\\", i++, pCurrAddresses->FriendlyName); printf(\\\" 描述: %ws \\\\n\\\", pCurrAddresses->Description); printf(\\\" Adapter ID: %ws \\\\n\\\", pCurrAddresses->AdapterName); printf(\\\"\\\\n\\\\n\\\\n\\\"); pCurrAddresses = pCurrAddresses->Next; } } // 释放内存 if (pAddresses) { free(pAddresses); } return 0; } \"]},\"95\":{\"h\":\"03.字符串_API\",\"t\":[\"字符串: String 、StringBuffer 、StringBuilder\"]},\"96\":{\"h\":\"String\"},\"97\":{\"h\":\"StringBuffer\"},\"98\":{\"h\":\"StringBuilder\"},\"99\":{\"h\":\"04.集合类_List_API\"},\"100\":{\"h\":\"List\"},\"101\":{\"h\":\"JUC  java 并发编程\",\"t\":[\"###################################### 两份内容 1.线程控制 2.锁\",\"#####################################\"]},\"102\":{\"h\":\"一、线程控制\",\"t\":[\"线程创建 1.Thread 类 2.Runable 接口 3.Callable 接口 线程睡眠、等待、唤醒 Thread.sleep(100) wait()等待通知方法是Object类中的方法 join()方法是Thread类直接提供的，无参，返回值void。 notify()函数一个线程在调用共享对象的notify()方法后，会唤醒一个在共享变量上wait等待的线程，如果有多个线程在等待，具体唤醒哪一个则是随机的。 notifyAll()函数唤醒共享变量上的所有wait挂起的线程。 用户线程： 守护线程： 异步任务接口: Future FutureTask RunnableScheduledFuture -> ScheduledThreadPoolExecutor CompletableFuture 4个重要的静态方法 runAsync(Runable runable); runAsync(Runable runable, Excutor ex); supplyAsync(Supplier<U> su); supplyAsync(Supplier<U> su, Excutor ex); 线程中断 LockSuport \"]},\"103\":{\"h\":\"二、 锁\",\"t\":[\"AQS 抽象队列同步器\\n    是用来实现锁或者其它同步器组件的公共基础部分的抽象实现，主要是解决锁分配给哪个线程的问题\\n    是重量级基础框架及整个juc体系的基石\\n    整体就是一个抽象的FIFO队列来完成资源获取线程的排队工作，并通过一个int类变量表示持有锁的状态\\n    \\n\\n锁的8种现象: 理解无锁、对象锁、类锁\\nsynchronized 原理    monitor(管程)\\n    同步代码块   \\n        monitorenter  加锁\\n        monitorexit   解锁\\n    同步方法\\n        ACC_SYNCHRONIZED\\n    静态同步方法\\n        ACC_STATIC     ACC_SYNCHRONIZED\\n    \\n死锁排查\\n    jps -l  查进程\\n    jstack <进程号>\\n        Found 1 deadlock\\n\"]},\"104\":{\"h\":\"\"},\"105\":{\"h\":\"java 基础\"},\"106\":{\"h\":\"String 、StringBuffer 、StringBuilder\"},\"107\":{\"h\":\"集合类 List 、 Map 、Set\"},\"108\":{\"h\":\"反射\"},\"109\":{\"h\":\"代理\"},\"110\":{\"h\":\"拷贝\"},\"111\":{\"h\":\"多线程\",\"t\":[\"多线程控制： 创建线程 1. 2. 3. 停止线程: 线程休眠: 线程等待: 线程通信: CompletableFuture AQS: 0.无锁 1.独占锁： ReentrantLock 2.读写锁： ReentrantReadWriteLock 3.邮戳锁,版本锁 StampedLock \"]},\"112\":{\"h\":\"分布式事务\",\"t\":[\"##分布式锁\"]},\"113\":{\"h\":\"spring\"},\"114\":{\"h\":\"spring\"},\"115\":{\"h\":\"spring boot\"},\"116\":{\"h\":\"spring cloud\"},\"117\":{\"h\":\"mysql\"},\"118\":{\"h\":\"jvm\"},\"119\":{\"h\":\"redis\"},\"120\":{\"h\":\"rabbitmq\"},\"121\":{\"h\":\"linux\"},\"122\":{\"h\":\"设计模式\"},\"123\":{\"h\":\"ELK\"},\"124\":{\"h\":\"Docker\"},\"125\":{\"h\":\"JVM java 虚拟机\"},\"126\":{\"h\":\"一、类加载\",\"t\":[\"类加载过程 类加载器 双亲委派 \"]},\"127\":{\"h\":\"二、堆\",\"t\":[\"结构： 新生代： edn s0 s1 老年代： 元空间： \"]},\"128\":{\"h\":\"三、虚拟机栈\",\"t\":[\"结构: \"]},\"129\":{\"h\":\"四、本地方法栈\",\"t\":[\"调用操作系统方法, .so .lib \"]},\"130\":{\"h\":\"五、方法区\",\"t\":[\"结构： 保存类信息 \"]},\"131\":{\"h\":\"六、程序计数器\",\"t\":[\"当前线程执行位置 \"]},\"132\":{\"h\":\"七、GC\",\"t\":[\"算法: 1. 2. GC分别有哪几个？ \",\"====================\"]},\"133\":{\"h\":\"对象布局\",\"t\":[\"对象头：\\n        对象标记\\n            哈希码\\n            GC标记\\n            GC次数\\n            同步锁标记\\n            偏向锁持有者\\n        类元信息（类型指针）\\n实例数据：\\n    \\n对齐填充：\\n\"]},\"134\":{\"h\":\"01.简介\"},\"135\":{\"h\":\"官网\",\"t\":[\"https://www.activiti.org/ \"]},\"136\":{\"h\":\"02.与springboot集成\"},\"137\":{\"h\":\"第一步: maven pom.xml\",\"t\":[\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-jdbc</artifactId> </dependency> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> </dependency> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-spring-boot-starter</artifactId> <version>7.0.0.SR1</version> </dependency> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-json-converter</artifactId> <version>7.0.0.SR1</version> </dependency> \"]},\"138\":{\"h\":\"第二步: 生成数据表\",\"t\":[\" import org.activiti.engine.ProcessEngine; import org.activiti.engine.ProcessEngines; public class ActivityTest { public static void main(String[] args) { ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); System.out.println(processEngine); } } \",\"activiti.cfg.xml\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <beans xmlns=\\\"http://www.springframework.org/schema/beans\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\\\"> <bean id=\\\"processEngineConfiguration\\\" class=\\\"org.activiti.engine.impl.cfg.StandaloneInMemProcessEngineConfiguration\\\"> <!-- 数据库驱动 --> <property name=\\\"jdbcDriver\\\" value=\\\"com.mysql.cj.jdbc.Driver\\\" /> <!-- 数据库连接 --> <property name=\\\"jdbcUrl\\\" value=\\\"jdbc:mysql://127.0.0.1:3306/activiti?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&amp;nullCatalogMeansCurrent=true\\\" /> <!-- 数据库用户名 --> <property name=\\\"jdbcUsername\\\" value=\\\"root\\\" /> <!-- 数据库密码 --> <property name=\\\"jdbcPassword\\\" value=\\\"because\\\" /> <property name=\\\"databaseSchemaUpdate\\\" value=\\\"false\\\"/> </bean> </beans> \"]},\"139\":{\"h\":\"第二步: 生成数据表 （ 方法二 ）\",\"t\":[\" @Test public void test02() { ProcessEngine processEngine = ProcessEngineConfiguration .createStandaloneProcessEngineConfiguration() .setJdbcDriver(\\\"com.mysql.cj.jdbc.Driver\\\") .setJdbcUrl(\\\"jdbc:mysql://139.198.115.132:3306/activiti?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true\\\") .setJdbcUsername(\\\"root\\\") .setJdbcPassword(\\\"because\\\") .setDatabaseSchemaUpdate(ProcessEngineConfiguration.DB_SCHEMA_UPDATE_TRUE) .buildProcessEngine(); } \"]},\"140\":{\"h\":\"04.部署流程\"},\"141\":{\"h\":\"部署流程\",\"t\":[\" @Test public void test03() { System.out.println(\\\"================== 部署流程 ========================\\\"); ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); RepositoryService repositoryService = processEngine.getRepositoryService(); // 关键 DeploymentBuilder deployment = repositoryService.createDeployment(); // ======================================================= // 文件 deployment.addClasspathResource(\\\"xxx/xxx.xml\\\"); deployment.name(\\\"第一个流程\\\"); // 字节流 // deployment.addBytes(); // 字符 //deployment.addString(); // 模型 // deployment.addBpmnModel(); // ======================================================== deployment.deploy(); System.out.println(\\\"==============================================\\\"); } \"]},\"142\":{\"h\":\"查询流程\",\"t\":[\" @Test public void test04() { ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); RepositoryService repositoryService = processEngine.getRepositoryService(); // 关键 DeploymentQuery deploymentQuery = repositoryService.createDeploymentQuery(); // 查询所有 List<Deployment> list = deploymentQuery.list(); for (int i = 0; i < list.size(); i++) { System.out.println(list.get(i).getId()); System.out.println(list.get(i).getName()); } System.out.println(\\\"==============================================\\\"); } \"]},\"143\":{\"h\":\"05.发起一个流程\"},\"144\":{\"h\":\"发起一个流程\",\"t\":[\" @Test public void test05() { ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); RuntimeService runtimeService = processEngine.getRuntimeService(); // 关键 runtimeService.startProcessInstanceById(\\\"\\\"); // runtimeService.startProcessInstanceByKey(\\\"\\\"); // runtimeService.startProcessInstanceByMessage() } \"]},\"145\":{\"h\":\"06.查询待办\"},\"146\":{\"h\":\"查询一个待办任务\",\"t\":[\" @Test public void test06() { ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); TaskService taskService = processEngine.getTaskService(); // 关键 TaskQuery taskQuery = taskService.createTaskQuery(); taskQuery.taskAssignee(\\\"\\\"); List<Task> list = taskQuery.list(); for (int i = 0; i < list.size(); i++) { Task task = list.get(i); System.out.println(task.getName()); } } \"]},\"147\":{\"h\":\"07.任务审批\"},\"148\":{\"h\":\"任务审批\",\"t\":[\" @Test public void test07() { ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); TaskService taskService = processEngine.getTaskService(); // 关键 taskService.complete(\\\"\\\"); } \"]},\"149\":{\"h\":\"数据结构和算法\"},\"150\":{\"h\":\"E S P\"},\"151\":{\"h\":\"硬件\"},\"152\":{\"h\":\"S T M32\"},\"153\":{\"h\":\"Cmake\"},\"154\":{\"h\":\"Freertos\"},\"155\":{\"h\":\"Lvgl\"},\"156\":{\"h\":\"通信协议\"},\"157\":{\"h\":\"数学物理\"},\"158\":{\"h\":\"科学基础知识\"},\"159\":{\"h\":\"C\"},\"160\":{\"h\":\"编程语言\"},\"161\":{\"h\":\"Java\"},\"162\":{\"h\":\"安卓\"},\"163\":{\"h\":\"Ex\"},\"164\":{\"h\":\"03. J A V A基本\"},\"165\":{\"h\":\"09.多线程\"},\"166\":{\"h\":\"10.虚拟机 J V M\"},\"167\":{\"h\":\"11.spring\"},\"168\":{\"h\":\"12.spring M V C\"},\"169\":{\"h\":\"13.springboot\"},\"170\":{\"h\":\"14.工作流\"}},\"dirtCount\":0,\"index\":[[\"工作流\",{\"0\":{\"170\":1}}],[\"工具\",{\"0\":{\"34\":1},\"1\":{\"33\":1,\"73\":1,\"91\":3}}],[\"安卓\",{\"0\":{\"162\":1}}],[\"安装模拟器\",{\"1\":{\"82\":1}}],[\"安装位置\",{\"1\":{\"76\":1}}],[\"安装jdk环境\",{\"1\":{\"82\":1}}],[\"安装jdk\",{\"0\":{\"76\":1}}],[\"安装\",{\"1\":{\"34\":1}}],[\"安装cmake\",{\"0\":{\"34\":1}}],[\"科学基础知识\",{\"0\":{\"158\":1}}],[\"数学物理\",{\"0\":{\"157\":1}}],[\"数据结构和算法\",{\"0\":{\"149\":1}}],[\"数据库密码\",{\"1\":{\"138\":1}}],[\"数据库用户名\",{\"1\":{\"138\":1}}],[\"数据库连接\",{\"1\":{\"138\":1}}],[\"数据库驱动\",{\"1\":{\"138\":1}}],[\"数据链路层\",{\"1\":{\"72\":1}}],[\"数据输出\",{\"1\":{\"57\":1}}],[\"数据输入\",{\"1\":{\"57\":1}}],[\"数据以位的形式通过单个引脚进行传输\",{\"1\":{\"56\":1}}],[\"数据位数\",{\"1\":{\"48\":1}}],[\"数据交互架构\",{\"1\":{\"3\":1}}],[\"硬件\",{\"0\":{\"151\":1}}],[\"硬件控制\",{\"1\":{\"56\":1}}],[\"任务审批\",{\"0\":{\"147\":1,\"148\":1}}],[\"发起一个流程\",{\"0\":{\"143\":1,\"144\":1}}],[\"查询一个待办任务\",{\"0\":{\"146\":1}}],[\"查询待办\",{\"0\":{\"145\":1}}],[\"查询所有\",{\"1\":{\"142\":1}}],[\"查询流程\",{\"0\":{\"142\":1}}],[\"查进程\",{\"1\":{\"103\":1}}],[\"模型\",{\"1\":{\"141\":1}}],[\"关键\",{\"1\":{\"141\":1,\"142\":1,\"144\":1,\"146\":1,\"148\":1}}],[\"关键字\",{\"0\":{\"80\":1},\"1\":{\"80\":1}}],[\"部署流程\",{\"0\":{\"140\":1,\"141\":1},\"1\":{\"141\":1}}],[\"部署架构\",{\"1\":{\"3\":1}}],[\"生成数据表\",{\"0\":{\"138\":1,\"139\":1}}],[\"生成执行文件\",{\"1\":{\"36\":1}}],[\"官网\",{\"0\":{\"135\":1}}],[\"实例数据\",{\"1\":{\"133\":1}}],[\"实现的\",{\"1\":{\"80\":1}}],[\"实现不同网络之间的数据传输\",{\"1\":{\"72\":1}}],[\"实现了同时的双向数据传输\",{\"1\":{\"56\":1}}],[\"偏向锁持有者\",{\"1\":{\"133\":1}}],[\"哈希码\",{\"1\":{\"133\":1}}],[\"哈希查找\",{\"0\":{\"19\":1}}],[\"算法\",{\"1\":{\"132\":1}}],[\"七\",{\"0\":{\"132\":1}}],[\"六\",{\"0\":{\"131\":1}}],[\"五\",{\"0\":{\"130\":1}}],[\"本地方法栈\",{\"0\":{\"129\":1}}],[\"四\",{\"0\":{\"129\":1}}],[\"四大组件\",{\"0\":{\"83\":1,\"85\":1}}],[\"三\",{\"0\":{\"128\":1}}],[\"元空间\",{\"1\":{\"127\":1}}],[\"老年代\",{\"1\":{\"127\":1}}],[\"新生代\",{\"1\":{\"127\":1}}],[\"新建工程\",{\"0\":{\"41\":1}}],[\"结构\",{\"1\":{\"127\":1,\"128\":1,\"130\":1}}],[\"堆\",{\"0\":{\"127\":1}}],[\"堆排序\",{\"0\":{\"11\":1}}],[\"虚拟机栈\",{\"0\":{\"128\":1}}],[\"虚拟机\",{\"0\":{\"125\":1,\"166\":1}}],[\"版本锁\",{\"1\":{\"111\":1}}],[\"版本号\",{\"1\":{\"36\":1}}],[\"邮戳锁\",{\"1\":{\"111\":1}}],[\"读写锁\",{\"1\":{\"111\":1}}],[\"独占锁\",{\"1\":{\"111\":1}}],[\"创建线程\",{\"1\":{\"111\":1}}],[\"创建工程\",{\"1\":{\"82\":1}}],[\"多线程控制\",{\"1\":{\"111\":1}}],[\"多线程\",{\"0\":{\"111\":1,\"165\":1}}],[\"拷贝\",{\"0\":{\"110\":1}}],[\"代理\",{\"0\":{\"109\":1}}],[\"代码域\",{\"1\":{\"29\":1}}],[\"反射\",{\"0\":{\"108\":1}}],[\"死锁排查\",{\"1\":{\"103\":1}}],[\"静态同步方法\",{\"1\":{\"103\":1}}],[\"静态注册无需担忧广播接收器是否被关闭\",{\"1\":{\"84\":1}}],[\"解锁\",{\"1\":{\"103\":1}}],[\"解压\",{\"1\":{\"69\":1}}],[\"加锁\",{\"1\":{\"103\":1}}],[\"管程\",{\"1\":{\"103\":1}}],[\"管理和终止会话\",{\"1\":{\"72\":1}}],[\"原理\",{\"1\":{\"103\":1}}],[\"理解无锁\",{\"1\":{\"103\":1}}],[\"主要是解决锁分配给哪个线程的问题\",{\"1\":{\"103\":1}}],[\"主设备和从设备可以同时发送和接收数据\",{\"1\":{\"56\":1}}],[\"抽象队列同步器\",{\"1\":{\"103\":1}}],[\"异步任务接口\",{\"1\":{\"102\":1}}],[\"守护线程\",{\"1\":{\"102\":1}}],[\"具体唤醒哪一个则是随机的\",{\"1\":{\"102\":1}}],[\"会唤醒一个在共享变量上wait等待的线程\",{\"1\":{\"102\":1}}],[\"会话层\",{\"1\":{\"72\":1}}],[\"函数唤醒共享变量上的所有wait挂起的线程\",{\"1\":{\"102\":1}}],[\"函数一个线程在调用共享对象的notify\",{\"1\":{\"102\":1}}],[\"函数地址了么\",{\"1\":{\"73\":1}}],[\"返回值void\",{\"1\":{\"102\":1}}],[\"无锁\",{\"1\":{\"111\":1}}],[\"无参\",{\"1\":{\"102\":1}}],[\"无线局域网技术\",{\"1\":{\"72\":1}}],[\"无线信号等\",{\"1\":{\"72\":1}}],[\"唤醒\",{\"1\":{\"102\":1}}],[\"锁的8种现象\",{\"1\":{\"103\":1}}],[\"锁\",{\"0\":{\"103\":1},\"1\":{\"101\":1}}],[\"线程通信\",{\"1\":{\"111\":1}}],[\"线程等待\",{\"1\":{\"111\":1}}],[\"线程休眠\",{\"1\":{\"111\":1}}],[\"线程中断\",{\"1\":{\"102\":1}}],[\"线程睡眠\",{\"1\":{\"102\":1}}],[\"线程创建\",{\"1\":{\"102\":1}}],[\"线程控制\",{\"0\":{\"102\":1},\"1\":{\"101\":1}}],[\"线性布局\",{\"1\":{\"86\":1}}],[\"两份内容\",{\"1\":{\"101\":1}}],[\"集合类\",{\"0\":{\"99\":1,\"107\":1}}],[\"释放内存\",{\"1\":{\"94\":1}}],[\"描述\",{\"1\":{\"94\":1}}],[\"遍历网卡列表并打印信息\",{\"1\":{\"94\":1}}],[\"获取网卡列表\",{\"1\":{\"94\":1}}],[\"获取缓冲区大小\",{\"1\":{\"94\":1}}],[\"卸载键盘钩子\",{\"1\":{\"93\":1}}],[\"等待通知方法是object类中的方法\",{\"1\":{\"102\":1}}],[\"等待\",{\"1\":{\"102\":1}}],[\"等待键盘事件\",{\"1\":{\"93\":1}}],[\"等其他类似系统的区别之处\",{\"1\":{\"33\":1}}],[\"消息循环\",{\"1\":{\"93\":1}}],[\"keyboard\",{\"1\":{\"93\":1}}],[\"keydown\",{\"1\":{\"93\":1}}],[\"kbdllhookstruct\",{\"1\":{\"93\":2}}],[\"kibana\",{\"0\":{\"2\":1}}],[\"局部变量\",{\"1\":{\"92\":1}}],[\"局部变量寄存器\",{\"1\":{\"91\":1}}],[\"要注入的so\",{\"1\":{\"92\":1}}],[\"功能实现注入\",{\"1\":{\"92\":1}}],[\"功率\",{\"1\":{\"64\":1}}],[\"圈圈助手\",{\"1\":{\"92\":1}}],[\"|\",{\"1\":{\"91\":1}}],[\"过程\",{\"1\":{\"91\":1}}],[\"变量寄存器\",{\"1\":{\"91\":1}}],[\"支持所有类型\",{\"1\":{\"91\":1}}],[\"寄存器命名法\",{\"1\":{\"92\":1}}],[\"寄存器的命名法\",{\"1\":{\"91\":1}}],[\"寄存器\",{\"1\":{\"91\":1}}],[\"记录包名图标等\",{\"1\":{\"89\":1}}],[\"复制dex\",{\"1\":{\"89\":1}}],[\"复制apk\",{\"1\":{\"89\":1}}],[\"到\",{\"1\":{\"89\":4}}],[\"系统自带的应用程序\",{\"1\":{\"89\":1}}],[\"存放java代码可执行文件\",{\"1\":{\"88\":1}}],[\"存放so文件\",{\"1\":{\"88\":1}}],[\"签名文件\",{\"1\":{\"88\":1}}],[\"资源索引表\",{\"1\":{\"88\":1}}],[\"滚动视图\",{\"1\":{\"87\":1}}],[\"已不推荐使用\",{\"1\":{\"86\":1}}],[\"绝对布局\",{\"1\":{\"86\":1}}],[\"约束布局\",{\"1\":{\"86\":1}}],[\"网格布局\",{\"1\":{\"86\":1}}],[\"网络层\",{\"1\":{\"72\":1}}],[\"每个子视图覆盖前一个子视图\",{\"1\":{\"86\":1}}],[\"每个程序会有多个\",{\"1\":{\"84\":1}}],[\"帧布局\",{\"1\":{\"86\":2}}],[\"允许子视图相对于父视图或其他子视图进行定位\",{\"1\":{\"86\":1}}],[\"相对布局\",{\"1\":{\"86\":1}}],[\"将子视图放置在规则的网格中\",{\"1\":{\"86\":1}}],[\"将子视图放置在行和列的网格中\",{\"1\":{\"86\":1}}],[\"将子视图按照水平或垂直方向进行排列\",{\"1\":{\"86\":1}}],[\"将ppp封装在以太网帧中\",{\"1\":{\"72\":1}}],[\"点击\",{\"1\":{\"85\":1}}],[\"该app订阅的广播在触发时也会对它起作用\",{\"1\":{\"84\":1}}],[\"也就是说哪怕app本身未启动\",{\"1\":{\"84\":1}}],[\"广播也就失效了\",{\"1\":{\"84\":1}}],[\"广播接收者的注册有两种方法\",{\"1\":{\"84\":1}}],[\"广播接收器也是打开着的\",{\"1\":{\"84\":1}}],[\"广播接收器没有用户界面\",{\"1\":{\"84\":1}}],[\"广播接收器并不是直接就可以看到的\",{\"1\":{\"84\":1}}],[\"广播接收器\",{\"1\":{\"84\":1}}],[\"动态注册广播接收器特点是当用来注册的activity关掉后\",{\"1\":{\"84\":1}}],[\"播放声音等\",{\"1\":{\"84\":1}}],[\"震动\",{\"1\":{\"84\":1}}],[\"然而\",{\"1\":{\"84\":1}}],[\"然后写入我们的dll的路径\",{\"1\":{\"73\":1}}],[\"然后再依一般的建构方式使用\",{\"1\":{\"33\":1}}],[\"进行接收并做出响应\",{\"1\":{\"84\":1}}],[\"你的应用可以使用它对外部事件进行过滤\",{\"1\":{\"84\":1}}],[\"你们想\",{\"1\":{\"73\":1}}],[\"甚至还可以对它进行过滤然后进行响应\",{\"1\":{\"84\":1}}],[\"作用就是接收或者发送通知\",{\"1\":{\"84\":1}}],[\"作用就是我们在使用这些第三方软件的时候\",{\"1\":{\"84\":1}}],[\"作为前缀\",{\"1\":{\"84\":1}}],[\"开发人员不会直接使用contentprovider类的对象\",{\"1\":{\"84\":1}}],[\"开发人员需要在应用程序配置文件中声明全部的service\",{\"1\":{\"84\":1}}],[\"且必须存储在一个内容提供者中\",{\"1\":{\"84\":1}}],[\"内容提供商这个组件是专门为第三方应用而设计的\",{\"1\":{\"84\":1}}],[\"内容提供商\",{\"1\":{\"84\":1}}],[\"必须同时死\",{\"1\":{\"84\":1}}],[\"大多数是通过contentresolver对象实现对contentprovider的操作\",{\"1\":{\"84\":1}}],[\"大有\",{\"1\":{\"84\":1}}],[\"大师篇mdk编译过程\",{\"0\":{\"27\":1}}],[\"使用固定的坐标位置来放置子视图\",{\"1\":{\"86\":1}}],[\"使用约束条件定义子视图之间的关系\",{\"1\":{\"86\":1}}],[\"使用<service><\",{\"1\":{\"84\":1}}],[\"使用bindservice\",{\"1\":{\"84\":1}}],[\"使用汇编程序将程序集级代码\",{\"1\":{\"70\":1}}],[\"因此service组件没有图形用户界面\",{\"1\":{\"84\":1}}],[\"因此\",{\"1\":{\"84\":1}}],[\"因为android没有提供所有应用共同访问的公共存储区\",{\"1\":{\"84\":1}}],[\"因为在安卓系统里运行的所有的程序\",{\"1\":{\"84\":1}}],[\"因为这个函数在系统的kernel32\",{\"1\":{\"73\":1}}],[\"即使启动服务的组件已经被销毁\",{\"1\":{\"84\":1}}],[\"即释放总线\",{\"1\":{\"52\":1}}],[\"区别\",{\"1\":{\"84\":1}}],[\"与springboot集成\",{\"0\":{\"136\":1}}],[\"与bindservice\",{\"1\":{\"84\":1}}],[\"与处理结束后会产生一个后缀为\",{\"1\":{\"70\":1}}],[\"方法二\",{\"0\":{\"139\":1}}],[\"方法区\",{\"0\":{\"130\":1}}],[\"方法后\",{\"1\":{\"102\":1}}],[\"方法是thread类直接提供的\",{\"1\":{\"102\":1}}],[\"方法\",{\"1\":{\"91\":1}}],[\"方法启用服务\",{\"1\":{\"84\":1}}],[\"方法启动的\",{\"1\":{\"84\":1}}],[\"方法启动服务时\",{\"1\":{\"84\":1}}],[\"方法停止\",{\"1\":{\"84\":2}}],[\"方法被调用\",{\"1\":{\"84\":1}}],[\"方法绑定到服务时\",{\"1\":{\"84\":1}}],[\"绑定\",{\"1\":{\"84\":1}}],[\"服务也就终止\",{\"1\":{\"84\":1}}],[\"服务需要在完成任务后调用stopself\",{\"1\":{\"84\":1}}],[\"服务处于bound状态\",{\"1\":{\"84\":1}}],[\"服务处于started状态\",{\"1\":{\"84\":1}}],[\"服务监控\",{\"1\":{\"0\":1}}],[\"调用操作系统方法\",{\"1\":{\"129\":1}}],[\"调用者一旦退出\",{\"1\":{\"84\":1}}],[\"调用者与服务绑定在了一起\",{\"1\":{\"84\":1}}],[\"调用startservice\",{\"1\":{\"84\":1}}],[\"调研\",{\"1\":{\"3\":1}}],[\"此时播放的音乐就是由service在负责控制\",{\"1\":{\"84\":1}}],[\"此时各个器件的输出级场效应管均处在截止状态\",{\"1\":{\"52\":1}}],[\"当前线程执行位置\",{\"1\":{\"131\":1}}],[\"当服务是started状态时\",{\"1\":{\"84\":1}}],[\"当应用程序组件调用bindservice\",{\"1\":{\"84\":1}}],[\"当应用程序组件\",{\"1\":{\"84\":1}}],[\"当我们打开手机上音乐播放器并将它放到后台\",{\"1\":{\"84\":1}}],[\"当scl为高期间\",{\"1\":{\"53\":2}}],[\"举个简单例子\",{\"1\":{\"84\":1}}],[\"不需要通过编译的资源\",{\"1\":{\"88\":1}}],[\"不求同时生\",{\"1\":{\"84\":1}}],[\"不过service不能够自己运行\",{\"1\":{\"84\":1}}],[\"不就知道程序里面的loadlibrary\",{\"1\":{\"73\":1}}],[\"否则系统将不识别也不执行该activity\",{\"1\":{\"84\":1}}],[\"窗口\",{\"1\":{\"84\":1}}],[\"组成\",{\"1\":{\"84\":1}}],[\"执行oncreate方法\",{\"1\":{\"82\":1}}],[\"执行文件\",{\"1\":{\"36\":1}}],[\"日志打印\",{\"1\":{\"82\":1}}],[\"尝试一个可能抛出异常的程序块\",{\"1\":{\"80\":1}}],[\"抛出一个异常\",{\"1\":{\"80\":1}}],[\"指向当前实例对象的引用\",{\"1\":{\"80\":1}}],[\"指定cmake\",{\"1\":{\"36\":1}}],[\"分布式锁\",{\"1\":{\"112\":1}}],[\"分布式事务\",{\"0\":{\"112\":1}}],[\"分配足够的缓冲区\",{\"1\":{\"94\":1}}],[\"分别是程序动态注册和androidmanifest文件中进行静态注册\",{\"1\":{\"84\":1}}],[\"分支语句结构的引导词\",{\"1\":{\"80\":1}}],[\"分块查找\",{\"0\":{\"18\":1}}],[\"单精度或双精度浮点数\",{\"1\":{\"80\":1}}],[\"单精度浮点数类型\",{\"1\":{\"80\":1}}],[\"短整数类型\",{\"1\":{\"80\":1}}],[\"从成员方法中返回数据\",{\"1\":{\"80\":1}}],[\"易读和易用\",{\"1\":{\"80\":1}}],[\"共用模式\",{\"1\":{\"80\":1}}],[\"保存类信息\",{\"1\":{\"130\":1}}],[\"保护模式\",{\"1\":{\"80\":1}}],[\"保留关键字\",{\"1\":{\"80\":2}}],[\"私用模式\",{\"1\":{\"80\":1}}],[\"包名\",{\"1\":{\"89\":1}}],[\"包名称\",{\"1\":{\"89\":1}}],[\"包\",{\"1\":{\"80\":1}}],[\"包括数据加密\",{\"1\":{\"72\":1}}],[\"包括分段\",{\"1\":{\"72\":1}}],[\"长整数类型\",{\"1\":{\"80\":1}}],[\"接口\",{\"1\":{\"80\":1,\"102\":2}}],[\"接线原理图\",{\"0\":{\"58\":1}}],[\"整体就是一个抽象的fifo队列来完成资源获取线程的排队工作\",{\"1\":{\"103\":1}}],[\"整数类型\",{\"1\":{\"80\":1}}],[\"整个程序代码由编译器软件一次性解析\",{\"1\":{\"70\":1}}],[\"条件语句的引导词\",{\"1\":{\"80\":1}}],[\"对齐填充\",{\"1\":{\"133\":1}}],[\"对象标记\",{\"1\":{\"133\":1}}],[\"对象头\",{\"1\":{\"133\":1}}],[\"对象布局\",{\"0\":{\"133\":1}}],[\"对象锁\",{\"1\":{\"103\":1}}],[\"对象代码\",{\"1\":{\"28\":2}}],[\"对于接口\",{\"1\":{\"80\":1}}],[\"对于类\",{\"1\":{\"80\":1}}],[\"枚举\",{\"1\":{\"80\":1}}],[\"双亲委派\",{\"1\":{\"126\":1}}],[\"双精度浮点数类型\",{\"1\":{\"80\":1}}],[\"双向二线制同步串行总线\",{\"1\":{\"50\":1}}],[\"默认\",{\"1\":{\"80\":1}}],[\"回到一个块的开始处\",{\"1\":{\"80\":1}}],[\"没有具体含义\",{\"1\":{\"80\":2}}],[\"声明当前成员方法没有返回值\",{\"1\":{\"80\":1}}],[\"声明不用序列化的成员域\",{\"1\":{\"80\":1}}],[\"声明在当前定义的成员方法中所有需要抛出的异常\",{\"1\":{\"80\":1}}],[\"声明一个类\",{\"1\":{\"80\":1}}],[\"声明布尔类型的关键字\",{\"1\":{\"80\":1}}],[\"字符\",{\"1\":{\"141\":1}}],[\"字符串\",{\"0\":{\"95\":1},\"1\":{\"95\":1}}],[\"字符类型\",{\"1\":{\"80\":1}}],[\"字节流\",{\"1\":{\"141\":1}}],[\"字节码\",{\"1\":{\"92\":1}}],[\"字节类型\",{\"1\":{\"80\":1}}],[\"字段\",{\"1\":{\"91\":1}}],[\"断言\",{\"1\":{\"80\":1}}],[\"表格布局\",{\"1\":{\"86\":1}}],[\"表达式遵循ieee\",{\"1\":{\"80\":1}}],[\"表明两个或者多个变量必须同步地发生变化\",{\"1\":{\"80\":1}}],[\"表明一段代码需要同步执行\",{\"1\":{\"80\":1}}],[\"表明一个类实现了给定的接口\",{\"1\":{\"80\":1}}],[\"表明一个类不能派生出子类\",{\"1\":{\"80\":1}}],[\"表明一个类型是另一个类型的子类型\",{\"1\":{\"80\":1}}],[\"表明一个默认的分支\",{\"1\":{\"80\":1}}],[\"表明当前对象的父类型的引用或者父类型的构造方法\",{\"1\":{\"80\":1}}],[\"表明当条件不成立时的分支\",{\"1\":{\"80\":1}}],[\"表明具有静态属性\",{\"1\":{\"80\":1}}],[\"表明要访问指定的类或包\",{\"1\":{\"80\":1}}],[\"表明类或者成员方法具有抽象属性\",{\"1\":{\"80\":1}}],[\"表示该数据由contentprovider来管理\",{\"1\":{\"84\":1}}],[\"表示其中的一个分支\",{\"1\":{\"80\":1}}],[\"表示层\",{\"1\":{\"72\":1}}],[\"含义\",{\"1\":{\"80\":1}}],[\"序号\",{\"1\":{\"80\":1,\"94\":1}}],[\"引入我们的dll从而注入到程序内部\",{\"1\":{\"73\":1}}],[\"引脚定义\",{\"0\":{\"57\":1}}],[\"程序计数器\",{\"0\":{\"131\":1}}],[\"程序就自己\",{\"1\":{\"73\":1}}],[\"程序的组成\",{\"0\":{\"29\":1}}],[\"用户线程\",{\"1\":{\"102\":1}}],[\"用户可以打开它并获取消息\",{\"1\":{\"84\":1}}],[\"用来声明fp\",{\"1\":{\"80\":1}}],[\"用来声明一个方法是由与计算机相关的语言\",{\"1\":{\"80\":1}}],[\"用来声明一个基本肯定会被执行到的语句块\",{\"1\":{\"80\":1}}],[\"用来创建新实例对象\",{\"1\":{\"80\":1}}],[\"用来测试一个对象是否是指定类型的实例对象\",{\"1\":{\"80\":1}}],[\"用来定义常量\",{\"1\":{\"80\":1}}],[\"用来说明最终属性\",{\"1\":{\"80\":1}}],[\"用来捕捉异常\",{\"1\":{\"80\":1}}],[\"用来进行程序调试\",{\"1\":{\"80\":1}}],[\"用在循环结构中\",{\"1\":{\"80\":1}}],[\"用在条件语句中\",{\"1\":{\"80\":1}}],[\"用在do\",{\"1\":{\"80\":1}}],[\"用在switch语句中\",{\"1\":{\"80\":1}}],[\"用在switch语句之中\",{\"1\":{\"80\":1}}],[\"用在异常处理中\",{\"1\":{\"80\":1}}],[\"用远程线程方式去执行这个这个函数\",{\"1\":{\"73\":1}}],[\"用于处理交互式效果和用户界面行为的容器布局\",{\"1\":{\"86\":1}}],[\"用于处理异常情况\",{\"1\":{\"80\":1}}],[\"用于在宽带接入网络中建立和维护连接\",{\"1\":{\"72\":1}}],[\"用于在点对点或点对多点的通信链路上提供可靠的数据传输\",{\"1\":{\"72\":1}}],[\"用于在点对点连接上建立和维护数据链路连接\",{\"1\":{\"72\":1}}],[\"用于编写低级指令\",{\"1\":{\"70\":1}}],[\"知道这个地址后\",{\"1\":{\"73\":1}}],[\"址\",{\"1\":{\"73\":1}}],[\"地\",{\"1\":{\"73\":1}}],[\"地址\",{\"1\":{\"73\":1}}],[\"比如这个注入工具里面自己获取自己的loadlibrary\",{\"1\":{\"73\":1}}],[\"那这就好办了\",{\"1\":{\"73\":1}}],[\"那么它里面\",{\"1\":{\"73\":1}}],[\"那么需要用到一个函数\",{\"1\":{\"73\":1}}],[\"既然所有软件这个dll的基址都是一样\",{\"1\":{\"73\":1}}],[\"我们只需要在我们自己的程序\",{\"1\":{\"73\":1}}],[\"我们其实主要是要用到它里面的一个函数\",{\"1\":{\"73\":1}}],[\"我们使用汇编语言\",{\"1\":{\"70\":1}}],[\"所有他是最基本的模块\",{\"1\":{\"84\":1}}],[\"所有软件都会引入包含这个dll\",{\"1\":{\"73\":1}}],[\"所以在所有软件里面\",{\"1\":{\"73\":1}}],[\"所以通讯双方需要约定好波特率\",{\"1\":{\"48\":1}}],[\"首先我们知道在windows上面如果引入一个dll的话\",{\"1\":{\"73\":1}}],[\"注入原理\",{\"1\":{\"73\":1}}],[\"软件自动化控制\",{\"0\":{\"73\":1}}],[\"应用层\",{\"1\":{\"72\":1}}],[\"压缩和格式转换\",{\"1\":{\"72\":1}}],[\"处理数据的表示格式\",{\"1\":{\"72\":1}}],[\"处理分组的路由和转发\",{\"1\":{\"72\":1}}],[\"建立\",{\"1\":{\"72\":1}}],[\"流量控制和错误恢复\",{\"1\":{\"72\":1}}],[\"传输层\",{\"1\":{\"72\":1}}],[\"传输协议\",{\"0\":{\"48\":1}}],[\"定义了无线数据链路层的帧格式和协议\",{\"1\":{\"72\":1}}],[\"定义了数据链路层的帧格式和mac地址的使用规则\",{\"1\":{\"72\":1}}],[\"通知可以用很多种方式来吸引用户的注意力\",{\"1\":{\"84\":1}}],[\"通俗的来说广播接收器更像是一种传递组件\",{\"1\":{\"84\":1}}],[\"通讯录数据被多个应用程序使用\",{\"1\":{\"84\":1}}],[\"通过进程打开程序获取程序的句柄\",{\"1\":{\"73\":1}}],[\"通常用于串行线路上的ip数据传输\",{\"1\":{\"72\":1}}],[\"通信协议\",{\"0\":{\"156\":1}}],[\"通信的主设备和从设备需要共享时钟信号\",{\"1\":{\"56\":1}}],[\"通信\",{\"1\":{\"56\":1}}],[\"一\",{\"0\":{\"102\":1,\"126\":1}}],[\"一般来说是在状态栏上放一个持久的图标\",{\"1\":{\"84\":1}}],[\"一个activity通常就是一个单独的屏幕\",{\"1\":{\"84\":1}}],[\"一个限流元件\",{\"1\":{\"63\":1}}],[\"一种访问控制方式\",{\"1\":{\"80\":3}}],[\"一种循环结构的引导词\",{\"1\":{\"80\":1}}],[\"一种简单的数据链路层协议\",{\"1\":{\"72\":1}}],[\"一种数据链路层协议\",{\"1\":{\"72\":1}}],[\"hhook\",{\"1\":{\"93\":1}}],[\"h>\",{\"1\":{\"93\":2,\"94\":4}}],[\"hook\",{\"1\":{\"92\":2,\"93\":4}}],[\"horizontalscrollview\",{\"1\":{\"87\":1}}],[\"home\",{\"1\":{\"77\":4}}],[\"hello\",{\"1\":{\"81\":1}}],[\"html\",{\"1\":{\"75\":1}}],[\"http\",{\"1\":{\"71\":1,\"138\":4}}],[\"https\",{\"1\":{\"34\":1,\"39\":1,\"69\":1,\"75\":1,\"82\":1,\"135\":1}}],[\"high\",{\"1\":{\"72\":1}}],[\"hdlc\",{\"1\":{\"72\":1}}],[\"是重量级基础框架及整个juc体系的基石\",{\"1\":{\"103\":1}}],[\"是用来实现锁或者其它同步器组件的公共基础部分的抽象实现\",{\"1\":{\"103\":1}}],[\"是一个扩展的相对布局\",{\"1\":{\"86\":1}}],[\"是一种高速的\",{\"1\":{\"55\":1}}],[\"是由其他组件调用startservice\",{\"1\":{\"84\":1}}],[\"是最常用的局域网技术\",{\"1\":{\"72\":1}}],[\"以太网\",{\"1\":{\"72\":1}}],[\"以确保数据的同步传输\",{\"1\":{\"56\":1}}],[\"例如闪动背灯\",{\"1\":{\"84\":1}}],[\"例如\",{\"1\":{\"80\":1,\"84\":1}}],[\"例如http协议\",{\"1\":{\"72\":1}}],[\"例如加密协议和压缩协议\",{\"1\":{\"72\":1}}],[\"例如会话控制协议\",{\"1\":{\"72\":1}}],[\"例如tcp协议和udp协议\",{\"1\":{\"72\":1}}],[\"例如ip协议\",{\"1\":{\"72\":1}}],[\"例如拨号连接或串行链路\",{\"1\":{\"72\":1}}],[\"例如以太网协议\",{\"1\":{\"72\":1}}],[\"例如电缆\",{\"1\":{\"72\":1}}],[\"确保可靠的数据传输\",{\"1\":{\"72\":1}}],[\"提前跳出一个块\",{\"1\":{\"80\":1}}],[\"提供网络应用服务和用户接口\",{\"1\":{\"72\":1}}],[\"提供端到端的可靠数据传输\",{\"1\":{\"72\":1}}],[\"提供对物理层传输的比特流进行分帧和差错校验\",{\"1\":{\"72\":1}}],[\"提高液晶屏\",{\"0\":{\"30\":1,\"31\":1}}],[\"光纤\",{\"1\":{\"72\":1}}],[\"负责传输数据的物理媒介和比特流\",{\"1\":{\"72\":1}}],[\"物理层\",{\"1\":{\"72\":1}}],[\"常用组件\",{\"1\":{\"86\":1}}],[\"常用的网络协议\",{\"1\":{\"72\":1}}],[\"常量\",{\"1\":{\"71\":1}}],[\"计算机网络\",{\"0\":{\"72\":1}}],[\"宏定义\",{\"1\":{\"71\":1}}],[\"宏扩展\",{\"1\":{\"70\":1}}],[\"xsd\",{\"1\":{\"138\":1}}],[\"xsi\",{\"1\":{\"138\":1}}],[\"xsi=\",{\"1\":{\"138\":1}}],[\"xmlschema\",{\"1\":{\"138\":1}}],[\"xmlns\",{\"1\":{\"138\":1}}],[\"xmlns=\",{\"1\":{\"138\":1}}],[\"xml\",{\"0\":{\"137\":1},\"1\":{\"88\":1,\"89\":1,\"138\":2,\"141\":1}}],[\"xml配置文件中声明\",{\"1\":{\"84\":1}}],[\"xxx\",{\"1\":{\"71\":1,\"89\":1,\"91\":5,\"93\":1,\"141\":2}}],[\"xxxxx\",{\"1\":{\"71\":1}}],[\"x86\",{\"1\":{\"69\":1,\"89\":1,\"94\":1}}],[\"基础\",{\"0\":{\"105\":1}}],[\"基本数据类型之一\",{\"1\":{\"80\":8}}],[\"基本操作\",{\"0\":{\"79\":1}}],[\"基本关键字\",{\"0\":{\"71\":1}}],[\"基尔霍夫定律\",{\"1\":{\"61\":1}}],[\"操作系统中为\",{\"1\":{\"70\":1}}],[\"在单个视图上堆叠子视图\",{\"1\":{\"86\":1}}],[\"在安卓系统中\",{\"1\":{\"84\":1}}],[\"在这个根本上才可以进行其他的工作\",{\"1\":{\"84\":1}}],[\"在以太网上运行的一种协议\",{\"1\":{\"72\":1}}],[\"在linux\",{\"1\":{\"70\":1}}],[\"在微控制器程序中\",{\"1\":{\"70\":1}}],[\"其他应用可以通过contentresolver类从该内容提供者中获取或存入数据\",{\"1\":{\"84\":1}}],[\"其生命周期与启动它的组件无关\",{\"1\":{\"84\":1}}],[\"其扩展名为\",{\"1\":{\"70\":1}}],[\"其中包含机器语言中的函数定义\",{\"1\":{\"70\":1}}],[\"库文件是一些预定义的文件\",{\"1\":{\"70\":1}}],[\"连接器\",{\"1\":{\"70\":1}}],[\"连接\",{\"1\":{\"70\":1,\"72\":1}}],[\"十六进制代码\",{\"1\":{\"70\":1}}],[\"十六进制形式\",{\"1\":{\"70\":1}}],[\"称为目标代码\",{\"1\":{\"70\":1}}],[\"转换为机器可理解的代码\",{\"1\":{\"70\":1}}],[\"文件\",{\"1\":{\"70\":1,\"84\":1,\"141\":1}}],[\"文件包含\",{\"1\":{\"70\":1}}],[\"汇编程序是一个预先编写的程序\",{\"1\":{\"70\":1}}],[\"汇编\",{\"1\":{\"70\":1}}],[\"汇编代码是一种简单的英文语言\",{\"1\":{\"70\":1}}],[\"汇编代码\",{\"1\":{\"28\":1}}],[\"语法分析\",{\"1\":{\"70\":1}}],[\"语言\",{\"1\":{\"36\":1}}],[\"临时文件转换为具有汇编级指令\",{\"1\":{\"70\":1}}],[\"中运行\",{\"1\":{\"84\":1}}],[\"中也作用于声明接口函数的默认实现\",{\"1\":{\"80\":1}}],[\"中的通信会话\",{\"1\":{\"72\":1}}],[\"中的编译阶段使用内置编译器软件将\",{\"1\":{\"70\":1}}],[\"中级dma\",{\"0\":{\"25\":1}}],[\"删除所有的注释\",{\"1\":{\"70\":1}}],[\"译过程的第一步预就是预处理\",{\"1\":{\"70\":1}}],[\"预处理器主要完成以下任务\",{\"1\":{\"70\":1}}],[\"预处理\",{\"1\":{\"70\":1}}],[\"添加\",{\"1\":{\"69\":1}}],[\"添加path\",{\"1\":{\"34\":1}}],[\"配置清单文件\",{\"1\":{\"88\":1}}],[\"配置path\",{\"0\":{\"77\":1}}],[\"配置\",{\"1\":{\"69\":1}}],[\"配置到path\",{\"1\":{\"69\":1}}],[\"bean>\",{\"1\":{\"138\":1}}],[\"beans>\",{\"1\":{\"138\":1}}],[\"beans\",{\"1\":{\"138\":4}}],[\"because\",{\"1\":{\"138\":1,\"139\":1}}],[\"baksmali\",{\"1\":{\"91\":2}}],[\"buildprocessengine\",{\"1\":{\"139\":1}}],[\"builds\",{\"1\":{\"69\":1}}],[\"buffer\",{\"1\":{\"94\":1}}],[\"button\",{\"1\":{\"85\":4}}],[\"broadcast\",{\"1\":{\"84\":1}}],[\"break\",{\"1\":{\"80\":1}}],[\"boot<\",{\"1\":{\"137\":1}}],[\"boot\",{\"0\":{\"115\":1},\"1\":{\"137\":2}}],[\"boolean\",{\"1\":{\"80\":1}}],[\"bound\",{\"1\":{\"84\":1}}],[\"byte\",{\"1\":{\"80\":1}}],[\"binaries\",{\"1\":{\"69\":1}}],[\"bin\",{\"1\":{\"34\":1,\"77\":1}}],[\"感抗\",{\"1\":{\"67\":1}}],[\"容抗\",{\"1\":{\"66\":1}}],[\"容量大小\",{\"1\":{\"66\":1}}],[\"类元信息\",{\"1\":{\"133\":1}}],[\"类加载器\",{\"1\":{\"126\":1}}],[\"类加载过程\",{\"1\":{\"126\":1}}],[\"类加载\",{\"0\":{\"126\":1}}],[\"类锁\",{\"1\":{\"103\":1}}],[\"类\",{\"1\":{\"102\":1}}],[\"类型指针\",{\"1\":{\"133\":1}}],[\"类型\",{\"1\":{\"66\":1}}],[\"类似unix下的automake\",{\"1\":{\"33\":1}}],[\"法拉\",{\"1\":{\"66\":1}}],[\"最大可承受分得的电压\",{\"1\":{\"64\":1}}],[\"欧姆\",{\"1\":{\"64\":1}}],[\"欧姆定律\",{\"1\":{\"61\":1}}],[\"参数寄存器\",{\"1\":{\"91\":1}}],[\"参数\",{\"0\":{\"64\":1,\"66\":1}}],[\"它们可以启动一个activity或serice来响应它们收到的信息\",{\"1\":{\"84\":1}}],[\"它能够将信息接收\",{\"1\":{\"84\":1}}],[\"它是程序之间传递信息时的一种机制\",{\"1\":{\"84\":1}}],[\"它会为所有的应用准备一个内容窗口\",{\"1\":{\"84\":1}}],[\"它非常的灵活\",{\"1\":{\"84\":1}}],[\"它一般不需要与用户交互\",{\"1\":{\"84\":1}}],[\"它只能在安卓的后台运行\",{\"1\":{\"84\":1}}],[\"它只需要两根线即可在连接于总线上的器件之间传送信息\",{\"1\":{\"50\":1}}],[\"它的好处是统一数据访问方式\",{\"1\":{\"84\":1}}],[\"它的作用就是与安卓的其他逐渐进行交互\",{\"1\":{\"84\":1}}],[\"它的作用是一个框架或页面\",{\"1\":{\"84\":1}}],[\"它的地位和优先级别是与活动相似的\",{\"1\":{\"84\":1}}],[\"它的流程都必须在\",{\"1\":{\"84\":1}}],[\"它从汇编文件中获取基本指令\",{\"1\":{\"70\":1}}],[\"它将汇编代码转换为机器代码\",{\"1\":{\"70\":1}}],[\"它可限制通过它所连支路的电流大小\",{\"1\":{\"63\":1}}],[\"受控电源\",{\"1\":{\"61\":1}}],[\"电功率和能量\",{\"1\":{\"61\":1}}],[\"电流和电压的参考方向\",{\"0\":{\"61\":1}}],[\"电流\",{\"1\":{\"60\":1}}],[\"电压和电流源\",{\"1\":{\"61\":1}}],[\"电压\",{\"1\":{\"60\":1}}],[\"电容\",{\"0\":{\"62\":1,\"65\":1},\"1\":{\"60\":1}}],[\"电感\",{\"0\":{\"62\":1,\"67\":1},\"1\":{\"60\":1}}],[\"电阻大小\",{\"1\":{\"64\":1}}],[\"电阻的串联和并联\",{\"1\":{\"61\":1}}],[\"电阻元件\",{\"1\":{\"61\":1}}],[\"电阻\",{\"0\":{\"62\":1,\"63\":1},\"1\":{\"60\":1}}],[\"电路的等效变换\",{\"1\":{\"61\":1}}],[\"电路元件\",{\"1\":{\"61\":1}}],[\"电路和电路模型\",{\"0\":{\"60\":1}}],[\"电路基础\",{\"0\":{\"59\":1}}],[\"电平变化\",{\"0\":{\"54\":1}}],[\"电平\",{\"1\":{\"46\":1}}],[\"片选\",{\"1\":{\"57\":1}}],[\"时钟\",{\"1\":{\"57\":1}}],[\"时序\",{\"0\":{\"51\":1}}],[\"逐位进行\",{\"1\":{\"56\":1}}],[\"同步锁标记\",{\"1\":{\"133\":1}}],[\"同步方法\",{\"1\":{\"103\":1}}],[\"同步代码块\",{\"1\":{\"103\":1}}],[\"同步传输\",{\"1\":{\"56\":1}}],[\"同步的通信总线\",{\"1\":{\"55\":1}}],[\"并通过一个int类变量表示持有锁的状态\",{\"1\":{\"103\":1}}],[\"并通过终端窗口告诉我们源代码中存在的任何语法错误或警告\",{\"1\":{\"70\":1}}],[\"并发编程\",{\"0\":{\"101\":1}}],[\"并使其对所有应用程序可见\",{\"1\":{\"84\":1}}],[\"并且保护里面的数据\",{\"1\":{\"84\":1}}],[\"并且保留数据库\",{\"1\":{\"84\":1}}],[\"并且可以在后台无限期运行\",{\"1\":{\"84\":1}}],[\"并且在芯片的管脚上只占用四根线\",{\"1\":{\"55\":1}}],[\"并将其转换为特定于计算机类型\",{\"1\":{\"70\":1}}],[\"并不直接建构出最终的软件\",{\"1\":{\"33\":1}}],[\"全双工\",{\"1\":{\"55\":1,\"56\":1}}],[\"停止线程\",{\"1\":{\"111\":1}}],[\"停止信号也是一种电平跳变时序信号\",{\"1\":{\"53\":1}}],[\"停止信号\",{\"1\":{\"53\":1}}],[\"停止位\",{\"1\":{\"48\":1}}],[\"而且相当重要\",{\"1\":{\"84\":1}}],[\"而且都是使用同一份\",{\"1\":{\"73\":1}}],[\"而是通过硬件信号进行控制\",{\"1\":{\"56\":1}}],[\"而是产生标准的建构档\",{\"1\":{\"33\":1}}],[\"而不是一个电平信号\",{\"1\":{\"53\":2}}],[\"起始信号\",{\"1\":{\"53\":1}}],[\"起始位与停止位的定义\",{\"0\":{\"53\":1}}],[\"起始位\",{\"1\":{\"48\":1}}],[\"由两条信号线各自的上拉电阻把电平拉高\",{\"1\":{\"52\":1}}],[\"规定为总线的空闲状态\",{\"1\":{\"52\":1}}],[\"空闲状态\",{\"0\":{\"52\":1}}],[\"串行通信\",{\"1\":{\"56\":1}}],[\"串行时钟线\",{\"1\":{\"50\":1}}],[\"串行数据线\",{\"1\":{\"50\":1}}],[\"串口异步通讯中由于没有时钟信号\",{\"1\":{\"48\":1}}],[\"串口名\",{\"1\":{\"48\":1}}],[\"串口\",{\"0\":{\"45\":1}}],[\"校验位\",{\"1\":{\"48\":1}}],[\"波特率\",{\"1\":{\"48\":1}}],[\"groupid>\",{\"1\":{\"137\":4}}],[\"gridlayout\",{\"1\":{\"86\":1}}],[\"gc次数\",{\"1\":{\"133\":1}}],[\"gc标记\",{\"1\":{\"133\":1}}],[\"gc分别有哪几个\",{\"1\":{\"132\":1}}],[\"gc\",{\"0\":{\"132\":1}}],[\"gcc\",{\"1\":{\"70\":1}}],[\"gaa\",{\"1\":{\"94\":2}}],[\"gettaskservice\",{\"1\":{\"146\":1,\"148\":1}}],[\"getruntimeservice\",{\"1\":{\"144\":1}}],[\"getrepositoryservice\",{\"1\":{\"141\":1,\"142\":1}}],[\"getname\",{\"1\":{\"142\":1,\"146\":1}}],[\"getid\",{\"1\":{\"142\":1}}],[\"get\",{\"1\":{\"142\":2,\"146\":1}}],[\"getdefaultprocessengine\",{\"1\":{\"138\":1,\"141\":1,\"142\":1,\"144\":1,\"146\":1,\"148\":1}}],[\"getadaptersaddresses\",{\"1\":{\"94\":2}}],[\"getmessage\",{\"1\":{\"93\":1}}],[\"google\",{\"1\":{\"82\":1}}],[\"goto\",{\"1\":{\"80\":1}}],[\"g++\",{\"1\":{\"70\":4}}],[\"gnd\",{\"1\":{\"47\":2}}],[\"github\",{\"1\":{\"39\":1,\"69\":1}}],[\"设计模式\",{\"0\":{\"122\":1}}],[\"设置键盘钩子\",{\"1\":{\"93\":1}}],[\"设置项目名\",{\"1\":{\"36\":1}}],[\"设备2\",{\"1\":{\"47\":1}}],[\"设备1\",{\"1\":{\"47\":1}}],[\"标准\",{\"0\":{\"46\":1},\"1\":{\"46\":1}}],[\"第二步\",{\"0\":{\"138\":1,\"139\":1}}],[\"第二章\",{\"1\":{\"43\":1,\"61\":1}}],[\"第一个流程\",{\"1\":{\"141\":1}}],[\"第一个java程序\",{\"0\":{\"81\":1}}],[\"第一步\",{\"0\":{\"137\":1}}],[\"第一章\",{\"1\":{\"43\":1,\"59\":1}}],[\"第十一章\",{\"1\":{\"43\":1}}],[\"第十章\",{\"1\":{\"43\":1}}],[\"第九章\",{\"1\":{\"43\":1}}],[\"第八章\",{\"1\":{\"43\":1}}],[\"第七章\",{\"1\":{\"43\":1}}],[\"第六章\",{\"1\":{\"43\":1}}],[\"第五章\",{\"1\":{\"43\":1}}],[\"第四章\",{\"1\":{\"43\":1}}],[\"第三章\",{\"1\":{\"43\":1}}],[\"移植freertos\",{\"0\":{\"43\":1}}],[\"导入文件\",{\"0\":{\"42\":1}}],[\"目录结构\",{\"0\":{\"40\":1}}],[\"源文件\",{\"1\":{\"36\":1}}],[\"项目名\",{\"1\":{\"36\":1}}],[\"项目架构\",{\"1\":{\"0\":1}}],[\"验证\",{\"1\":{\"34\":1}}],[\"false\",{\"1\":{\"138\":1}}],[\"failed\",{\"1\":{\"93\":1}}],[\"futuretask\",{\"1\":{\"102\":1}}],[\"future\",{\"1\":{\"102\":1}}],[\"full\",{\"1\":{\"56\":1}}],[\"flag\",{\"1\":{\"94\":2}}],[\"float\",{\"1\":{\"80\":1}}],[\"fclose\",{\"1\":{\"93\":1}}],[\"fprintf\",{\"1\":{\"93\":1}}],[\"found\",{\"1\":{\"103\":1}}],[\"fopen\",{\"1\":{\"93\":1}}],[\"fortran语言\",{\"1\":{\"80\":1}}],[\"for\",{\"1\":{\"5\":3,\"6\":3,\"7\":3,\"80\":1,\"142\":1,\"146\":1}}],[\"free\",{\"1\":{\"94\":1}}],[\"freertos中断管理\",{\"1\":{\"43\":1}}],[\"freertos内存管理\",{\"1\":{\"43\":1}}],[\"freertos软件定时器\",{\"1\":{\"43\":1}}],[\"freertos任务通知\",{\"1\":{\"43\":1}}],[\"freertos任务管理\",{\"1\":{\"43\":1}}],[\"freertos事件组\",{\"1\":{\"43\":1}}],[\"freertos互斥量\",{\"1\":{\"43\":1}}],[\"freertos信号量\",{\"1\":{\"43\":1}}],[\"freertos消息队列\",{\"1\":{\"43\":1}}],[\"freertos创建任务\",{\"1\":{\"43\":1}}],[\"freertos移植到stm32\",{\"1\":{\"43\":1}}],[\"freertos\",{\"0\":{\"39\":1,\"154\":1},\"1\":{\"39\":2,\"40\":2}}],[\"framelayout\",{\"1\":{\"86\":1}}],[\"ftp协议\",{\"1\":{\"72\":1}}],[\"findviewbyid\",{\"1\":{\"85\":1}}],[\"finally\",{\"1\":{\"80\":1}}],[\"final\",{\"1\":{\"80\":1}}],[\"fidelity\",{\"1\":{\"72\":1}}],[\"fi\",{\"1\":{\"72\":1}}],[\"file\",{\"1\":{\"69\":1,\"93\":5}}],[\"files\",{\"1\":{\"34\":1}}],[\"下载android\",{\"1\":{\"82\":1}}],[\"下载jdk\",{\"0\":{\"75\":1}}],[\"下载地址\",{\"0\":{\"39\":1},\"1\":{\"75\":1}}],[\"下载\",{\"1\":{\"34\":1,\"69\":1}}],[\"和\",{\"1\":{\"33\":1}}],[\"这里的uri以content\",{\"1\":{\"84\":1}}],[\"这是不同应用程序间共享数据的唯一方式\",{\"1\":{\"84\":1}}],[\"这导致服务的onstartcommand\",{\"1\":{\"84\":1}}],[\"这个时候我们想怎么操作程序内存数据都没问题\",{\"1\":{\"73\":1}}],[\"这个\",{\"1\":{\"73\":1}}],[\"这个函数是用来引入外部dll的\",{\"1\":{\"73\":1}}],[\"这些文件的扩展名为\",{\"1\":{\"70\":1}}],[\"这一步由预处理器完成\",{\"1\":{\"70\":1}}],[\"这种可以使用各平台的原生建构系统的能力是\",{\"1\":{\"33\":1}}],[\"这使得熟悉某个集成开发环境\",{\"1\":{\"33\":1}}],[\"w3\",{\"1\":{\"138\":1}}],[\"wait\",{\"1\":{\"102\":1}}],[\"ws\",{\"1\":{\"94\":3}}],[\"w64\",{\"1\":{\"94\":1}}],[\"wh\",{\"1\":{\"93\":1}}],[\"while\",{\"1\":{\"80\":1,\"93\":1,\"94\":1}}],[\"while循环结构中\",{\"1\":{\"80\":1}}],[\"wm\",{\"1\":{\"93\":1}}],[\"wparam\",{\"1\":{\"93\":4}}],[\"world\",{\"1\":{\"81\":1}}],[\"workspaces\",{\"1\":{\"33\":1}}],[\"www\",{\"1\":{\"75\":1,\"135\":1,\"138\":4}}],[\"wireless\",{\"1\":{\"72\":1}}],[\"wi\",{\"1\":{\"72\":1}}],[\"windows\",{\"1\":{\"33\":1}}],[\"value=\",{\"1\":{\"138\":5}}],[\"vkcode\",{\"1\":{\"93\":2}}],[\"v\",{\"0\":{\"164\":1,\"166\":1,\"168\":1},\"1\":{\"92\":1}}],[\"vn\",{\"1\":{\"91\":1,\"92\":1}}],[\"v0\",{\"1\":{\"91\":1,\"92\":1}}],[\"v命名法\",{\"1\":{\"91\":1}}],[\"view\",{\"1\":{\"85\":3}}],[\"visual\",{\"1\":{\"33\":1}}],[\"volatile\",{\"1\":{\"80\":1}}],[\"void\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"80\":1,\"81\":1,\"85\":1,\"138\":1,\"139\":1,\"141\":1,\"142\":1,\"144\":1,\"146\":1,\"148\":1}}],[\"v10\",{\"1\":{\"69\":1}}],[\"version=\",{\"1\":{\"138\":1}}],[\"version>\",{\"1\":{\"137\":2}}],[\"version\",{\"1\":{\"36\":1,\"78\":1}}],[\"或者用notificationmanager来通知用户\",{\"1\":{\"84\":1}}],[\"或者数据网络可用时\",{\"1\":{\"84\":1}}],[\"或者由其他组件调用stopservice\",{\"1\":{\"84\":1}}],[\"或者成员域的值不能被改变\",{\"1\":{\"80\":1}}],[\"或者成员方法不能被覆盖\",{\"1\":{\"80\":1}}],[\"或\",{\"1\":{\"33\":1}}],[\"的特点\",{\"1\":{\"84\":1}}],[\"的函数肯定也是一样的\",{\"1\":{\"73\":1}}],[\"的二进制\",{\"1\":{\"70\":1}}],[\"的汇编文件\",{\"1\":{\"70\":1}}],[\"的临时文件\",{\"1\":{\"70\":1}}],[\"的开发者可以用标准的方式建构他的软件\",{\"1\":{\"33\":1}}],[\"的\",{\"1\":{\"33\":2}}],[\"的组态档取名为\",{\"1\":{\"33\":1}}],[\"update\",{\"1\":{\"139\":1}}],[\"useunicode=true\",{\"1\":{\"138\":1,\"139\":1}}],[\"utf\",{\"1\":{\"138\":1}}],[\"ulong\",{\"1\":{\"94\":1}}],[\"unspec\",{\"1\":{\"94\":2}}],[\"untitled1\",{\"1\":{\"94\":1}}],[\"unhookwindowshookex\",{\"1\":{\"93\":1}}],[\"unix\",{\"1\":{\"33\":1}}],[\"url\",{\"1\":{\"71\":1}}],[\"ui\",{\"1\":{\"3\":1}}],[\"如果有多个线程在等待\",{\"1\":{\"102\":1}}],[\"如当电话呼入时\",{\"1\":{\"84\":1}}],[\"如activity\",{\"1\":{\"84\":1}}],[\"如c\",{\"1\":{\"80\":1}}],[\"如ieee\",{\"1\":{\"72\":1}}],[\"如\",{\"1\":{\"33\":1}}],[\"只要设备是开启状态\",{\"1\":{\"84\":1}}],[\"只对感兴趣的外部事件\",{\"1\":{\"84\":1}}],[\"只有需要在多个应用程序间共享数据是才需要内容提供者\",{\"1\":{\"84\":1}}],[\"只是\",{\"1\":{\"33\":1}}],[\"只读数据域\",{\"1\":{\"29\":1}}],[\"能测试编译器所支持的c++特性\",{\"1\":{\"33\":1}}],[\"他能够输出各种各样的makefile或者project文件\",{\"1\":{\"33\":1}}],[\"可以在不同屏幕尺寸上提供灵活的布局\",{\"1\":{\"86\":1}}],[\"可以指定每个单元格的行数和列数\",{\"1\":{\"86\":1}}],[\"可以有效的访问\",{\"1\":{\"84\":1}}],[\"可以是另一个接口\",{\"1\":{\"80\":1}}],[\"可以是另一个类或者抽象类\",{\"1\":{\"80\":1}}],[\"可以用简单的语句来描述所有平台的安装\",{\"1\":{\"33\":1}}],[\"可读写数据域\",{\"1\":{\"29\":1}}],[\"编程语言\",{\"0\":{\"160\":1}}],[\"编译过程\",{\"0\":{\"70\":1},\"1\":{\"33\":1}}],[\"编译\",{\"1\":{\"33\":1,\"37\":1,\"70\":1}}],[\"编写代码\",{\"1\":{\"3\":1}}],[\"简介\",{\"0\":{\"33\":1,\"134\":1}}],[\"zi\",{\"1\":{\"29\":1}}],[\"rabbitmq\",{\"0\":{\"120\":1}}],[\"runtimeservice\",{\"1\":{\"144\":5}}],[\"runasync\",{\"1\":{\"102\":2}}],[\"runable\",{\"1\":{\"102\":5}}],[\"runnablescheduledfuture\",{\"1\":{\"102\":1}}],[\"r\",{\"1\":{\"85\":1}}],[\"rt\",{\"1\":{\"69\":1}}],[\"repositoryservice\",{\"1\":{\"141\":3,\"142\":3}}],[\"redis\",{\"0\":{\"119\":1}}],[\"reentrantreadwritelock\",{\"1\":{\"111\":1}}],[\"reentrantlock\",{\"1\":{\"111\":1}}],[\"resources\",{\"1\":{\"88\":1}}],[\"res\",{\"1\":{\"88\":1}}],[\"relativelayout\",{\"1\":{\"86\":1}}],[\"release\",{\"1\":{\"69\":1}}],[\"releases\",{\"1\":{\"69\":1}}],[\"receiver\",{\"1\":{\"84\":1}}],[\"record在定义数据类时更为简洁\",{\"1\":{\"80\":1}}],[\"record\",{\"1\":{\"80\":1}}],[\"return\",{\"1\":{\"80\":1,\"93\":3,\"94\":1}}],[\"rev1\",{\"1\":{\"69\":1}}],[\"required\",{\"1\":{\"36\":1}}],[\"rx\",{\"1\":{\"47\":2}}],[\"rs485\",{\"1\":{\"46\":1}}],[\"rs422\",{\"1\":{\"46\":1}}],[\"rs232\",{\"1\":{\"46\":1}}],[\"rw\",{\"1\":{\"29\":1}}],[\"root\",{\"1\":{\"138\":1,\"139\":1}}],[\"ro\",{\"1\":{\"29\":1}}],[\"db\",{\"1\":{\"139\":1}}],[\"driver\",{\"1\":{\"138\":1,\"139\":1}}],[\"dispatchmessage\",{\"1\":{\"93\":1}}],[\"dword\",{\"1\":{\"93\":1}}],[\"dx\",{\"1\":{\"91\":2}}],[\"dalvik指令\",{\"1\":{\"91\":1}}],[\"dalvik字节码类型\",{\"1\":{\"91\":1}}],[\"dalvik\",{\"1\":{\"89\":1,\"91\":2,\"92\":2}}],[\"databaseschemaupdate\",{\"1\":{\"138\":1}}],[\"data\",{\"1\":{\"29\":3,\"72\":2,\"89\":5}}],[\"docker\",{\"0\":{\"124\":1}}],[\"double\",{\"1\":{\"80\":1}}],[\"do\",{\"1\":{\"80\":1}}],[\"downloads\",{\"1\":{\"75\":1}}],[\"download\",{\"1\":{\"34\":1}}],[\"dt\",{\"1\":{\"77\":1}}],[\"deploy\",{\"1\":{\"141\":1}}],[\"deploymentquery\",{\"1\":{\"142\":3}}],[\"deployment\",{\"1\":{\"141\":7}}],[\"deploymentbuilder\",{\"1\":{\"141\":1}}],[\"dependency>\",{\"1\":{\"137\":4}}],[\"deadlock\",{\"1\":{\"103\":1}}],[\"dex文件反汇编工具\",{\"1\":{\"91\":1}}],[\"dex\",{\"1\":{\"88\":1,\"91\":7}}],[\"developer\",{\"1\":{\"82\":1}}],[\"default\",{\"1\":{\"80\":1}}],[\"define\",{\"1\":{\"71\":1}}],[\"debug\",{\"1\":{\"73\":1}}],[\"dll的基地址是固定的\",{\"1\":{\"73\":1}}],[\"dll里面\",{\"1\":{\"73\":1}}],[\"dll\",{\"1\":{\"73\":1}}],[\"d\",{\"1\":{\"69\":1,\"76\":1,\"77\":1,\"94\":2}}],[\"duplex\",{\"1\":{\"56\":1}}],[\"dma\",{\"0\":{\"26\":1}}],[\"a基本\",{\"0\":{\"164\":1}}],[\"amp\",{\"1\":{\"138\":3}}],[\"activiti<\",{\"1\":{\"137\":2}}],[\"activiti\",{\"1\":{\"135\":1,\"138\":5,\"139\":1}}],[\"activitytest\",{\"1\":{\"138\":1}}],[\"activity之间通过intent进行通信\",{\"1\":{\"84\":1}}],[\"activity可以看成是安卓系统的根本\",{\"1\":{\"84\":1}}],[\"activity\",{\"1\":{\"84\":3}}],[\"acc\",{\"1\":{\"103\":3}}],[\"aqs\",{\"1\":{\"103\":1,\"111\":1}}],[\"af\",{\"1\":{\"94\":2}}],[\"adapter\",{\"1\":{\"94\":4}}],[\"addbpmnmodel\",{\"1\":{\"141\":1}}],[\"addbytes\",{\"1\":{\"141\":1}}],[\"addstring\",{\"1\":{\"141\":1}}],[\"addclasspathresource\",{\"1\":{\"141\":1}}],[\"addresses\",{\"1\":{\"94\":3}}],[\"add\",{\"1\":{\"36\":2}}],[\"a\",{\"0\":{\"164\":1},\"1\":{\"93\":1,\"94\":1}}],[\"api\",{\"0\":{\"95\":1,\"99\":1}}],[\"apk解压资源\",{\"1\":{\"89\":1}}],[\"apk\",{\"1\":{\"89\":1}}],[\"app\",{\"1\":{\"89\":2}}],[\"application\",{\"1\":{\"72\":1}}],[\"assets\",{\"1\":{\"88\":1}}],[\"assert\",{\"1\":{\"80\":1}}],[\"absolutelayout\",{\"1\":{\"86\":1}}],[\"abstract\",{\"1\":{\"80\":1}}],[\"androidmanifest\",{\"1\":{\"88\":1}}],[\"android平台提供了content\",{\"1\":{\"84\":1}}],[\"android应用中每一个activity都必须要在androidmanifest\",{\"1\":{\"84\":1}}],[\"android四大组件详解\",{\"0\":{\"84\":1}}],[\"android\",{\"1\":{\"82\":1}}],[\"aa\",{\"1\":{\"71\":1}}],[\"axf\",{\"1\":{\"28\":2}}],[\"artifactid>\",{\"1\":{\"137\":4}}],[\"arsc\",{\"1\":{\"88\":1}}],[\"arg\",{\"1\":{\"81\":1}}],[\"args\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"138\":1}}],[\"archive\",{\"1\":{\"75\":1}}],[\"arr\",{\"1\":{\"5\":11,\"6\":11,\"7\":9}}],[\"链接过程会生成一个可执行文件\",{\"1\":{\"70\":1}}],[\"链接是将库文件包含在我们的程序中的过程\",{\"1\":{\"70\":1}}],[\"链接\",{\"1\":{\"28\":2}}],[\"映像文件\",{\"1\":{\"28\":2}}],[\"onclick\",{\"1\":{\"85\":2}}],[\"onclicklistener\",{\"1\":{\"85\":1}}],[\"oncreate\",{\"1\":{\"82\":1}}],[\"onlly\",{\"1\":{\"73\":1}}],[\"oracle\",{\"1\":{\"75\":1}}],[\"org\",{\"1\":{\"34\":1,\"135\":1,\"138\":7}}],[\"overflow\",{\"1\":{\"94\":1}}],[\"override\",{\"1\":{\"85\":1}}],[\"over\",{\"1\":{\"72\":1}}],[\"o\",{\"1\":{\"28\":2,\"70\":6,\"91\":2}}],[\"outbuflen\",{\"1\":{\"94\":4}}],[\"output=xxx\",{\"1\":{\"91\":1}}],[\"out\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"70\":1,\"81\":1,\"91\":2,\"138\":1,\"141\":2,\"142\":3,\"146\":1}}],[\"createtaskquery\",{\"1\":{\"146\":1}}],[\"createdeploymentquery\",{\"1\":{\"142\":1}}],[\"createdeployment\",{\"1\":{\"141\":1}}],[\"createstandaloneprocessengineconfiguration\",{\"1\":{\"139\":1}}],[\"cj\",{\"1\":{\"138\":1,\"139\":1}}],[\"cfg\",{\"1\":{\"138\":2}}],[\"cn\",{\"1\":{\"82\":1}}],[\"characterencoding=utf\",{\"1\":{\"138\":1,\"139\":1}}],[\"char\",{\"1\":{\"80\":1}}],[\"cheat\",{\"1\":{\"73\":1}}],[\"callable\",{\"1\":{\"102\":1}}],[\"callnexthookex\",{\"1\":{\"93\":1}}],[\"callback\",{\"1\":{\"93\":1}}],[\"cache\",{\"1\":{\"89\":1}}],[\"catch\",{\"1\":{\"80\":1}}],[\"case\",{\"1\":{\"80\":1}}],[\"cloud\",{\"0\":{\"116\":1}}],[\"class=\",{\"1\":{\"138\":1}}],[\"class\",{\"1\":{\"80\":1,\"81\":1,\"91\":3,\"138\":1}}],[\"classpath\",{\"0\":{\"77\":1},\"1\":{\"77\":1}}],[\"clion\",{\"1\":{\"69\":1}}],[\"cpp\",{\"1\":{\"70\":1}}],[\"cs\",{\"1\":{\"57\":1}}],[\"cmd\",{\"1\":{\"34\":1}}],[\"cmake命令\",{\"0\":{\"37\":1}}],[\"cmakelists文件编写\",{\"0\":{\"36\":1}}],[\"cmakelists\",{\"0\":{\"35\":1},\"1\":{\"33\":1,\"94\":1}}],[\"cmake\",{\"0\":{\"153\":1},\"1\":{\"33\":3,\"34\":3,\"36\":2,\"37\":2}}],[\"cmake是一个跨平台的安装\",{\"1\":{\"33\":1}}],[\"cmake简介\",{\"0\":{\"32\":1}}],[\"c++\",{\"1\":{\"33\":1,\"80\":1}}],[\"coordinatorlayout\",{\"1\":{\"86\":1}}],[\"converter<\",{\"1\":{\"137\":1}}],[\"connector\",{\"1\":{\"137\":1}}],[\"contentprovider使用uri来唯一标识其数据集\",{\"1\":{\"84\":1}}],[\"contentprovider用于保存和获取数据\",{\"1\":{\"84\":1}}],[\"contentprovider实现数据共享\",{\"1\":{\"84\":1}}],[\"content\",{\"1\":{\"84\":1}}],[\"continue\",{\"1\":{\"80\":1}}],[\"control\",{\"1\":{\"72\":1}}],[\"constraintlayout\",{\"1\":{\"86\":1}}],[\"const\",{\"1\":{\"71\":1,\"80\":1}}],[\"complete\",{\"1\":{\"148\":1}}],[\"completablefuture\",{\"1\":{\"102\":1,\"111\":1}}],[\"comx\",{\"1\":{\"48\":1}}],[\"com\",{\"1\":{\"39\":1,\"69\":1,\"75\":1,\"91\":1,\"138\":1,\"139\":1}}],[\"code\",{\"1\":{\"29\":1}}],[\"cortex®\",{\"1\":{\"24\":1}}],[\"c\",{\"0\":{\"70\":1,\"159\":1,\"168\":1},\"1\":{\"28\":1,\"34\":1,\"36\":3,\"69\":1,\"70\":3,\"94\":1}}],[\"c代码\",{\"1\":{\"28\":1}}],[\"直接储存器访问\",{\"0\":{\"26\":1}}],[\"低级代码\",{\"1\":{\"70\":1}}],[\"低功耗的嵌入式应用设计的arm\",{\"1\":{\"24\":1}}],[\"低成本\",{\"1\":{\"24\":1}}],[\"完全二叉树\",{\"0\":{\"22\":1}}],[\"满二叉树\",{\"0\":{\"21\":1}}],[\"二\",{\"0\":{\"103\":1,\"127\":1}}],[\"二进制\",{\"1\":{\"70\":1}}],[\"二叉树\",{\"0\":{\"20\":1}}],[\"二分查找\",{\"0\":{\"14\":1}}],[\"树表查找\",{\"0\":{\"17\":1}}],[\"斐波那契查找\",{\"0\":{\"16\":1}}],[\"插值查找\",{\"0\":{\"15\":1}}],[\"插入排序\",{\"0\":{\"7\":1}}],[\"顺序查找\",{\"0\":{\"13\":1}}],[\"快速排序\",{\"0\":{\"10\":1}}],[\"归并排序\",{\"0\":{\"9\":1}}],[\"希尔排序\",{\"0\":{\"8\":1}}],[\"name\",{\"1\":{\"141\":1}}],[\"name=\",{\"1\":{\"138\":5}}],[\"native\",{\"1\":{\"80\":1}}],[\"notifyall\",{\"1\":{\"102\":1}}],[\"notify\",{\"1\":{\"102\":1}}],[\"no\",{\"1\":{\"94\":1}}],[\"node\",{\"0\":{\"3\":1}}],[\"nullcatalogmeanscurrent=true\",{\"1\":{\"138\":1,\"139\":1}}],[\"null\",{\"1\":{\"93\":5,\"94\":3}}],[\"ncode\",{\"1\":{\"93\":3}}],[\"new\",{\"1\":{\"80\":1,\"85\":1}}],[\"network\",{\"1\":{\"72\":1}}],[\"nixman\",{\"1\":{\"69\":1}}],[\"n\",{\"1\":{\"7\":2,\"93\":2,\"94\":6}}],[\"39\",{\"1\":{\"80\":1}}],[\"38\",{\"1\":{\"80\":1}}],[\"37\",{\"1\":{\"80\":1}}],[\"36\",{\"1\":{\"80\":1}}],[\"35\",{\"1\":{\"80\":1}}],[\"34\",{\"1\":{\"80\":1}}],[\"3306\",{\"1\":{\"138\":1,\"139\":1}}],[\"33\",{\"1\":{\"80\":1}}],[\"32位寄存器\",{\"1\":{\"92\":1}}],[\"32位\",{\"1\":{\"91\":1}}],[\"32\",{\"1\":{\"80\":1}}],[\"31\",{\"1\":{\"80\":1}}],[\"30\",{\"1\":{\"80\":1}}],[\"3v3\",{\"1\":{\"47\":2}}],[\"3v\",{\"1\":{\"46\":1}}],[\"3\",{\"0\":{\"7\":1,\"15\":1},\"1\":{\"36\":1,\"46\":1,\"47\":1,\"56\":1,\"61\":1,\"64\":1,\"66\":1,\"70\":1,\"84\":5,\"86\":1,\"88\":1,\"89\":1,\"91\":1,\"102\":1,\"111\":2}}],[\"选择排序\",{\"0\":{\"6\":1}}],[\"task\",{\"1\":{\"146\":3}}],[\"taskassignee\",{\"1\":{\"146\":1}}],[\"taskquery\",{\"1\":{\"146\":4}}],[\"taskservice\",{\"1\":{\"146\":3,\"148\":3}}],[\"target\",{\"1\":{\"94\":1}}],[\"tablelayout\",{\"1\":{\"86\":1}}],[\"true\",{\"1\":{\"139\":1}}],[\"try\",{\"1\":{\"80\":1}}],[\"translatemessage\",{\"1\":{\"93\":1}}],[\"transient\",{\"1\":{\"80\":1}}],[\"transport\",{\"1\":{\"72\":1}}],[\"thread\",{\"1\":{\"102\":2}}],[\"throws\",{\"1\":{\"80\":1}}],[\"throw\",{\"1\":{\"80\":1}}],[\"this\",{\"1\":{\"80\":1}}],[\"toos\",{\"1\":{\"77\":1}}],[\"tools\",{\"1\":{\"40\":1}}],[\"to\",{\"1\":{\"72\":2,\"93\":1}}],[\"tx\",{\"1\":{\"47\":2}}],[\"txt\",{\"0\":{\"35\":1},\"1\":{\"33\":1,\"93\":1,\"94\":1}}],[\"ttl接线\",{\"0\":{\"47\":1}}],[\"ttl\",{\"1\":{\"46\":1}}],[\"technologies\",{\"1\":{\"75\":1}}],[\"text\",{\"1\":{\"70\":7}}],[\"test07\",{\"1\":{\"148\":1}}],[\"test06\",{\"1\":{\"146\":1}}],[\"test05\",{\"1\":{\"144\":1}}],[\"test04\",{\"1\":{\"142\":1}}],[\"test03\",{\"1\":{\"141\":1}}],[\"test02\",{\"1\":{\"139\":1}}],[\"test\",{\"1\":{\"36\":1,\"81\":1,\"139\":1,\"141\":1,\"142\":1,\"144\":1,\"146\":1,\"148\":1}}],[\"temp\",{\"1\":{\"6\":2}}],[\"tft屏\",{\"1\":{\"31\":1}}],[\"t\",{\"0\":{\"152\":1},\"1\":{\"5\":1,\"6\":1,\"7\":1}}],[\"pcurraddresses\",{\"1\":{\"94\":7}}],[\"pip\",{\"1\":{\"94\":2}}],[\"pid算法\",{\"0\":{\"23\":1}}],[\"pkeystruct\",{\"1\":{\"93\":2}}],[\"p\",{\"0\":{\"150\":1},\"1\":{\"92\":1}}],[\"pn\",{\"1\":{\"91\":1,\"92\":1}}],[\"p0\",{\"1\":{\"91\":1,\"92\":1}}],[\"p命名法\",{\"1\":{\"91\":1}}],[\"paddresses\",{\"1\":{\"94\":7}}],[\"packages\",{\"1\":{\"89\":1}}],[\"package\",{\"1\":{\"80\":1}}],[\"path\",{\"1\":{\"77\":1}}],[\"pom\",{\"0\":{\"137\":1}}],[\"point\",{\"1\":{\"72\":4}}],[\"posix\",{\"1\":{\"69\":1}}],[\"pppoe\",{\"1\":{\"72\":1}}],[\"ppp\",{\"1\":{\"72\":1}}],[\"physical\",{\"1\":{\"72\":1}}],[\"plus\",{\"1\":{\"40\":1}}],[\"prefix\",{\"1\":{\"94\":2}}],[\"presentation\",{\"1\":{\"72\":1}}],[\"private\",{\"1\":{\"80\":1}}],[\"printf\",{\"1\":{\"93\":1,\"94\":4}}],[\"println\",{\"1\":{\"81\":1,\"138\":1,\"141\":2,\"142\":3,\"146\":1}}],[\"print\",{\"1\":{\"5\":1,\"6\":1,\"7\":1}}],[\"processengineconfiguration\",{\"1\":{\"138\":1,\"139\":2}}],[\"processengines\",{\"1\":{\"138\":2,\"141\":1,\"142\":1,\"144\":1,\"146\":1,\"148\":1}}],[\"processengine\",{\"1\":{\"138\":4,\"139\":2,\"141\":3,\"142\":3,\"144\":3,\"146\":3,\"148\":3}}],[\"provider使一个应用程序的指定数据集提供给其他应用程序\",{\"1\":{\"84\":1}}],[\"provider\",{\"1\":{\"84\":1}}],[\"protected\",{\"1\":{\"80\":1}}],[\"protocol\",{\"1\":{\"72\":3}}],[\"projectname\",{\"1\":{\"36\":1}}],[\"project\",{\"1\":{\"36\":2}}],[\"projects\",{\"1\":{\"33\":1}}],[\"program\",{\"1\":{\"34\":1}}],[\"public\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"80\":1,\"81\":2,\"85\":1,\"138\":2,\"139\":1,\"141\":1,\"142\":1,\"144\":1,\"146\":1,\"148\":1}}],[\"mysql\",{\"0\":{\"117\":1},\"1\":{\"138\":2,\"139\":2}}],[\"mybin\",{\"1\":{\"70\":1}}],[\"monitorexit\",{\"1\":{\"103\":1}}],[\"monitorenter\",{\"1\":{\"103\":1}}],[\"monitor\",{\"1\":{\"103\":1}}],[\"msg\",{\"1\":{\"93\":5}}],[\"meta\",{\"1\":{\"88\":1}}],[\"mingw32\",{\"1\":{\"94\":1}}],[\"mingw64\",{\"1\":{\"69\":1,\"94\":1}}],[\"mingw\",{\"1\":{\"69\":1}}],[\"minimum\",{\"1\":{\"36\":1}}],[\"minindex\",{\"1\":{\"6\":6}}],[\"maven\",{\"0\":{\"137\":1}}],[\"map\",{\"0\":{\"107\":1}}],[\"malloc\",{\"1\":{\"94\":1}}],[\"makefile\",{\"1\":{\"33\":1}}],[\"main\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"36\":1,\"81\":1,\"93\":1,\"94\":1,\"138\":1}}],[\"mdk编译过程\",{\"0\":{\"28\":1}}],[\"m4和m7内核\",{\"1\":{\"24\":1}}],[\"m32\",{\"0\":{\"152\":1}}],[\"m3\",{\"1\":{\"24\":1}}],[\"m0+\",{\"1\":{\"24\":1}}],[\"m0\",{\"1\":{\"24\":1}}],[\"m\",{\"0\":{\"166\":1,\"168\":1},\"1\":{\"5\":2}}],[\">next\",{\"1\":{\"94\":1}}],[\">adaptername\",{\"1\":{\"94\":1}}],[\">description\",{\"1\":{\"94\":1}}],[\">friendlyname\",{\"1\":{\"94\":1}}],[\">vkcode\",{\"1\":{\"93\":1}}],[\">=\",{\"1\":{\"93\":1}}],[\">toolchains\",{\"1\":{\"69\":1}}],[\">build\",{\"1\":{\"69\":1}}],[\">setting\",{\"1\":{\"69\":1}}],[\">\",{\"1\":{\"5\":1,\"7\":2,\"28\":6,\"34\":1,\"69\":1,\"91\":6,\"92\":3,\"102\":1,\"138\":12}}],[\"+\",{\"1\":{\"5\":2,\"6\":2,\"7\":1,\"69\":1}}],[\"json\",{\"1\":{\"137\":1}}],[\"jstack\",{\"1\":{\"103\":1}}],[\"jdbcpassword\",{\"1\":{\"138\":1}}],[\"jdbcusername\",{\"1\":{\"138\":1}}],[\"jdbcurl\",{\"1\":{\"138\":1}}],[\"jdbc\",{\"1\":{\"138\":2,\"139\":2}}],[\"jdbcdriver\",{\"1\":{\"138\":1}}],[\"jdbc<\",{\"1\":{\"137\":1}}],[\"jdk1\",{\"1\":{\"76\":1,\"77\":1}}],[\"jvm\",{\"0\":{\"118\":1,\"125\":1}}],[\"jps\",{\"1\":{\"103\":1}}],[\"join\",{\"1\":{\"102\":1}}],[\"juc\",{\"0\":{\"101\":1}}],[\"jar\",{\"1\":{\"77\":2,\"91\":9}}],[\"java<\",{\"1\":{\"137\":1}}],[\"java8\",{\"1\":{\"80\":1}}],[\"javac\",{\"1\":{\"78\":1}}],[\"javase8u211\",{\"1\":{\"75\":1}}],[\"javase\",{\"1\":{\"75\":1}}],[\"java\",{\"0\":{\"80\":1,\"101\":1,\"105\":1,\"125\":1,\"161\":1},\"1\":{\"75\":1,\"76\":1,\"77\":5,\"78\":2,\"91\":5}}],[\"j++\",{\"1\":{\"5\":1,\"6\":1}}],[\"j\",{\"0\":{\"164\":1,\"166\":1},\"1\":{\"5\":5,\"6\":4,\"7\":7}}],[\"lvgl\",{\"0\":{\"155\":1}}],[\"l\",{\"1\":{\"103\":1}}],[\"ll\",{\"1\":{\"93\":1}}],[\"lparam\",{\"1\":{\"93\":4}}],[\"lresult\",{\"1\":{\"93\":1}}],[\"later\",{\"1\":{\"75\":1}}],[\"layer\",{\"1\":{\"72\":7}}],[\"level\",{\"1\":{\"72\":1}}],[\"length\",{\"1\":{\"5\":3,\"6\":3,\"7\":2}}],[\"list<task>\",{\"1\":{\"146\":1}}],[\"list<deployment>\",{\"1\":{\"142\":1}}],[\"list\",{\"0\":{\"99\":1,\"100\":1,\"107\":1},\"1\":{\"142\":5,\"146\":4}}],[\"linux\",{\"0\":{\"121\":1}}],[\"linearlayout\",{\"1\":{\"86\":1}}],[\"line\",{\"1\":{\"72\":1}}],[\"link\",{\"1\":{\"72\":2,\"94\":1}}],[\"libiphlpapi\",{\"1\":{\"94\":1}}],[\"libraries\",{\"1\":{\"94\":1}}],[\"lib\",{\"1\":{\"70\":1,\"77\":2,\"88\":1,\"94\":1,\"129\":1}}],[\"locksuport\",{\"1\":{\"102\":1}}],[\"lowlevelkeyboardproc\",{\"1\":{\"93\":2}}],[\"log\",{\"1\":{\"82\":1,\"85\":1}}],[\"logstash\",{\"0\":{\"2\":1}}],[\"loadlibrary\",{\"1\":{\"73\":2}}],[\"long\",{\"1\":{\"71\":1,\"80\":1}}],[\"ld\",{\"1\":{\"70\":1,\"93\":1}}],[\"<property\",{\"1\":{\"138\":5}}],[\"<bean\",{\"1\":{\"138\":1}}],[\"<beans\",{\"1\":{\"138\":1}}],[\"<version>7\",{\"1\":{\"137\":2}}],[\"<artifactid>activiti\",{\"1\":{\"137\":2}}],[\"<artifactid>mysql\",{\"1\":{\"137\":1}}],[\"<artifactid>spring\",{\"1\":{\"137\":1}}],[\"<groupid>mysql<\",{\"1\":{\"137\":1}}],[\"<groupid>org\",{\"1\":{\"137\":3}}],[\"<dependency>\",{\"1\":{\"137\":4}}],[\"<进程号>\",{\"1\":{\"103\":1}}],[\"<iphlpapi\",{\"1\":{\"94\":1}}],[\"<winsock2\",{\"1\":{\"94\":1}}],[\"<windows\",{\"1\":{\"93\":1,\"94\":1}}],[\"<stdio\",{\"1\":{\"93\":1,\"94\":1}}],[\"<\",{\"1\":{\"5\":3,\"6\":4,\"7\":2,\"137\":4,\"138\":7,\"142\":1,\"146\":1}}],[\"09\",{\"0\":{\"165\":1},\"1\":{\"80\":1}}],[\"08\",{\"1\":{\"80\":1}}],[\"07\",{\"0\":{\"147\":1},\"1\":{\"80\":1}}],[\"06\",{\"0\":{\"145\":1},\"1\":{\"80\":1}}],[\"05\",{\"0\":{\"143\":1},\"1\":{\"80\":1}}],[\"04\",{\"0\":{\"55\":1,\"72\":1,\"73\":1,\"99\":1,\"140\":1},\"1\":{\"80\":1}}],[\"03\",{\"0\":{\"37\":1,\"49\":1,\"95\":1,\"164\":1},\"1\":{\"80\":1}}],[\"02\",{\"0\":{\"36\":1,\"43\":1,\"45\":1,\"62\":1,\"70\":1,\"71\":1,\"79\":1,\"83\":1,\"85\":1,\"136\":1},\"1\":{\"80\":1}}],[\"0\",{\"1\":{\"5\":2,\"6\":3,\"7\":4,\"46\":1,\"69\":1,\"76\":1,\"77\":1,\"93\":6,\"94\":2,\"111\":1,\"137\":4,\"138\":3,\"142\":1,\"146\":1}}],[\"01\",{\"0\":{\"4\":1,\"24\":1,\"32\":1,\"38\":1,\"59\":1,\"69\":1,\"74\":1,\"82\":1,\"134\":1},\"1\":{\"80\":1}}],[\"ip\",{\"1\":{\"94\":1}}],[\"id=\",{\"1\":{\"138\":1}}],[\"id\",{\"1\":{\"85\":1,\"94\":1}}],[\"ide\",{\"1\":{\"33\":1}}],[\"instance\",{\"1\":{\"138\":1}}],[\"instanceof\",{\"1\":{\"80\":1}}],[\"install\",{\"1\":{\"93\":1}}],[\"include\",{\"1\":{\"93\":2,\"94\":6}}],[\"inline\",{\"1\":{\"92\":1}}],[\"inf\",{\"1\":{\"88\":1}}],[\"interface\",{\"1\":{\"80\":1}}],[\"internet\",{\"1\":{\"72\":1}}],[\"int\",{\"1\":{\"5\":5,\"6\":6,\"7\":6,\"80\":1,\"93\":2,\"94\":2,\"142\":1,\"146\":1}}],[\"impl\",{\"1\":{\"138\":1}}],[\"implements\",{\"1\":{\"80\":1}}],[\"import\",{\"1\":{\"80\":1,\"138\":2}}],[\"i2c总线总线的sda和scl两条信号线同时处于高电平时\",{\"1\":{\"52\":1}}],[\"i2c总线\",{\"0\":{\"50\":1}}],[\"i2c\",{\"0\":{\"49\":1}}],[\"if\",{\"1\":{\"5\":1,\"6\":2,\"80\":1,\"93\":3,\"94\":3}}],[\"i++\",{\"1\":{\"5\":2,\"6\":2,\"7\":2,\"94\":1,\"142\":1,\"146\":1}}],[\"i\",{\"1\":{\"5\":9,\"6\":10,\"7\":7,\"70\":4,\"82\":1,\"85\":1,\"94\":1,\"142\":4,\"146\":3}}],[\"29\",{\"1\":{\"80\":1}}],[\"28\",{\"1\":{\"80\":1}}],[\"27\",{\"1\":{\"80\":1}}],[\"26\",{\"1\":{\"80\":1}}],[\"25\",{\"1\":{\"80\":1}}],[\"24\",{\"1\":{\"80\":1}}],[\"22\",{\"1\":{\"80\":1}}],[\"21\",{\"1\":{\"80\":1}}],[\"2001\",{\"1\":{\"138\":1}}],[\"20\",{\"1\":{\"80\":1}}],[\"2\",{\"0\":{\"6\":1,\"14\":1,\"29\":1,\"53\":1,\"61\":1},\"1\":{\"5\":1,\"6\":1,\"7\":1,\"47\":1,\"56\":1,\"64\":1,\"66\":1,\"69\":1,\"70\":1,\"84\":5,\"86\":1,\"88\":1,\"89\":1,\"91\":1,\"101\":1,\"102\":1,\"111\":2,\"132\":1}}],[\"23\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"80\":1}}],[\"802\",{\"1\":{\"72\":1}}],[\"8\",{\"0\":{\"12\":1},\"1\":{\"5\":1,\"6\":1,\"7\":1,\"61\":1,\"76\":1,\"77\":1,\"86\":1,\"138\":2,\"139\":1}}],[\"88\",{\"1\":{\"5\":1,\"6\":1,\"7\":1}}],[\"754算术规范\",{\"1\":{\"80\":1}}],[\"7z\",{\"1\":{\"69\":1}}],[\"7\",{\"0\":{\"11\":1,\"19\":1},\"1\":{\"5\":1,\"6\":1,\"7\":1,\"61\":1,\"86\":1,\"88\":1}}],[\"64\",{\"1\":{\"69\":1,\"94\":1}}],[\"6\",{\"0\":{\"10\":1,\"18\":1},\"1\":{\"5\":1,\"6\":1,\"7\":1,\"61\":1,\"86\":1,\"88\":1,\"91\":1}}],[\"9600\",{\"1\":{\"48\":1}}],[\"9根线\",{\"1\":{\"46\":3}}],[\"9\",{\"1\":{\"5\":1,\"6\":1,\"7\":1}}],[\"51\",{\"1\":{\"80\":1}}],[\"50\",{\"1\":{\"80\":1}}],[\"54\",{\"1\":{\"5\":1,\"6\":1,\"7\":1}}],[\"5\",{\"0\":{\"9\":1,\"17\":1},\"1\":{\"5\":1,\"6\":1,\"7\":1,\"61\":1,\"84\":1,\"86\":1,\"88\":1,\"91\":1}}],[\"4个重要的静态方法\",{\"1\":{\"102\":1}}],[\"49\",{\"1\":{\"80\":1}}],[\"48\",{\"1\":{\"80\":1}}],[\"47\",{\"1\":{\"80\":1}}],[\"46\",{\"1\":{\"80\":1}}],[\"45\",{\"1\":{\"80\":1}}],[\"44\",{\"1\":{\"80\":1}}],[\"42\",{\"1\":{\"80\":1}}],[\"41\",{\"1\":{\"80\":1}}],[\"4根线\",{\"1\":{\"46\":1}}],[\"40\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"80\":1}}],[\"43\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"80\":1}}],[\"4\",{\"0\":{\"8\":1,\"16\":1},\"1\":{\"5\":2,\"6\":2,\"7\":2,\"47\":1,\"56\":1,\"61\":1,\"70\":1,\"84\":3,\"86\":1,\"88\":1,\"89\":1,\"91\":1}}],[\"==\",{\"1\":{\"93\":2,\"94\":2}}],[\"========================\",{\"1\":{\"141\":1}}],[\"======================================\",{\"1\":{\"92\":1}}],[\"==============================================\",{\"1\":{\"141\":1,\"142\":1}}],[\"===================================================\",{\"1\":{\"45\":1,\"46\":1,\"47\":1}}],[\"========================================================\",{\"1\":{\"141\":1}}],[\"=======================================================\",{\"1\":{\"141\":1}}],[\"=====================================================\",{\"1\":{\"3\":2}}],[\"====================================================\",{\"1\":{\"3\":1}}],[\"=========================================\",{\"1\":{\"91\":1}}],[\"=======================================\",{\"1\":{\"82\":1,\"86\":1}}],[\"====================\",{\"1\":{\"132\":1}}],[\"===================\",{\"1\":{\"0\":1,\"73\":1}}],[\"==================\",{\"1\":{\"0\":1,\"73\":1,\"141\":1}}],[\"=\",{\"1\":{\"5\":7,\"6\":10,\"7\":8,\"71\":1,\"85\":1,\"93\":6,\"94\":6,\"138\":1,\"139\":1,\"141\":3,\"142\":5,\"144\":2,\"146\":6,\"148\":2}}],[\"size\",{\"1\":{\"142\":1,\"146\":1}}],[\"shanghai\",{\"1\":{\"138\":1,\"139\":1}}],[\"short\",{\"1\":{\"80\":1}}],[\"sr1<\",{\"1\":{\"137\":2}}],[\"so\",{\"1\":{\"129\":1}}],[\"so模块\",{\"1\":{\"92\":1}}],[\"s1\",{\"1\":{\"127\":1}}],[\"s0\",{\"1\":{\"127\":1}}],[\"springboot\",{\"0\":{\"169\":1}}],[\"springframework\",{\"1\":{\"137\":1,\"138\":3}}],[\"spring\",{\"0\":{\"113\":1,\"114\":1,\"115\":1,\"116\":1,\"167\":1,\"168\":1},\"1\":{\"137\":1,\"138\":1}}],[\"spi\",{\"1\":{\"55\":1}}],[\"spi通信不需要复杂的协议来控制通信\",{\"1\":{\"56\":1}}],[\"spi通信具有以下几个主要特点\",{\"0\":{\"56\":1}}],[\"spi通信\",{\"0\":{\"55\":1}}],[\"spi屏\",{\"1\":{\"31\":1}}],[\"su\",{\"1\":{\"102\":2}}],[\"supplier<u>\",{\"1\":{\"102\":2}}],[\"supplyasync\",{\"1\":{\"102\":2}}],[\"super\",{\"1\":{\"80\":1}}],[\"sleep\",{\"1\":{\"102\":1}}],[\"slip\",{\"1\":{\"72\":1}}],[\"samli\",{\"1\":{\"91\":2}}],[\"sas\",{\"1\":{\"44\":1}}],[\"smali\",{\"1\":{\"91\":5}}],[\"smtp协议等\",{\"1\":{\"72\":1}}],[\"synchronized\",{\"1\":{\"80\":1,\"103\":3}}],[\"system\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"81\":1,\"89\":2,\"138\":1,\"141\":2,\"142\":3,\"146\":1}}],[\"switch\",{\"1\":{\"80\":1}}],[\"servertimezone=asia\",{\"1\":{\"138\":1,\"139\":1}}],[\"service组件通常用于为其他组件提供后台服务或监控其他组件的运行状态\",{\"1\":{\"84\":1}}],[\"service组件需要继承service基类\",{\"1\":{\"84\":1}}],[\"service通常位于后台运行\",{\"1\":{\"84\":1}}],[\"service>标签\",{\"1\":{\"84\":1}}],[\"service分为两种\",{\"1\":{\"84\":1}}],[\"service用于在后台完成用户指定的操作\",{\"1\":{\"84\":1}}],[\"service是安卓里非常很重要的组件\",{\"1\":{\"84\":1}}],[\"service\",{\"1\":{\"84\":2}}],[\"serial\",{\"1\":{\"72\":1}}],[\"session\",{\"1\":{\"72\":1}}],[\"seh\",{\"1\":{\"69\":1}}],[\"setdatabaseschemaupdate\",{\"1\":{\"139\":1}}],[\"setjdbcpassword\",{\"1\":{\"139\":1}}],[\"setjdbcusername\",{\"1\":{\"139\":1}}],[\"setjdbcurl\",{\"1\":{\"139\":1}}],[\"setjdbcdriver\",{\"1\":{\"139\":1}}],[\"setwindowshookex\",{\"1\":{\"93\":1}}],[\"setonclicklistener\",{\"1\":{\"85\":1}}],[\"set\",{\"0\":{\"107\":1},\"1\":{\"36\":1}}],[\"sdo\",{\"1\":{\"57\":1}}],[\"sdi\",{\"1\":{\"57\":1}}],[\"sda由低到高的跳变\",{\"1\":{\"53\":1}}],[\"sda由高到低的跳变\",{\"1\":{\"53\":1}}],[\"sda\",{\"1\":{\"50\":1}}],[\"schemalocation=\",{\"1\":{\"138\":1}}],[\"schema\",{\"1\":{\"138\":3,\"139\":1}}],[\"scheduledthreadpoolexecutor\",{\"1\":{\"102\":1}}],[\"scrollview\",{\"1\":{\"87\":1}}],[\"sck\",{\"1\":{\"57\":1}}],[\"scl\",{\"1\":{\"50\":1}}],[\"scons\",{\"1\":{\"33\":1}}],[\"s\",{\"0\":{\"150\":1,\"152\":1},\"1\":{\"28\":1,\"70\":5}}],[\"sss\",{\"1\":{\"23\":1}}],[\"studio\",{\"1\":{\"82\":2}}],[\"strict\",{\"1\":{\"80\":1}}],[\"strictfp\",{\"1\":{\"80\":1}}],[\"stringbuilder\",{\"0\":{\"98\":1,\"106\":1},\"1\":{\"95\":1}}],[\"stringbuffer\",{\"0\":{\"97\":1,\"106\":1},\"1\":{\"95\":1}}],[\"string\",{\"0\":{\"96\":1,\"106\":1},\"1\":{\"5\":1,\"6\":1,\"7\":1,\"81\":1,\"95\":1,\"138\":1}}],[\"standaloneinmemprocessengineconfiguration\",{\"1\":{\"138\":1}}],[\"standard\",{\"1\":{\"36\":1}}],[\"stampedlock\",{\"1\":{\"111\":1}}],[\"startprocessinstancebymessage\",{\"1\":{\"144\":1}}],[\"startprocessinstancebykey\",{\"1\":{\"144\":1}}],[\"startprocessinstancebyid\",{\"1\":{\"144\":1}}],[\"starter<\",{\"1\":{\"137\":1}}],[\"starter\",{\"1\":{\"137\":1}}],[\"started\",{\"1\":{\"84\":2}}],[\"startservice\",{\"1\":{\"84\":1}}],[\"static\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"80\":1,\"81\":1,\"103\":1,\"138\":1}}],[\"stm32系列专为要求高性能\",{\"1\":{\"24\":1}}],[\"stm32简介\",{\"0\":{\"24\":1}}],[\"skywalking\",{\"0\":{\"1\":1}}],[\"冒泡排序\",{\"0\":{\"5\":1}}],[\"198\",{\"1\":{\"139\":1}}],[\"19\",{\"1\":{\"80\":1}}],[\"191\",{\"1\":{\"76\":1,\"77\":1}}],[\"18\",{\"1\":{\"80\":1}}],[\"17\",{\"1\":{\"80\":1}}],[\"16\",{\"1\":{\"80\":1}}],[\"16进制文件\",{\"1\":{\"28\":2}}],[\"14\",{\"0\":{\"170\":1},\"1\":{\"80\":1}}],[\"132\",{\"1\":{\"139\":1}}],[\"139\",{\"1\":{\"139\":1}}],[\"13\",{\"0\":{\"169\":1},\"1\":{\"80\":1}}],[\"127\",{\"1\":{\"138\":1}}],[\"12\",{\"0\":{\"168\":1},\"1\":{\"69\":1,\"80\":1}}],[\"115\",{\"1\":{\"139\":1}}],[\"115200\",{\"1\":{\"48\":1}}],[\"11系列标准\",{\"1\":{\"72\":1}}],[\"111l\",{\"1\":{\"71\":1}}],[\"11\",{\"0\":{\"167\":1},\"1\":{\"36\":1,\"80\":1}}],[\"15到15v\",{\"1\":{\"46\":1}}],[\"15\",{\"1\":{\"36\":1,\"80\":1}}],[\"100\",{\"1\":{\"102\":1}}],[\"10\",{\"0\":{\"23\":1,\"166\":1},\"1\":{\"80\":1}}],[\"1\",{\"0\":{\"5\":1,\"13\":1,\"29\":1,\"52\":1,\"60\":1},\"1\":{\"5\":2,\"6\":2,\"7\":3,\"47\":1,\"56\":1,\"64\":1,\"66\":1,\"67\":1,\"70\":1,\"84\":5,\"86\":1,\"88\":1,\"89\":1,\"91\":1,\"93\":1,\"94\":1,\"101\":1,\"102\":1,\"103\":1,\"111\":2,\"132\":1,\"138\":2}}],[\"排序算法\",{\"0\":{\"4\":1}}],[\"上线\",{\"1\":{\"3\":1}}],[\"测试\",{\"0\":{\"78\":1},\"1\":{\"3\":1}}],[\"环境搭建\",{\"0\":{\"38\":1,\"69\":1,\"74\":1,\"82\":1},\"1\":{\"3\":1}}],[\"页面设计\",{\"1\":{\"3\":1}}],[\"详细设计\",{\"1\":{\"3\":1}}],[\"技术架构\",{\"1\":{\"3\":1}}],[\"业务架构\",{\"1\":{\"3\":1}}],[\"图\",{\"1\":{\"3\":1}}],[\"需要通过aapt编译的资源索引表当中会生成索引\",{\"1\":{\"88\":1}}],[\"需规编写\",{\"1\":{\"3\":1}}],[\"需求分析\",{\"1\":{\"3\":1}}],[\"启动服务\",{\"1\":{\"84\":1}}],[\"启动信号是一种电平跳变时序信号\",{\"1\":{\"53\":1}}],[\"启动\",{\"1\":{\"3\":1,\"84\":1}}],[\"立项\",{\"1\":{\"3\":1}}],[\"edn\",{\"1\":{\"127\":1}}],[\"error\",{\"1\":{\"94\":2}}],[\"encoding=\",{\"1\":{\"138\":1}}],[\"enum\",{\"1\":{\"80\":1}}],[\"engine\",{\"1\":{\"73\":1,\"138\":3}}],[\"elk\",{\"0\":{\"123\":1}}],[\"elf可执行程序\",{\"1\":{\"92\":1}}],[\"else\",{\"1\":{\"80\":1}}],[\"elaticsearch\",{\"0\":{\"2\":1}}],[\"ethernet\",{\"1\":{\"72\":2}}],[\"ex\",{\"0\":{\"163\":1},\"1\":{\"102\":2}}],[\"excutor\",{\"1\":{\"102\":2}}],[\"extends\",{\"1\":{\"80\":1}}],[\"exe\",{\"1\":{\"70\":2}}],[\"executable\",{\"1\":{\"36\":2}}],[\"export\",{\"0\":{\"3\":1}}],[\"e\",{\"0\":{\"150\":1},\"1\":{\"7\":3,\"70\":1}}],[\"鱼头笔记\",{\"0\":{\"0\":1,\"68\":1},\"1\":{\"0\":1,\"68\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map

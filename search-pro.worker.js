const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ut=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const d=o*i;t:for(const l of e.keys())if(l===F){const a=u[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=o;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=u[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=u[f+y]+ +b,A=u[f+y+1]+1,w=u[p+y]+1,L=u[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,u,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=M(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ut(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,O(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},O=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const d=e.get(o);if(r===o.length)e=d;else{const l=new Map;l.set(o.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(o),e=l}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[u,o]=s.entries().next().value;q(n,u,o)}}},W=e=>{if(e.length===0)return;const[t,s]=M(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&q(e.slice(0,-1),n,u)}},q=(e,t,s)=>{if(e.length===0)return;const[n,u]=M(e);n.set(u+t,s),n.delete(u)},M=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",$="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},N=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),P(n.terms,o)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);P(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,u,o)=>{const{k:i,b:r,d}=o;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/u)))},ft=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},H=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const u=e._index.fetch(n,ht),o=u.get(t);o==null||o.get(s)==null?H(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:$,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,u,o,i,r,d=new Map)=>{if(u==null)return d;for(const l of Object.keys(o)){const a=o[l],h=e._fieldIds[l],m=u.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=G(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:G(n.boost,g)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,u,o,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,u,o,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,u,o,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),u=[];for(const[o,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(o),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(N),u},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=o,d.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:d}]of n)u.push({suggestion:o,terms:r,score:i/d});return u.sort(N),u};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=u,h._fieldLength=k(o),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&u.push(h),i+=h.length,a||(u.push(["mark",t]),i+=t.length,i>=100&&u.push(" …"))};let d=s.indexOf(n,o);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(o,d)),o=l,i>100)break;d=s.indexOf(n,o)}return i<100&&r(e.slice(o),!0),u},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,d=o.includes("@"),l=o.includes("#"),[a,h]=o.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>u.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(u.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in u)for(const c of u.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,u],[,o])=>"max"==="total"?xt(u,o):kt(u,o)).map(([u,{title:o,contents:i}])=>{if(!o){const r=it(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":120,\"nextId\":120,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-df975774\",\"2\":\"v-df975774#_1-冒泡排序\",\"3\":\"v-df975774#_2-选择排序\",\"4\":\"v-df975774#_3-插入排序\",\"5\":\"v-df975774#_4-希尔排序\",\"6\":\"v-df975774#_5-归并排序\",\"7\":\"v-df975774#_6-快速排序\",\"8\":\"v-df975774#_7-堆排序\",\"9\":\"v-df975774#_8\",\"10\":\"v-df975774#_1-顺序查找\",\"11\":\"v-df975774#_2-二分查找\",\"12\":\"v-df975774#_3-插值查找\",\"13\":\"v-df975774#_4-斐波那契查找\",\"14\":\"v-df975774#_5-树表查找\",\"15\":\"v-df975774#_6-分块查找\",\"16\":\"v-df975774#_7-哈希查找\",\"17\":\"v-df975774#二叉树\",\"18\":\"v-df975774#满二叉树\",\"19\":\"v-df975774#完全二叉树\",\"20\":\"v-53a83647\",\"21\":\"v-53a83647#电阻\",\"22\":\"v-53a83647#电容\",\"23\":\"v-53a83647#电感\",\"24\":\"v-29d09cb6\",\"25\":\"v-29d09cb6#_1-电路和电路模型\",\"26\":\"v-29d09cb6#_2-电流和电压的参考方向\",\"27\":\"v-0c4b9852\",\"28\":\"v-584abf60\",\"29\":\"v-d138e06a\",\"30\":\"v-2d8a340c\",\"31\":\"v-fc2e16e2\",\"32\":\"v-5a38f0e7\",\"33\":\"v-149ec9fb\",\"34\":\"v-149ec9fb#下载jdk\",\"35\":\"v-149ec9fb#安装jdk\",\"36\":\"v-149ec9fb#配置path-classpath\",\"37\":\"v-149ec9fb#测试\",\"38\":\"v-0dbe4cc3\",\"39\":\"v-0dbe4cc3#java-关键字\",\"40\":\"v-0dbe4cc3#第一个java程序\",\"41\":\"v-e60b4390\",\"42\":\"v-e60b4390#skywalking\",\"43\":\"v-e60b4390#elaticsearch-、logstash-、kibana\",\"44\":\"v-e60b4390#node-export\",\"45\":\"v-1760fc80\",\"46\":\"v-f06deeae\",\"47\":\"v-cac217ae\",\"48\":\"v-cac217ae#string\",\"49\":\"v-cac217ae#stringbuffer\",\"50\":\"v-cac217ae#stringbuilder\",\"51\":\"v-6768a10a\",\"52\":\"v-6768a10a#list\",\"53\":\"v-034a668c\",\"54\":\"v-034a668c#一、线程控制\",\"55\":\"v-034a668c#二、-锁\",\"56\":\"v-aa66a368\",\"57\":\"v-aa66a368#java-基础\",\"58\":\"v-aa66a368#string-、stringbuffer-、stringbuilder\",\"59\":\"v-aa66a368#集合类-list-、-map-、set\",\"60\":\"v-aa66a368#反射\",\"61\":\"v-aa66a368#代理\",\"62\":\"v-aa66a368#拷贝\",\"63\":\"v-aa66a368#多线程\",\"64\":\"v-aa66a368#分布式事务\",\"65\":\"v-aa66a368#spring\",\"66\":\"v-aa66a368#spring-1\",\"67\":\"v-aa66a368#spring-boot\",\"68\":\"v-aa66a368#spring-cloud\",\"69\":\"v-aa66a368#mysql\",\"70\":\"v-aa66a368#jvm\",\"71\":\"v-aa66a368#redis\",\"72\":\"v-aa66a368#rabbitmq\",\"73\":\"v-aa66a368#linux\",\"74\":\"v-aa66a368#设计模式\",\"75\":\"v-aa66a368#elk\",\"76\":\"v-aa66a368#docker\",\"77\":\"v-2301ce1a\",\"78\":\"v-2301ce1a#一、类加载\",\"79\":\"v-2301ce1a#二、堆\",\"80\":\"v-2301ce1a#三、虚拟机栈\",\"81\":\"v-2301ce1a#四、本地方法栈\",\"82\":\"v-2301ce1a#五、方法区\",\"83\":\"v-2301ce1a#六、程序计数器\",\"84\":\"v-2301ce1a#七、gc\",\"85\":\"v-2301ce1a#对象布局\",\"86\":\"v-cc7ffb64\",\"87\":\"v-cc7ffb64#官网\",\"88\":\"v-a555d4b2\",\"89\":\"v-a555d4b2#第一步-maven-pom-xml\",\"90\":\"v-a555d4b2#第二步-生成数据表\",\"91\":\"v-a555d4b2#第二步-生成数据表-方法二\",\"92\":\"v-e283fcf4\",\"93\":\"v-e283fcf4#部署流程\",\"94\":\"v-e283fcf4#查询流程\",\"95\":\"v-7cba7ed4\",\"96\":\"v-7cba7ed4#发起一个流程\",\"97\":\"v-b4770554\",\"98\":\"v-b4770554#查询一个待办任务\",\"99\":\"v-677edd98\",\"100\":\"v-677edd98#任务审批\",\"101\":\"v-3d93328c\",\"102\":\"v-3ca87478\",\"103\":\"v-aebdcb92\",\"104\":\"v-3dc20d1b\",\"105\":\"v-5c853c80\",\"106\":\"v-176eef63\",\"107\":\"v-ec8fbf06\",\"108\":\"v-3eaf88e8\",\"109\":\"v-2ec10888\",\"110\":\"v-64afd7de\",\"111\":\"v-0a2d1b07\",\"112\":\"v-65a31018\",\"113\":\"v-e3c090a8\",\"114\":\"v-af25ebea\",\"115\":\"v-5786cf42\",\"116\":\"v-191fae76\",\"117\":\"v-30d8f8be\",\"118\":\"v-4c05c3d6\",\"119\":\"v-6716afd5\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,1],\"1\":[2],\"2\":[2,39],\"3\":[2,39],\"4\":[2,38],\"5\":[2],\"6\":[2],\"7\":[2],\"8\":[2],\"9\":[2],\"10\":[2],\"11\":[2],\"12\":[2],\"13\":[2],\"14\":[2],\"15\":[2],\"16\":[2],\"17\":[1],\"18\":[1],\"19\":[1],\"20\":[2],\"21\":[1],\"22\":[1],\"23\":[1],\"24\":[2,2],\"25\":[2,5],\"26\":[2,16],\"27\":[2,36],\"28\":[1,23],\"29\":[3,65],\"30\":[2,13],\"31\":[1,81],\"32\":[1,41],\"33\":[2],\"34\":[1,14],\"35\":[1,8],\"36\":[2,16],\"37\":[1,4],\"38\":[2],\"39\":[2,186],\"40\":[1,14],\"41\":[1,3],\"42\":[1],\"43\":[3],\"44\":[2],\"45\":[1,62],\"46\":[1,73],\"47\":[3,4],\"48\":[1],\"49\":[1],\"50\":[1],\"51\":[4],\"52\":[1],\"53\":[3,6],\"54\":[2,48],\"55\":[2,35],\"56\":[1],\"57\":[2],\"58\":[3],\"59\":[4],\"60\":[1],\"61\":[1],\"62\":[1],\"63\":[1,21],\"64\":[1,2],\"65\":[1],\"66\":[1],\"67\":[2],\"68\":[2],\"69\":[1],\"70\":[1],\"71\":[1],\"72\":[1],\"73\":[1],\"74\":[1],\"75\":[1],\"76\":[1],\"77\":[3],\"78\":[2,4],\"79\":[2,8],\"80\":[2,2],\"81\":[2,4],\"82\":[2,3],\"83\":[2,2],\"84\":[2,5],\"85\":[1,12],\"86\":[2],\"87\":[1,5],\"88\":[2],\"89\":[4,27],\"90\":[2,84],\"91\":[4,39],\"92\":[2],\"93\":[1,39],\"94\":[1,34],\"95\":[2],\"96\":[1,17],\"97\":[2],\"98\":[1,34],\"99\":[2],\"100\":[1,15],\"101\":[1],\"102\":[3],\"103\":[1],\"104\":[3],\"105\":[1],\"106\":[1],\"107\":[1],\"108\":[1],\"109\":[1],\"110\":[1],\"111\":[1],\"112\":[1],\"113\":[5],\"114\":[2],\"115\":[5],\"116\":[2],\"117\":[5],\"118\":[2],\"119\":[2]},\"averageFieldLength\":[1.7499999999999998,26.457754567922525],\"storedFields\":{\"0\":{\"h\":\"鱼头笔记\",\"t\":[\"鱼头笔记\"]},\"1\":{\"h\":\"01.排序算法\"},\"2\":{\"h\":\"1.冒泡排序\",\"t\":[\"public static void main(String[] args) { int[] arr = {1, 23, 4, 5, 88, 9, 6, 4, 7, 8, 2, 43, 54, 40}; for (int i = 0; i < arr.length; i++) { for (int j = i + 1; j < arr.length; j++) { if (arr[i] > arr[j]) { int m = arr[i]; arr[i] = arr[j]; arr[j] = m; } } } for (int i = 0; i < arr.length; i++) { System.out.print(arr[i] + \\\"\\\\t\\\"); } } \"]},\"3\":{\"h\":\"2.选择排序\",\"t\":[\"public static void main(String[] args) { int[] arr = {1, 23, 4, 5, 88, 9, 6, 4, 7, 8, 2, 43, 54, 40}; for (int i = 0; i < arr.length; i++) { int minIndex = i; for (int j = i + 1; j < arr.length; j++) { if (arr[j] - arr[minIndex] < 0) { minIndex = j; } } if (minIndex != i) { int temp = arr[i]; arr[i] = arr[minIndex]; arr[minIndex] = temp; } } for (int i = 0; i < arr.length; i++) { System.out.print(arr[i] + \\\"\\\\t\\\"); } } \"]},\"4\":{\"h\":\"3.插入排序\",\"t\":[\"public static void main(String[] args) { int[] arr = {1, 23, 4, 5, 88, 9, 6, 4, 7, 8, 2, 43, 54, 40}; int n = arr.length; for (int i = 0; i < n; i++) { int e = arr[i]; int j = i; for (; j > 0 && (arr[j - 1] - e > 0); j--) { arr[j] = arr[j - 1]; } arr[j] = e; } for (int i = 0; i < arr.length; i++) { System.out.print(arr[i] + \\\"\\\\t\\\"); } } \"]},\"5\":{\"h\":\"4.希尔排序\"},\"6\":{\"h\":\"5.归并排序\"},\"7\":{\"h\":\"6.快速排序\"},\"8\":{\"h\":\"7.堆排序\"},\"9\":{\"h\":\"8.\"},\"10\":{\"h\":\"1.顺序查找\"},\"11\":{\"h\":\"2.二分查找\"},\"12\":{\"h\":\"3.插值查找\"},\"13\":{\"h\":\"4.斐波那契查找\"},\"14\":{\"h\":\"5.树表查找\"},\"15\":{\"h\":\"6.分块查找\"},\"16\":{\"h\":\"7.哈希查找\"},\"17\":{\"h\":\"二叉树\"},\"18\":{\"h\":\"满二叉树\"},\"19\":{\"h\":\"完全二叉树\"},\"20\":{\"h\":\"02.电子元件\"},\"21\":{\"h\":\"电阻\"},\"22\":{\"h\":\"电容\"},\"23\":{\"h\":\"电感\"},\"24\":{\"h\":\"01.电路基础\",\"t\":[\"##第一章\"]},\"25\":{\"h\":\"1.电路和电路模型\",\"t\":[\"电阻\",\"电感\",\"电容\",\"电压\",\"电流\"]},\"26\":{\"h\":\"2.电流和电压的参考方向\",\"t\":[\"3.电功率和能量 4.电路元件 5.电阻元件 欧姆定律 6.电压和电流源 7.受控电源 8.基尔霍夫定律\",\"##第二章 电路的等效变换\",\"电阻的串联和并联\"]},\"27\":{\"h\":\"01.环境搭建\",\"t\":[\"下载： https://github.com/niXman/mingw-builds-binaries/releases x86_64-12.2.0-release-posix-seh-rt_v10-rev1.7z 解压：D:\\\\c\\\\mingw64 配置到path 配置 clion file->setting->build->toolchains-> + 添加 \"]},\"28\":{\"h\":\"\",\"t\":[\" 第一章 FreeRTOS移植到STM32 第二章 FreeRTOS创建任务 第三章 FreeRTOS任务管理 第四章 FreeRTOS消息队列 第五章 FreeRTOS信号量 第六章 FreeRTOS互斥量 第七章 FreeRTOS事件组 第八章 FreeRTOS任务通知 第九章 FreeRTOS软件定时器 第十章 FreeRTOS内存管理 第十一章 FreeRTOS中断管理 \"]},\"29\":{\"h\":\"02.C 编译过程\",\"t\":[\"gcc ***.c\",\" 1.预处理 译过程的第一步预就是预处理，与处理结束后会产生一个后缀为(.i)的临时文件，这一步由预处理器完成。预处理器主要完成以下任务。 删除所有的注释 宏扩展 文件包含 g++ -E text.cpp -o text.i 2.编译 C 中的编译阶段使用内置编译器软件将 （.i） 临时文件转换为具有汇编级指令（低级代码）的汇编文件 （.s）。 汇编代码是一种简单的英文语言，用于编写低级指令（在微控制器程序中，我们使用汇编语言）。 整个程序代码由编译器软件一次性解析（语法分析），并通过终端窗口告诉我们源代码中存在的任何语法错误或警告。 g++ -S text.i -o text.s 3.汇编 使用汇编程序将程序集级代码（.s 文件）转换为机器可理解的代码（二进制/十六进制形式）。 汇编程序是一个预先编写的程序，它将汇编代码转换为机器代码。 它从汇编文件中获取基本指令，并将其转换为特定于计算机类型（称为目标代码）的二进制/十六进制代码。 g++ -c text.s -o text.o 4.连接 链接是将库文件包含在我们的程序中的过程。 库文件是一些预定义的文件，其中包含机器语言中的函数定义，这些文件的扩展名为.lib。 链接过程会生成一个可执行文件，其扩展名为 .exe 在Linux 操作系统中为 .out g++ text.o -o mybin ld.exe 连接器 \"]},\"30\":{\"h\":\"02.基本关键字\",\"t\":[\" 常量： #define URl \\\"http://xxxxx.xxx\\\" const long aa = 111L; 宏定义： \"]},\"31\":{\"h\":\"\",\"t\":[\"常用的网络协议\",\"物理层（Physical Layer）：负责传输数据的物理媒介和比特流，例如电缆、光纤、无线信号等。 数据链路层（Data Link Layer）：提供对物理层传输的比特流进行分帧和差错校验，确保可靠的数据传输，例如以太网协议。 以太网（Ethernet）：是最常用的局域网技术，定义了数据链路层的帧格式和MAC地址的使用规则。 PPP（Point-to-Point Protocol）：用于在点对点连接上建立和维护数据链路连接，例如拨号连接或串行链路。 HDLC（High-Level Data Link Control）：一种数据链路层协议，用于在点对点或点对多点的通信链路上提供可靠的数据传输。 SLIP（Serial Line Internet Protocol）：一种简单的数据链路层协议，通常用于串行线路上的IP数据传输。 PPPoE（Point-to-Point Protocol over Ethernet）：在以太网上运行的一种协议，将PPP封装在以太网帧中，用于在宽带接入网络中建立和维护连接。 Wi-Fi（Wireless Fidelity）：无线局域网技术，定义了无线数据链路层的帧格式和协议，如IEEE 802.11系列标准。 网络层（Network Layer）：处理分组的路由和转发，实现不同网络之间的数据传输，例如IP协议。 传输层（Transport Layer）：提供端到端的可靠数据传输，包括分段、流量控制和错误恢复，例如TCP协议和UDP协议。 会话层（Session Layer）：建立、管理和终止会话（连接）中的通信会话，例如会话控制协议。 表示层（Presentation Layer）：处理数据的表示格式，包括数据加密、压缩和格式转换，例如加密协议和压缩协议。 应用层（Application Layer）：提供网络应用服务和用户接口，例如HTTP协议、FTP协议、SMTP协议等。 \"]},\"32\":{\"h\":\"\",\"t\":[\"================== dll 注入原理 首先我们知道在windows上面如果引入一个dll的话，那么需要用到一个函数 loadlibrary() 这个函数是用来引入外部dll的 因为这个函数在系统的kernel32.dll里面，所有软件都会引入包含这个dll, 而且都是使用同一份，所以在所有软件里面，这个 dll的基地址是固定的 我们其实主要是要用到它里面的一个函数， loadlibrary() 地址，你们想，既然所有软件这个dll的基址都是一样，那么它里面 的函数肯定也是一样的。那这就好办了，我们只需要在我们自己的程序，比如这个注入工具里面自己获取自己的loadlibrary()地 址，不就知道程序里面的loadlibrary()函数地址了么， 知道这个地址后,通过进程打开程序获取程序的句柄，然后写入我们的dll的路径，用远程线程方式去执行这个这个函数，程序就自己 引入我们的dll从而注入到程序内部，这个时候我们想怎么操作程序内存数据都没问题 =================== 工具 onlly Debug Cheat Engine \",\" \"]},\"33\":{\"h\":\"01.环境搭建\"},\"34\":{\"h\":\"下载JDK\",\"t\":[\"下载地址 https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html \"]},\"35\":{\"h\":\"安装JDK\",\"t\":[\"安装位置 D:\\\\java\\\\jdk1.8.0_191 \"]},\"36\":{\"h\":\"配置path & classpath\",\"t\":[\"JAVA_HOME D:\\\\java\\\\jdk1.8.0_191 Path %JAVA_HOME%\\\\bin CLASSPATH .;%JAVA_HOME%\\\\lib\\\\dt.jar;%JAVA_HOME%\\\\lib\\\\toos.jar \"]},\"37\":{\"h\":\"测试\",\"t\":[\"java javac java -version \"]},\"38\":{\"h\":\"02.基本操作\"},\"39\":{\"h\":\"JAVA 关键字\",\"t\":[\"序号\",\"关键字\",\"含义\",\"01\",\"abstract\",\"表明类或者成员方法具有抽象属性\",\"02\",\"assert\",\"断言，用来进行程序调试\",\"03\",\"boolean\",\"基本数据类型之一，声明布尔类型的关键字\",\"04\",\"break\",\"提前跳出一个块\",\"05\",\"byte\",\"基本数据类型之一，字节类型\",\"06\",\"case\",\"用在switch语句之中，表示其中的一个分支\",\"07\",\"catch\",\"用在异常处理中，用来捕捉异常\",\"08\",\"char\",\"基本数据类型之一，字符类型\",\"09\",\"class\",\"声明一个类\",\"10\",\"const\",\"保留关键字，没有具体含义\",\"11\",\"continue\",\"回到一个块的开始处\",\"12\",\"default\",\"默认，例如，用在switch语句中，表明一个默认的分支。Java8 中也作用于声明接口函数的默认实现\",\"13\",\"do\",\"用在do-while循环结构中\",\"14\",\"double\",\"基本数据类型之一，双精度浮点数类型\",\"15\",\"else\",\"用在条件语句中，表明当条件不成立时的分支\",\"16\",\"enum\",\"枚举\",\"17\",\"extends\",\"表明一个类型是另一个类型的子类型。对于类，可以是另一个类或者抽象类；对于接口，可以是另一个接口\",\"18\",\"final\",\"用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变，用来定义常量\",\"19\",\"finally\",\"用于处理异常情况，用来声明一个基本肯定会被执行到的语句块\",\"20\",\"float\",\"基本数据类型之一，单精度浮点数类型\",\"21\",\"for\",\"一种循环结构的引导词\",\"22\",\"goto\",\"保留关键字，没有具体含义\",\"23\",\"if\",\"条件语句的引导词\",\"24\",\"implements\",\"表明一个类实现了给定的接口\",\"25\",\"import\",\"表明要访问指定的类或包\",\"26\",\"instanceof\",\"用来测试一个对象是否是指定类型的实例对象\",\"27\",\"int\",\"基本数据类型之一，整数类型\",\"28\",\"interface\",\"接口\",\"29\",\"long\",\"基本数据类型之一，长整数类型\",\"30\",\"native\",\"用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的\",\"31\",\"new\",\"用来创建新实例对象\",\"32\",\"package\",\"包\",\"33\",\"private\",\"一种访问控制方式：私用模式\",\"34\",\"protected\",\"一种访问控制方式：保护模式\",\"35\",\"public\",\"一种访问控制方式：共用模式\",\"36\",\"record\",\"record在定义数据类时更为简洁、易读和易用。\",\"37\",\"return\",\"从成员方法中返回数据\",\"38\",\"short\",\"基本数据类型之一,短整数类型\",\"39\",\"static\",\"表明具有静态属性\",\"40\",\"strictfp\",\"用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范\",\"41\",\"super\",\"表明当前对象的父类型的引用或者父类型的构造方法\",\"42\",\"switch\",\"分支语句结构的引导词\",\"43\",\"synchronized\",\"表明一段代码需要同步执行\",\"44\",\"this\",\"指向当前实例对象的引用\",\"45\",\"throw\",\"抛出一个异常\",\"46\",\"throws\",\"声明在当前定义的成员方法中所有需要抛出的异常\",\"47\",\"transient\",\"声明不用序列化的成员域\",\"48\",\"try\",\"尝试一个可能抛出异常的程序块\",\"49\",\"void\",\"声明当前成员方法没有返回值\",\"50\",\"volatile\",\"表明两个或者多个变量必须同步地发生变化\",\"51\",\"while\",\"用在循环结构中\"]},\"40\":{\"h\":\"第一个java程序\",\"t\":[\" public class Test{ public static void main(String arg){ System.out.println(\\\"Hello World\\\"); } } \"]},\"41\":{\"h\":\"项目架构\",\"t\":[\"================== 服务监控 ===================\"]},\"42\":{\"h\":\"SkyWalking\"},\"43\":{\"h\":\"ElaticSearch 、Logstash 、Kibana\"},\"44\":{\"h\":\"node export\"},\"45\":{\"h\":\"\",\"t\":[\" #include <stdio.h> #include <Windows.h> LRESULT CALLBACK LowLevelKeyboardProc(int nCode, WPARAM wParam, LPARAM lParam) { if (nCode >= 0 && wParam == WM_KEYDOWN) { KBDLLHOOKSTRUCT* pKeyStruct = (KBDLLHOOKSTRUCT*)lParam; DWORD vkCode = pKeyStruct->vkCode; FILE* file = fopen(\\\"xxx.txt\\\", \\\"a\\\"); if (file != NULL) { fprintf(file, \\\"%ld\\\\n\\\", vkCode); fclose(file); } } return CallNextHookEx(NULL, nCode, wParam, lParam); } int main() { // 设置键盘钩子 HHOOK hook = SetWindowsHookEx(WH_KEYBOARD_LL, LowLevelKeyboardProc, NULL, 0); if (hook == NULL) { printf(\\\"Failed to install hook\\\\n\\\"); return 1; } // 消息循环，等待键盘事件 MSG msg; while (GetMessage(&msg, NULL, 0, 0) != 0) { TranslateMessage(&msg); DispatchMessage(&msg); } // 卸载键盘钩子 UnhookWindowsHookEx(hook); return 0; } \"]},\"46\":{\"h\":\"\",\"t\":[\"CMakeLists.txt\",\"target_link_libraries(untitled1 D:/c/mingw64/x86_64-w64-mingw32/lib/libiphlpapi.a)\",\" #include <stdio.h> #include <winsock2.h> #include <iphlpapi.h> #include <windows.h> int main() { PIP_ADAPTER_ADDRESSES pAddresses = NULL; ULONG outBufLen = 0; // 获取缓冲区大小 if (GetAdaptersAddresses(AF_UNSPEC, GAA_FLAG_INCLUDE_PREFIX, NULL, pAddresses, &outBufLen) == ERROR_BUFFER_OVERFLOW) { // 分配足够的缓冲区 pAddresses = (IP_ADAPTER_ADDRESSES*)malloc(outBufLen); } // 获取网卡列表 if (GetAdaptersAddresses(AF_UNSPEC, GAA_FLAG_INCLUDE_PREFIX, NULL, pAddresses, &outBufLen) == NO_ERROR) { PIP_ADAPTER_ADDRESSES pCurrAddresses = pAddresses; int i = 1; // 遍历网卡列表并打印信息 while (pCurrAddresses) { printf(\\\" 序号: %d. %ws \\\\n\\\", i++, pCurrAddresses->FriendlyName); printf(\\\" 描述: %ws \\\\n\\\", pCurrAddresses->Description); printf(\\\" Adapter ID: %ws \\\\n\\\", pCurrAddresses->AdapterName); printf(\\\"\\\\n\\\\n\\\\n\\\"); pCurrAddresses = pCurrAddresses->Next; } } // 释放内存 if (pAddresses) { free(pAddresses); } return 0; } \"]},\"47\":{\"h\":\"03.字符串_API\",\"t\":[\"字符串: String 、StringBuffer 、StringBuilder\"]},\"48\":{\"h\":\"String\"},\"49\":{\"h\":\"StringBuffer\"},\"50\":{\"h\":\"StringBuilder\"},\"51\":{\"h\":\"04.集合类_List_API\"},\"52\":{\"h\":\"List\"},\"53\":{\"h\":\"JUC  java 并发编程\",\"t\":[\"###################################### 两份内容 1.线程控制 2.锁\",\"#####################################\"]},\"54\":{\"h\":\"一、线程控制\",\"t\":[\"线程创建 1.Thread 类 2.Runable 接口 3.Callable 接口 线程睡眠、等待、唤醒 Thread.sleep(100) wait()等待通知方法是Object类中的方法 join()方法是Thread类直接提供的，无参，返回值void。 notify()函数一个线程在调用共享对象的notify()方法后，会唤醒一个在共享变量上wait等待的线程，如果有多个线程在等待，具体唤醒哪一个则是随机的。 notifyAll()函数唤醒共享变量上的所有wait挂起的线程。 用户线程： 守护线程： 异步任务接口: Future FutureTask RunnableScheduledFuture -> ScheduledThreadPoolExecutor CompletableFuture 4个重要的静态方法 runAsync(Runable runable); runAsync(Runable runable, Excutor ex); supplyAsync(Supplier<U> su); supplyAsync(Supplier<U> su, Excutor ex); 线程中断 LockSuport \"]},\"55\":{\"h\":\"二、 锁\",\"t\":[\"AQS 抽象队列同步器\\n    是用来实现锁或者其它同步器组件的公共基础部分的抽象实现，主要是解决锁分配给哪个线程的问题\\n    是重量级基础框架及整个juc体系的基石\\n    整体就是一个抽象的FIFO队列来完成资源获取线程的排队工作，并通过一个int类变量表示持有锁的状态\\n    \\n\\n锁的8种现象: 理解无锁、对象锁、类锁\\nsynchronized 原理    monitor(管程)\\n    同步代码块   \\n        monitorenter  加锁\\n        monitorexit   解锁\\n    同步方法\\n        ACC_SYNCHRONIZED\\n    静态同步方法\\n        ACC_STATIC     ACC_SYNCHRONIZED\\n    \\n死锁排查\\n    jps -l  查进程\\n    jstack <进程号>\\n        Found 1 deadlock\\n\"]},\"56\":{\"h\":\"\"},\"57\":{\"h\":\"java 基础\"},\"58\":{\"h\":\"String 、StringBuffer 、StringBuilder\"},\"59\":{\"h\":\"集合类 List 、 Map 、Set\"},\"60\":{\"h\":\"反射\"},\"61\":{\"h\":\"代理\"},\"62\":{\"h\":\"拷贝\"},\"63\":{\"h\":\"多线程\",\"t\":[\"多线程控制： 创建线程 1. 2. 3. 停止线程: 线程休眠: 线程等待: 线程通信: CompletableFuture AQS: 0.无锁 1.独占锁： ReentrantLock 2.读写锁： ReentrantReadWriteLock 3.邮戳锁,版本锁 StampedLock \"]},\"64\":{\"h\":\"分布式事务\",\"t\":[\"##分布式锁\"]},\"65\":{\"h\":\"spring\"},\"66\":{\"h\":\"spring\"},\"67\":{\"h\":\"spring boot\"},\"68\":{\"h\":\"spring cloud\"},\"69\":{\"h\":\"mysql\"},\"70\":{\"h\":\"jvm\"},\"71\":{\"h\":\"redis\"},\"72\":{\"h\":\"rabbitmq\"},\"73\":{\"h\":\"linux\"},\"74\":{\"h\":\"设计模式\"},\"75\":{\"h\":\"ELK\"},\"76\":{\"h\":\"Docker\"},\"77\":{\"h\":\"JVM java 虚拟机\"},\"78\":{\"h\":\"一、类加载\",\"t\":[\"类加载过程 类加载器 双亲委派 \"]},\"79\":{\"h\":\"二、堆\",\"t\":[\"结构： 新生代： edn s0 s1 老年代： 元空间： \"]},\"80\":{\"h\":\"三、虚拟机栈\",\"t\":[\"结构: \"]},\"81\":{\"h\":\"四、本地方法栈\",\"t\":[\"调用操作系统方法, .so .lib \"]},\"82\":{\"h\":\"五、方法区\",\"t\":[\"结构： 保存类信息 \"]},\"83\":{\"h\":\"六、程序计数器\",\"t\":[\"当前线程执行位置 \"]},\"84\":{\"h\":\"七、GC\",\"t\":[\"算法: 1. 2. GC分别有哪几个？ \",\"====================\"]},\"85\":{\"h\":\"对象布局\",\"t\":[\"对象头：\\n        对象标记\\n            哈希码\\n            GC标记\\n            GC次数\\n            同步锁标记\\n            偏向锁持有者\\n        类元信息（类型指针）\\n实例数据：\\n    \\n对齐填充：\\n\"]},\"86\":{\"h\":\"01.简介\"},\"87\":{\"h\":\"官网\",\"t\":[\"https://www.activiti.org/ \"]},\"88\":{\"h\":\"02.与springboot集成\"},\"89\":{\"h\":\"第一步: maven pom.xml\",\"t\":[\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-jdbc</artifactId> </dependency> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> </dependency> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-spring-boot-starter</artifactId> <version>7.0.0.SR1</version> </dependency> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-json-converter</artifactId> <version>7.0.0.SR1</version> </dependency> \"]},\"90\":{\"h\":\"第二步: 生成数据表\",\"t\":[\" import org.activiti.engine.ProcessEngine; import org.activiti.engine.ProcessEngines; public class ActivityTest { public static void main(String[] args) { ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); System.out.println(processEngine); } } \",\"activiti.cfg.xml\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <beans xmlns=\\\"http://www.springframework.org/schema/beans\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\\\"> <bean id=\\\"processEngineConfiguration\\\" class=\\\"org.activiti.engine.impl.cfg.StandaloneInMemProcessEngineConfiguration\\\"> <!-- 数据库驱动 --> <property name=\\\"jdbcDriver\\\" value=\\\"com.mysql.cj.jdbc.Driver\\\" /> <!-- 数据库连接 --> <property name=\\\"jdbcUrl\\\" value=\\\"jdbc:mysql://127.0.0.1:3306/activiti?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&amp;nullCatalogMeansCurrent=true\\\" /> <!-- 数据库用户名 --> <property name=\\\"jdbcUsername\\\" value=\\\"root\\\" /> <!-- 数据库密码 --> <property name=\\\"jdbcPassword\\\" value=\\\"because\\\" /> <property name=\\\"databaseSchemaUpdate\\\" value=\\\"false\\\"/> </bean> </beans> \"]},\"91\":{\"h\":\"第二步: 生成数据表 （ 方法二 ）\",\"t\":[\" @Test public void test02() { ProcessEngine processEngine = ProcessEngineConfiguration .createStandaloneProcessEngineConfiguration() .setJdbcDriver(\\\"com.mysql.cj.jdbc.Driver\\\") .setJdbcUrl(\\\"jdbc:mysql://139.198.115.132:3306/activiti?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true\\\") .setJdbcUsername(\\\"root\\\") .setJdbcPassword(\\\"because\\\") .setDatabaseSchemaUpdate(ProcessEngineConfiguration.DB_SCHEMA_UPDATE_TRUE) .buildProcessEngine(); } \"]},\"92\":{\"h\":\"04.部署流程\"},\"93\":{\"h\":\"部署流程\",\"t\":[\" @Test public void test03() { System.out.println(\\\"================== 部署流程 ========================\\\"); ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); RepositoryService repositoryService = processEngine.getRepositoryService(); // 关键 DeploymentBuilder deployment = repositoryService.createDeployment(); // ======================================================= // 文件 deployment.addClasspathResource(\\\"xxx/xxx.xml\\\"); deployment.name(\\\"第一个流程\\\"); // 字节流 // deployment.addBytes(); // 字符 //deployment.addString(); // 模型 // deployment.addBpmnModel(); // ======================================================== deployment.deploy(); System.out.println(\\\"==============================================\\\"); } \"]},\"94\":{\"h\":\"查询流程\",\"t\":[\" @Test public void test04() { ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); RepositoryService repositoryService = processEngine.getRepositoryService(); // 关键 DeploymentQuery deploymentQuery = repositoryService.createDeploymentQuery(); // 查询所有 List<Deployment> list = deploymentQuery.list(); for (int i = 0; i < list.size(); i++) { System.out.println(list.get(i).getId()); System.out.println(list.get(i).getName()); } System.out.println(\\\"==============================================\\\"); } \"]},\"95\":{\"h\":\"05.发起一个流程\"},\"96\":{\"h\":\"发起一个流程\",\"t\":[\" @Test public void test05() { ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); RuntimeService runtimeService = processEngine.getRuntimeService(); // 关键 runtimeService.startProcessInstanceById(\\\"\\\"); // runtimeService.startProcessInstanceByKey(\\\"\\\"); // runtimeService.startProcessInstanceByMessage() } \"]},\"97\":{\"h\":\"06.查询待办\"},\"98\":{\"h\":\"查询一个待办任务\",\"t\":[\" @Test public void test06() { ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); TaskService taskService = processEngine.getTaskService(); // 关键 TaskQuery taskQuery = taskService.createTaskQuery(); taskQuery.taskAssignee(\\\"\\\"); List<Task> list = taskQuery.list(); for (int i = 0; i < list.size(); i++) { Task task = list.get(i); System.out.println(task.getName()); } } \"]},\"99\":{\"h\":\"07.任务审批\"},\"100\":{\"h\":\"任务审批\",\"t\":[\" @Test public void test07() { ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); TaskService taskService = processEngine.getTaskService(); // 关键 taskService.complete(\\\"\\\"); } \"]},\"101\":{\"h\":\"数据结构和算法\"},\"102\":{\"h\":\"E S P\"},\"103\":{\"h\":\"硬件\"},\"104\":{\"h\":\"S T M32\"},\"105\":{\"h\":\"通信协议\"},\"106\":{\"h\":\"数学物理\"},\"107\":{\"h\":\"科学基础知识\"},\"108\":{\"h\":\"C\"},\"109\":{\"h\":\"编程语言\"},\"110\":{\"h\":\"Java\"},\"111\":{\"h\":\"个人理解\"},\"112\":{\"h\":\"Ex\"},\"113\":{\"h\":\"03. J A V A基本\"},\"114\":{\"h\":\"09.多线程\"},\"115\":{\"h\":\"10.虚拟机 J V M\"},\"116\":{\"h\":\"11.spring\"},\"117\":{\"h\":\"12.spring M V C\"},\"118\":{\"h\":\"13.springboot\"},\"119\":{\"h\":\"14.工作流\"}},\"dirtCount\":0,\"index\":[[\"工作流\",{\"0\":{\"119\":1}}],[\"工具\",{\"1\":{\"32\":1}}],[\"个人理解\",{\"0\":{\"111\":1}}],[\"编程语言\",{\"0\":{\"109\":1}}],[\"编译\",{\"1\":{\"29\":1}}],[\"编译过程\",{\"0\":{\"29\":1}}],[\"科学基础知识\",{\"0\":{\"107\":1}}],[\"数学物理\",{\"0\":{\"106\":1}}],[\"数据结构和算法\",{\"0\":{\"101\":1}}],[\"数据库密码\",{\"1\":{\"90\":1}}],[\"数据库用户名\",{\"1\":{\"90\":1}}],[\"数据库连接\",{\"1\":{\"90\":1}}],[\"数据库驱动\",{\"1\":{\"90\":1}}],[\"数据链路层\",{\"1\":{\"31\":1}}],[\"硬件\",{\"0\":{\"103\":1}}],[\"任务审批\",{\"0\":{\"99\":1,\"100\":1}}],[\"发起一个流程\",{\"0\":{\"95\":1,\"96\":1}}],[\"查询一个待办任务\",{\"0\":{\"98\":1}}],[\"查询待办\",{\"0\":{\"97\":1}}],[\"查询所有\",{\"1\":{\"94\":1}}],[\"查询流程\",{\"0\":{\"94\":1}}],[\"查进程\",{\"1\":{\"55\":1}}],[\"模型\",{\"1\":{\"93\":1}}],[\"关键\",{\"1\":{\"93\":1,\"94\":1,\"96\":1,\"98\":1,\"100\":1}}],[\"关键字\",{\"0\":{\"39\":1},\"1\":{\"39\":1}}],[\"部署流程\",{\"0\":{\"92\":1,\"93\":1},\"1\":{\"93\":1}}],[\"生成数据表\",{\"0\":{\"90\":1,\"91\":1}}],[\"与springboot集成\",{\"0\":{\"88\":1}}],[\"与处理结束后会产生一个后缀为\",{\"1\":{\"29\":1}}],[\"官网\",{\"0\":{\"87\":1}}],[\"简介\",{\"0\":{\"86\":1}}],[\"实例数据\",{\"1\":{\"85\":1}}],[\"实现的\",{\"1\":{\"39\":1}}],[\"实现不同网络之间的数据传输\",{\"1\":{\"31\":1}}],[\"偏向锁持有者\",{\"1\":{\"85\":1}}],[\"哈希码\",{\"1\":{\"85\":1}}],[\"哈希查找\",{\"0\":{\"16\":1}}],[\"算法\",{\"1\":{\"84\":1}}],[\"七\",{\"0\":{\"84\":1}}],[\"当前线程执行位置\",{\"1\":{\"83\":1}}],[\"程序计数器\",{\"0\":{\"83\":1}}],[\"程序就自己\",{\"1\":{\"32\":1}}],[\"六\",{\"0\":{\"83\":1}}],[\"五\",{\"0\":{\"82\":1}}],[\"调用操作系统方法\",{\"1\":{\"81\":1}}],[\"本地方法栈\",{\"0\":{\"81\":1}}],[\"四\",{\"0\":{\"81\":1}}],[\"三\",{\"0\":{\"80\":1}}],[\"元空间\",{\"1\":{\"79\":1}}],[\"老年代\",{\"1\":{\"79\":1}}],[\"新生代\",{\"1\":{\"79\":1}}],[\"结构\",{\"1\":{\"79\":1,\"80\":1,\"82\":1}}],[\"堆\",{\"0\":{\"79\":1}}],[\"堆排序\",{\"0\":{\"8\":1}}],[\"双亲委派\",{\"1\":{\"78\":1}}],[\"双精度浮点数类型\",{\"1\":{\"39\":1}}],[\"虚拟机栈\",{\"0\":{\"80\":1}}],[\"虚拟机\",{\"0\":{\"77\":1,\"115\":1}}],[\"设计模式\",{\"0\":{\"74\":1}}],[\"设置键盘钩子\",{\"1\":{\"45\":1}}],[\"版本锁\",{\"1\":{\"63\":1}}],[\"邮戳锁\",{\"1\":{\"63\":1}}],[\"读写锁\",{\"1\":{\"63\":1}}],[\"独占锁\",{\"1\":{\"63\":1}}],[\"停止线程\",{\"1\":{\"63\":1}}],[\"创建线程\",{\"1\":{\"63\":1}}],[\"多线程控制\",{\"1\":{\"63\":1}}],[\"多线程\",{\"0\":{\"63\":1,\"114\":1}}],[\"拷贝\",{\"0\":{\"62\":1}}],[\"代理\",{\"0\":{\"61\":1}}],[\"反射\",{\"0\":{\"60\":1}}],[\"死锁排查\",{\"1\":{\"55\":1}}],[\"静态同步方法\",{\"1\":{\"55\":1}}],[\"同步锁标记\",{\"1\":{\"85\":1}}],[\"同步方法\",{\"1\":{\"55\":1}}],[\"同步代码块\",{\"1\":{\"55\":1}}],[\"解锁\",{\"1\":{\"55\":1}}],[\"解压\",{\"1\":{\"27\":1}}],[\"加锁\",{\"1\":{\"55\":1}}],[\"管程\",{\"1\":{\"55\":1}}],[\"管理和终止会话\",{\"1\":{\"31\":1}}],[\"原理\",{\"1\":{\"55\":1}}],[\"对齐填充\",{\"1\":{\"85\":1}}],[\"对象标记\",{\"1\":{\"85\":1}}],[\"对象头\",{\"1\":{\"85\":1}}],[\"对象布局\",{\"0\":{\"85\":1}}],[\"对象锁\",{\"1\":{\"55\":1}}],[\"对于接口\",{\"1\":{\"39\":1}}],[\"对于类\",{\"1\":{\"39\":1}}],[\"理解无锁\",{\"1\":{\"55\":1}}],[\"主要是解决锁分配给哪个线程的问题\",{\"1\":{\"55\":1}}],[\"是重量级基础框架及整个juc体系的基石\",{\"1\":{\"55\":1}}],[\"是用来实现锁或者其它同步器组件的公共基础部分的抽象实现\",{\"1\":{\"55\":1}}],[\"是最常用的局域网技术\",{\"1\":{\"31\":1}}],[\"抽象队列同步器\",{\"1\":{\"55\":1}}],[\"异步任务接口\",{\"1\":{\"54\":1}}],[\"守护线程\",{\"1\":{\"54\":1}}],[\"具体唤醒哪一个则是随机的\",{\"1\":{\"54\":1}}],[\"会唤醒一个在共享变量上wait等待的线程\",{\"1\":{\"54\":1}}],[\"会话层\",{\"1\":{\"31\":1}}],[\"方法二\",{\"0\":{\"91\":1}}],[\"方法区\",{\"0\":{\"82\":1}}],[\"方法后\",{\"1\":{\"54\":1}}],[\"方法是thread类直接提供的\",{\"1\":{\"54\":1}}],[\"函数唤醒共享变量上的所有wait挂起的线程\",{\"1\":{\"54\":1}}],[\"函数一个线程在调用共享对象的notify\",{\"1\":{\"54\":1}}],[\"函数地址了么\",{\"1\":{\"32\":1}}],[\"返回值void\",{\"1\":{\"54\":1}}],[\"无锁\",{\"1\":{\"63\":1}}],[\"无参\",{\"1\":{\"54\":1}}],[\"无线局域网技术\",{\"1\":{\"31\":1}}],[\"无线信号等\",{\"1\":{\"31\":1}}],[\"唤醒\",{\"1\":{\"54\":1}}],[\"等待通知方法是object类中的方法\",{\"1\":{\"54\":1}}],[\"等待\",{\"1\":{\"54\":1}}],[\"等待键盘事件\",{\"1\":{\"45\":1}}],[\"类型指针\",{\"1\":{\"85\":1}}],[\"类元信息\",{\"1\":{\"85\":1}}],[\"类加载器\",{\"1\":{\"78\":1}}],[\"类加载过程\",{\"1\":{\"78\":1}}],[\"类加载\",{\"0\":{\"78\":1}}],[\"类锁\",{\"1\":{\"55\":1}}],[\"类\",{\"1\":{\"54\":1}}],[\"线程通信\",{\"1\":{\"63\":1}}],[\"线程等待\",{\"1\":{\"63\":1}}],[\"线程休眠\",{\"1\":{\"63\":1}}],[\"线程中断\",{\"1\":{\"54\":1}}],[\"线程睡眠\",{\"1\":{\"54\":1}}],[\"线程创建\",{\"1\":{\"54\":1}}],[\"线程控制\",{\"0\":{\"54\":1},\"1\":{\"53\":1}}],[\"一\",{\"0\":{\"54\":1,\"78\":1}}],[\"一种访问控制方式\",{\"1\":{\"39\":3}}],[\"一种循环结构的引导词\",{\"1\":{\"39\":1}}],[\"一种简单的数据链路层协议\",{\"1\":{\"31\":1}}],[\"一种数据链路层协议\",{\"1\":{\"31\":1}}],[\"锁的8种现象\",{\"1\":{\"55\":1}}],[\"锁\",{\"0\":{\"55\":1},\"1\":{\"53\":1}}],[\"两份内容\",{\"1\":{\"53\":1}}],[\"集合类\",{\"0\":{\"51\":1,\"59\":1}}],[\"释放内存\",{\"1\":{\"46\":1}}],[\"描述\",{\"1\":{\"46\":1}}],[\"遍历网卡列表并打印信息\",{\"1\":{\"46\":1}}],[\"获取网卡列表\",{\"1\":{\"46\":1}}],[\"获取缓冲区大小\",{\"1\":{\"46\":1}}],[\"update\",{\"1\":{\"91\":1}}],[\"useunicode=true\",{\"1\":{\"90\":1,\"91\":1}}],[\"utf\",{\"1\":{\"90\":1}}],[\"ulong\",{\"1\":{\"46\":1}}],[\"unspec\",{\"1\":{\"46\":2}}],[\"untitled1\",{\"1\":{\"46\":1}}],[\"unhookwindowshookex\",{\"1\":{\"45\":1}}],[\"url\",{\"1\":{\"30\":1}}],[\"卸载键盘钩子\",{\"1\":{\"45\":1}}],[\"消息循环\",{\"1\":{\"45\":1}}],[\"keyboard\",{\"1\":{\"45\":1}}],[\"keydown\",{\"1\":{\"45\":1}}],[\"kbdllhookstruct\",{\"1\":{\"45\":2}}],[\"kibana\",{\"0\":{\"43\":1}}],[\"服务监控\",{\"1\":{\"41\":1}}],[\"项目架构\",{\"0\":{\"41\":1}}],[\"尝试一个可能抛出异常的程序块\",{\"1\":{\"39\":1}}],[\"抛出一个异常\",{\"1\":{\"39\":1}}],[\"指向当前实例对象的引用\",{\"1\":{\"39\":1}}],[\"分布式锁\",{\"1\":{\"64\":1}}],[\"分布式事务\",{\"0\":{\"64\":1}}],[\"分配足够的缓冲区\",{\"1\":{\"46\":1}}],[\"分支语句结构的引导词\",{\"1\":{\"39\":1}}],[\"分块查找\",{\"0\":{\"15\":1}}],[\"单精度或双精度浮点数\",{\"1\":{\"39\":1}}],[\"单精度浮点数类型\",{\"1\":{\"39\":1}}],[\"短整数类型\",{\"1\":{\"39\":1}}],[\"从成员方法中返回数据\",{\"1\":{\"39\":1}}],[\"易读和易用\",{\"1\":{\"39\":1}}],[\"共用模式\",{\"1\":{\"39\":1}}],[\"保存类信息\",{\"1\":{\"82\":1}}],[\"保护模式\",{\"1\":{\"39\":1}}],[\"保留关键字\",{\"1\":{\"39\":2}}],[\"私用模式\",{\"1\":{\"39\":1}}],[\"包\",{\"1\":{\"39\":1}}],[\"包括数据加密\",{\"1\":{\"31\":1}}],[\"包括分段\",{\"1\":{\"31\":1}}],[\"如果有多个线程在等待\",{\"1\":{\"54\":1}}],[\"如c\",{\"1\":{\"39\":1}}],[\"如ieee\",{\"1\":{\"31\":1}}],[\"长整数类型\",{\"1\":{\"39\":1}}],[\"接口\",{\"1\":{\"39\":1,\"54\":2}}],[\"整体就是一个抽象的fifo队列来完成资源获取线程的排队工作\",{\"1\":{\"55\":1}}],[\"整数类型\",{\"1\":{\"39\":1}}],[\"整个程序代码由编译器软件一次性解析\",{\"1\":{\"29\":1}}],[\"条件语句的引导词\",{\"1\":{\"39\":1}}],[\"或者成员域的值不能被改变\",{\"1\":{\"39\":1}}],[\"或者成员方法不能被覆盖\",{\"1\":{\"39\":1}}],[\"可以是另一个接口\",{\"1\":{\"39\":1}}],[\"可以是另一个类或者抽象类\",{\"1\":{\"39\":1}}],[\"枚举\",{\"1\":{\"39\":1}}],[\"中也作用于声明接口函数的默认实现\",{\"1\":{\"39\":1}}],[\"中的通信会话\",{\"1\":{\"31\":1}}],[\"中的编译阶段使用内置编译器软件将\",{\"1\":{\"29\":1}}],[\"默认\",{\"1\":{\"39\":1}}],[\"回到一个块的开始处\",{\"1\":{\"39\":1}}],[\"没有具体含义\",{\"1\":{\"39\":2}}],[\"声明当前成员方法没有返回值\",{\"1\":{\"39\":1}}],[\"声明不用序列化的成员域\",{\"1\":{\"39\":1}}],[\"声明在当前定义的成员方法中所有需要抛出的异常\",{\"1\":{\"39\":1}}],[\"声明一个类\",{\"1\":{\"39\":1}}],[\"声明布尔类型的关键字\",{\"1\":{\"39\":1}}],[\"字节流\",{\"1\":{\"93\":1}}],[\"字节类型\",{\"1\":{\"39\":1}}],[\"字符\",{\"1\":{\"93\":1}}],[\"字符串\",{\"0\":{\"47\":1},\"1\":{\"47\":1}}],[\"字符类型\",{\"1\":{\"39\":1}}],[\"提前跳出一个块\",{\"1\":{\"39\":1}}],[\"提供网络应用服务和用户接口\",{\"1\":{\"31\":1}}],[\"提供端到端的可靠数据传输\",{\"1\":{\"31\":1}}],[\"提供对物理层传输的比特流进行分帧和差错校验\",{\"1\":{\"31\":1}}],[\"断言\",{\"1\":{\"39\":1}}],[\"表达式遵循ieee\",{\"1\":{\"39\":1}}],[\"表明两个或者多个变量必须同步地发生变化\",{\"1\":{\"39\":1}}],[\"表明一段代码需要同步执行\",{\"1\":{\"39\":1}}],[\"表明一个类实现了给定的接口\",{\"1\":{\"39\":1}}],[\"表明一个类不能派生出子类\",{\"1\":{\"39\":1}}],[\"表明一个类型是另一个类型的子类型\",{\"1\":{\"39\":1}}],[\"表明一个默认的分支\",{\"1\":{\"39\":1}}],[\"表明当前对象的父类型的引用或者父类型的构造方法\",{\"1\":{\"39\":1}}],[\"表明当条件不成立时的分支\",{\"1\":{\"39\":1}}],[\"表明具有静态属性\",{\"1\":{\"39\":1}}],[\"表明要访问指定的类或包\",{\"1\":{\"39\":1}}],[\"表明类或者成员方法具有抽象属性\",{\"1\":{\"39\":1}}],[\"表示其中的一个分支\",{\"1\":{\"39\":1}}],[\"表示层\",{\"1\":{\"31\":1}}],[\"含义\",{\"1\":{\"39\":1}}],[\"序号\",{\"1\":{\"39\":1,\"46\":1}}],[\"测试\",{\"0\":{\"37\":1}}],[\"安装位置\",{\"1\":{\"35\":1}}],[\"安装jdk\",{\"0\":{\"35\":1}}],[\"w3\",{\"1\":{\"90\":1}}],[\"wait\",{\"1\":{\"54\":1}}],[\"ws\",{\"1\":{\"46\":3}}],[\"w64\",{\"1\":{\"46\":1}}],[\"wh\",{\"1\":{\"45\":1}}],[\"while\",{\"1\":{\"39\":1,\"45\":1,\"46\":1}}],[\"while循环结构中\",{\"1\":{\"39\":1}}],[\"wm\",{\"1\":{\"45\":1}}],[\"wparam\",{\"1\":{\"45\":4}}],[\"world\",{\"1\":{\"40\":1}}],[\"www\",{\"1\":{\"34\":1,\"87\":1,\"90\":4}}],[\"wireless\",{\"1\":{\"31\":1}}],[\"wi\",{\"1\":{\"31\":1}}],[\"引入我们的dll从而注入到程序内部\",{\"1\":{\"32\":1}}],[\"用户线程\",{\"1\":{\"54\":1}}],[\"用来声明fp\",{\"1\":{\"39\":1}}],[\"用来声明一个方法是由与计算机相关的语言\",{\"1\":{\"39\":1}}],[\"用来声明一个基本肯定会被执行到的语句块\",{\"1\":{\"39\":1}}],[\"用来创建新实例对象\",{\"1\":{\"39\":1}}],[\"用来测试一个对象是否是指定类型的实例对象\",{\"1\":{\"39\":1}}],[\"用来定义常量\",{\"1\":{\"39\":1}}],[\"用来说明最终属性\",{\"1\":{\"39\":1}}],[\"用来捕捉异常\",{\"1\":{\"39\":1}}],[\"用来进行程序调试\",{\"1\":{\"39\":1}}],[\"用在循环结构中\",{\"1\":{\"39\":1}}],[\"用在条件语句中\",{\"1\":{\"39\":1}}],[\"用在do\",{\"1\":{\"39\":1}}],[\"用在switch语句中\",{\"1\":{\"39\":1}}],[\"用在switch语句之中\",{\"1\":{\"39\":1}}],[\"用在异常处理中\",{\"1\":{\"39\":1}}],[\"用远程线程方式去执行这个这个函数\",{\"1\":{\"32\":1}}],[\"用于处理异常情况\",{\"1\":{\"39\":1}}],[\"用于在宽带接入网络中建立和维护连接\",{\"1\":{\"31\":1}}],[\"用于在点对点或点对多点的通信链路上提供可靠的数据传输\",{\"1\":{\"31\":1}}],[\"用于在点对点连接上建立和维护数据链路连接\",{\"1\":{\"31\":1}}],[\"用于编写低级指令\",{\"1\":{\"29\":1}}],[\"然后写入我们的dll的路径\",{\"1\":{\"32\":1}}],[\"通信协议\",{\"0\":{\"105\":1}}],[\"通过进程打开程序获取程序的句柄\",{\"1\":{\"32\":1}}],[\"通常用于串行线路上的ip数据传输\",{\"1\":{\"31\":1}}],[\"知道这个地址后\",{\"1\":{\"32\":1}}],[\"不就知道程序里面的loadlibrary\",{\"1\":{\"32\":1}}],[\"址\",{\"1\":{\"32\":1}}],[\"地\",{\"1\":{\"32\":1}}],[\"地址\",{\"1\":{\"32\":1}}],[\"比如这个注入工具里面自己获取自己的loadlibrary\",{\"1\":{\"32\":1}}],[\"那这就好办了\",{\"1\":{\"32\":1}}],[\"那么它里面\",{\"1\":{\"32\":1}}],[\"那么需要用到一个函数\",{\"1\":{\"32\":1}}],[\"既然所有软件这个dll的基址都是一样\",{\"1\":{\"32\":1}}],[\"你们想\",{\"1\":{\"32\":1}}],[\"我们只需要在我们自己的程序\",{\"1\":{\"32\":1}}],[\"我们其实主要是要用到它里面的一个函数\",{\"1\":{\"32\":1}}],[\"我们使用汇编语言\",{\"1\":{\"29\":1}}],[\"所以在所有软件里面\",{\"1\":{\"32\":1}}],[\"所有软件都会引入包含这个dll\",{\"1\":{\"32\":1}}],[\"而且都是使用同一份\",{\"1\":{\"32\":1}}],[\"因为这个函数在系统的kernel32\",{\"1\":{\"32\":1}}],[\"首先我们知道在windows上面如果引入一个dll的话\",{\"1\":{\"32\":1}}],[\"注入原理\",{\"1\":{\"32\":1}}],[\"应用层\",{\"1\":{\"31\":1}}],[\"压缩和格式转换\",{\"1\":{\"31\":1}}],[\"处理数据的表示格式\",{\"1\":{\"31\":1}}],[\"处理分组的路由和转发\",{\"1\":{\"31\":1}}],[\"建立\",{\"1\":{\"31\":1}}],[\"流量控制和错误恢复\",{\"1\":{\"31\":1}}],[\"传输层\",{\"1\":{\"31\":1}}],[\"网络层\",{\"1\":{\"31\":1}}],[\"定义了无线数据链路层的帧格式和协议\",{\"1\":{\"31\":1}}],[\"定义了数据链路层的帧格式和mac地址的使用规则\",{\"1\":{\"31\":1}}],[\"将ppp封装在以太网帧中\",{\"1\":{\"31\":1}}],[\"hook\",{\"1\":{\"45\":4}}],[\"home\",{\"1\":{\"36\":4}}],[\"hhook\",{\"1\":{\"45\":1}}],[\"h>\",{\"1\":{\"45\":2,\"46\":4}}],[\"hello\",{\"1\":{\"40\":1}}],[\"html\",{\"1\":{\"34\":1}}],[\"http\",{\"1\":{\"30\":1,\"90\":4}}],[\"https\",{\"1\":{\"27\":1,\"34\":1,\"87\":1}}],[\"high\",{\"1\":{\"31\":1}}],[\"hdlc\",{\"1\":{\"31\":1}}],[\"以太网\",{\"1\":{\"31\":1}}],[\"例如\",{\"1\":{\"39\":1}}],[\"例如http协议\",{\"1\":{\"31\":1}}],[\"例如加密协议和压缩协议\",{\"1\":{\"31\":1}}],[\"例如会话控制协议\",{\"1\":{\"31\":1}}],[\"例如tcp协议和udp协议\",{\"1\":{\"31\":1}}],[\"例如ip协议\",{\"1\":{\"31\":1}}],[\"例如拨号连接或串行链路\",{\"1\":{\"31\":1}}],[\"例如以太网协议\",{\"1\":{\"31\":1}}],[\"例如电缆\",{\"1\":{\"31\":1}}],[\"确保可靠的数据传输\",{\"1\":{\"31\":1}}],[\"光纤\",{\"1\":{\"31\":1}}],[\"负责传输数据的物理媒介和比特流\",{\"1\":{\"31\":1}}],[\"物理层\",{\"1\":{\"31\":1}}],[\"常用的网络协议\",{\"1\":{\"31\":1}}],[\"常量\",{\"1\":{\"30\":1}}],[\"宏定义\",{\"1\":{\"30\":1}}],[\"宏扩展\",{\"1\":{\"29\":1}}],[\"a基本\",{\"0\":{\"113\":1}}],[\"amp\",{\"1\":{\"90\":3}}],[\"activitytest\",{\"1\":{\"90\":1}}],[\"activiti<\",{\"1\":{\"89\":2}}],[\"activiti\",{\"1\":{\"87\":1,\"90\":5,\"91\":1}}],[\"acc\",{\"1\":{\"55\":3}}],[\"aqs\",{\"1\":{\"55\":1,\"63\":1}}],[\"api\",{\"0\":{\"47\":1,\"51\":1}}],[\"application\",{\"1\":{\"31\":1}}],[\"af\",{\"1\":{\"46\":2}}],[\"addbpmnmodel\",{\"1\":{\"93\":1}}],[\"addbytes\",{\"1\":{\"93\":1}}],[\"addstring\",{\"1\":{\"93\":1}}],[\"addclasspathresource\",{\"1\":{\"93\":1}}],[\"addresses\",{\"1\":{\"46\":3}}],[\"adapter\",{\"1\":{\"46\":4}}],[\"a\",{\"0\":{\"113\":1},\"1\":{\"45\":1,\"46\":1}}],[\"assert\",{\"1\":{\"39\":1}}],[\"abstract\",{\"1\":{\"39\":1}}],[\"aa\",{\"1\":{\"30\":1}}],[\"artifactid>\",{\"1\":{\"89\":4}}],[\"arg\",{\"1\":{\"40\":1}}],[\"args\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"90\":1}}],[\"archive\",{\"1\":{\"34\":1}}],[\"arr\",{\"1\":{\"2\":11,\"3\":11,\"4\":9}}],[\"xsd\",{\"1\":{\"90\":1}}],[\"xsi\",{\"1\":{\"90\":1}}],[\"xsi=\",{\"1\":{\"90\":1}}],[\"xmlschema\",{\"1\":{\"90\":1}}],[\"xmlns\",{\"1\":{\"90\":1}}],[\"xmlns=\",{\"1\":{\"90\":1}}],[\"xml\",{\"0\":{\"89\":1},\"1\":{\"90\":2,\"93\":1}}],[\"xxx\",{\"1\":{\"30\":1,\"45\":1,\"93\":2}}],[\"xxxxx\",{\"1\":{\"30\":1}}],[\"x86\",{\"1\":{\"27\":1,\"46\":1}}],[\"基础\",{\"0\":{\"57\":1}}],[\"基本数据类型之一\",{\"1\":{\"39\":8}}],[\"基本操作\",{\"0\":{\"38\":1}}],[\"基本关键字\",{\"0\":{\"30\":1}}],[\"基尔霍夫定律\",{\"1\":{\"26\":1}}],[\"操作系统中为\",{\"1\":{\"29\":1}}],[\"在以太网上运行的一种协议\",{\"1\":{\"31\":1}}],[\"在linux\",{\"1\":{\"29\":1}}],[\"在微控制器程序中\",{\"1\":{\"29\":1}}],[\"其扩展名为\",{\"1\":{\"29\":1}}],[\"其中包含机器语言中的函数定义\",{\"1\":{\"29\":1}}],[\"链接过程会生成一个可执行文件\",{\"1\":{\"29\":1}}],[\"链接是将库文件包含在我们的程序中的过程\",{\"1\":{\"29\":1}}],[\"l\",{\"1\":{\"55\":1}}],[\"ll\",{\"1\":{\"45\":1}}],[\"lparam\",{\"1\":{\"45\":4}}],[\"lresult\",{\"1\":{\"45\":1}}],[\"later\",{\"1\":{\"34\":1}}],[\"layer\",{\"1\":{\"31\":7}}],[\"locksuport\",{\"1\":{\"54\":1}}],[\"lowlevelkeyboardproc\",{\"1\":{\"45\":2}}],[\"logstash\",{\"0\":{\"43\":1}}],[\"loadlibrary\",{\"1\":{\"32\":2}}],[\"long\",{\"1\":{\"30\":1,\"39\":1}}],[\"level\",{\"1\":{\"31\":1}}],[\"length\",{\"1\":{\"2\":3,\"3\":3,\"4\":2}}],[\"list<task>\",{\"1\":{\"98\":1}}],[\"list<deployment>\",{\"1\":{\"94\":1}}],[\"list\",{\"0\":{\"51\":1,\"52\":1,\"59\":1},\"1\":{\"94\":5,\"98\":4}}],[\"linux\",{\"0\":{\"73\":1}}],[\"line\",{\"1\":{\"31\":1}}],[\"link\",{\"1\":{\"31\":2,\"46\":1}}],[\"libiphlpapi\",{\"1\":{\"46\":1}}],[\"libraries\",{\"1\":{\"46\":1}}],[\"lib\",{\"1\":{\"29\":1,\"36\":2,\"46\":1,\"81\":1}}],[\"ld\",{\"1\":{\"29\":1,\"45\":1}}],[\"这个时候我们想怎么操作程序内存数据都没问题\",{\"1\":{\"32\":1}}],[\"这个\",{\"1\":{\"32\":1}}],[\"这个函数是用来引入外部dll的\",{\"1\":{\"32\":1}}],[\"这些文件的扩展名为\",{\"1\":{\"29\":1}}],[\"这一步由预处理器完成\",{\"1\":{\"29\":1}}],[\"库文件是一些预定义的文件\",{\"1\":{\"29\":1}}],[\"连接器\",{\"1\":{\"29\":1}}],[\"连接\",{\"1\":{\"29\":1,\"31\":1}}],[\"十六进制代码\",{\"1\":{\"29\":1}}],[\"十六进制形式\",{\"1\":{\"29\":1}}],[\"称为目标代码\",{\"1\":{\"29\":1}}],[\"并通过一个int类变量表示持有锁的状态\",{\"1\":{\"55\":1}}],[\"并通过终端窗口告诉我们源代码中存在的任何语法错误或警告\",{\"1\":{\"29\":1}}],[\"并发编程\",{\"0\":{\"53\":1}}],[\"并将其转换为特定于计算机类型\",{\"1\":{\"29\":1}}],[\"它从汇编文件中获取基本指令\",{\"1\":{\"29\":1}}],[\"它将汇编代码转换为机器代码\",{\"1\":{\"29\":1}}],[\"转换为机器可理解的代码\",{\"1\":{\"29\":1}}],[\"文件\",{\"1\":{\"29\":1,\"93\":1}}],[\"文件包含\",{\"1\":{\"29\":1}}],[\"使用汇编程序将程序集级代码\",{\"1\":{\"29\":1}}],[\"汇编程序是一个预先编写的程序\",{\"1\":{\"29\":1}}],[\"汇编\",{\"1\":{\"29\":1}}],[\"汇编代码是一种简单的英文语言\",{\"1\":{\"29\":1}}],[\"语法分析\",{\"1\":{\"29\":1}}],[\"的函数肯定也是一样的\",{\"1\":{\"32\":1}}],[\"的二进制\",{\"1\":{\"29\":1}}],[\"的汇编文件\",{\"1\":{\"29\":1}}],[\"的临时文件\",{\"1\":{\"29\":1}}],[\"低级代码\",{\"1\":{\"29\":1}}],[\"临时文件转换为具有汇编级指令\",{\"1\":{\"29\":1}}],[\"org\",{\"1\":{\"87\":1,\"90\":7}}],[\"oracle\",{\"1\":{\"34\":1}}],[\"onlly\",{\"1\":{\"32\":1}}],[\"overflow\",{\"1\":{\"46\":1}}],[\"over\",{\"1\":{\"31\":1}}],[\"o\",{\"1\":{\"29\":6}}],[\"outbuflen\",{\"1\":{\"46\":4}}],[\"out\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"29\":1,\"40\":1,\"90\":1,\"93\":2,\"94\":3,\"98\":1}}],[\"删除所有的注释\",{\"1\":{\"29\":1}}],[\"译过程的第一步预就是预处理\",{\"1\":{\"29\":1}}],[\"预处理器主要完成以下任务\",{\"1\":{\"29\":1}}],[\"预处理\",{\"1\":{\"29\":1}}],[\"groupid>\",{\"1\":{\"89\":4}}],[\"gc次数\",{\"1\":{\"85\":1}}],[\"gc标记\",{\"1\":{\"85\":1}}],[\"gc分别有哪几个\",{\"1\":{\"84\":1}}],[\"gc\",{\"0\":{\"84\":1}}],[\"gcc\",{\"1\":{\"29\":1}}],[\"gaa\",{\"1\":{\"46\":2}}],[\"gettaskservice\",{\"1\":{\"98\":1,\"100\":1}}],[\"getruntimeservice\",{\"1\":{\"96\":1}}],[\"getrepositoryservice\",{\"1\":{\"93\":1,\"94\":1}}],[\"getname\",{\"1\":{\"94\":1,\"98\":1}}],[\"getid\",{\"1\":{\"94\":1}}],[\"get\",{\"1\":{\"94\":2,\"98\":1}}],[\"getdefaultprocessengine\",{\"1\":{\"90\":1,\"93\":1,\"94\":1,\"96\":1,\"98\":1,\"100\":1}}],[\"getadaptersaddresses\",{\"1\":{\"46\":2}}],[\"getmessage\",{\"1\":{\"45\":1}}],[\"goto\",{\"1\":{\"39\":1}}],[\"g++\",{\"1\":{\"29\":4}}],[\"github\",{\"1\":{\"27\":1}}],[\"添加\",{\"1\":{\"27\":1}}],[\"false\",{\"1\":{\"90\":1}}],[\"failed\",{\"1\":{\"45\":1}}],[\"futuretask\",{\"1\":{\"54\":1}}],[\"future\",{\"1\":{\"54\":1}}],[\"free\",{\"1\":{\"46\":1}}],[\"freertos中断管理\",{\"1\":{\"28\":1}}],[\"freertos内存管理\",{\"1\":{\"28\":1}}],[\"freertos软件定时器\",{\"1\":{\"28\":1}}],[\"freertos任务通知\",{\"1\":{\"28\":1}}],[\"freertos任务管理\",{\"1\":{\"28\":1}}],[\"freertos事件组\",{\"1\":{\"28\":1}}],[\"freertos互斥量\",{\"1\":{\"28\":1}}],[\"freertos信号量\",{\"1\":{\"28\":1}}],[\"freertos消息队列\",{\"1\":{\"28\":1}}],[\"freertos创建任务\",{\"1\":{\"28\":1}}],[\"freertos移植到stm32\",{\"1\":{\"28\":1}}],[\"flag\",{\"1\":{\"46\":2}}],[\"float\",{\"1\":{\"39\":1}}],[\"fclose\",{\"1\":{\"45\":1}}],[\"fprintf\",{\"1\":{\"45\":1}}],[\"found\",{\"1\":{\"55\":1}}],[\"fopen\",{\"1\":{\"45\":1}}],[\"fortran语言\",{\"1\":{\"39\":1}}],[\"for\",{\"1\":{\"2\":3,\"3\":3,\"4\":3,\"39\":1,\"94\":1,\"98\":1}}],[\"ftp协议\",{\"1\":{\"31\":1}}],[\"finally\",{\"1\":{\"39\":1}}],[\"final\",{\"1\":{\"39\":1}}],[\"fidelity\",{\"1\":{\"31\":1}}],[\"fi\",{\"1\":{\"31\":1}}],[\"file\",{\"1\":{\"27\":1,\"45\":5}}],[\"配置path\",{\"0\":{\"36\":1}}],[\"配置\",{\"1\":{\"27\":1}}],[\"配置到path\",{\"1\":{\"27\":1}}],[\"createtaskquery\",{\"1\":{\"98\":1}}],[\"createdeploymentquery\",{\"1\":{\"94\":1}}],[\"createdeployment\",{\"1\":{\"93\":1}}],[\"createstandaloneprocessengineconfiguration\",{\"1\":{\"91\":1}}],[\"cj\",{\"1\":{\"90\":1,\"91\":1}}],[\"cfg\",{\"1\":{\"90\":2}}],[\"cmakelists\",{\"1\":{\"46\":1}}],[\"c++\",{\"1\":{\"39\":1}}],[\"characterencoding=utf\",{\"1\":{\"90\":1,\"91\":1}}],[\"char\",{\"1\":{\"39\":1}}],[\"cheat\",{\"1\":{\"32\":1}}],[\"callable\",{\"1\":{\"54\":1}}],[\"callnexthookex\",{\"1\":{\"45\":1}}],[\"callback\",{\"1\":{\"45\":1}}],[\"catch\",{\"1\":{\"39\":1}}],[\"case\",{\"1\":{\"39\":1}}],[\"cloud\",{\"0\":{\"68\":1}}],[\"class=\",{\"1\":{\"90\":1}}],[\"class\",{\"1\":{\"39\":1,\"40\":1,\"90\":1}}],[\"classpath\",{\"0\":{\"36\":1},\"1\":{\"36\":1}}],[\"clion\",{\"1\":{\"27\":1}}],[\"converter<\",{\"1\":{\"89\":1}}],[\"connector\",{\"1\":{\"89\":1}}],[\"continue\",{\"1\":{\"39\":1}}],[\"control\",{\"1\":{\"31\":1}}],[\"const\",{\"1\":{\"30\":1,\"39\":1}}],[\"complete\",{\"1\":{\"100\":1}}],[\"completablefuture\",{\"1\":{\"54\":1,\"63\":1}}],[\"com\",{\"1\":{\"27\":1,\"34\":1,\"90\":1,\"91\":1}}],[\"cpp\",{\"1\":{\"29\":1}}],[\"c\",{\"0\":{\"29\":1,\"108\":1,\"117\":1},\"1\":{\"27\":1,\"29\":3,\"46\":1}}],[\"db\",{\"1\":{\"91\":1}}],[\"driver\",{\"1\":{\"90\":1,\"91\":1}}],[\"dispatchmessage\",{\"1\":{\"45\":1}}],[\"dword\",{\"1\":{\"45\":1}}],[\"docker\",{\"0\":{\"76\":1}}],[\"double\",{\"1\":{\"39\":1}}],[\"do\",{\"1\":{\"39\":1}}],[\"downloads\",{\"1\":{\"34\":1}}],[\"dt\",{\"1\":{\"36\":1}}],[\"deploy\",{\"1\":{\"93\":1}}],[\"deploymentquery\",{\"1\":{\"94\":3}}],[\"deployment\",{\"1\":{\"93\":7}}],[\"deploymentbuilder\",{\"1\":{\"93\":1}}],[\"dependency>\",{\"1\":{\"89\":4}}],[\"deadlock\",{\"1\":{\"55\":1}}],[\"default\",{\"1\":{\"39\":1}}],[\"define\",{\"1\":{\"30\":1}}],[\"debug\",{\"1\":{\"32\":1}}],[\"dll的基地址是固定的\",{\"1\":{\"32\":1}}],[\"dll里面\",{\"1\":{\"32\":1}}],[\"dll\",{\"1\":{\"32\":1}}],[\"databaseschemaupdate\",{\"1\":{\"90\":1}}],[\"data\",{\"1\":{\"31\":2}}],[\"d\",{\"1\":{\"27\":1,\"35\":1,\"36\":1,\"46\":2}}],[\"v\",{\"0\":{\"113\":1,\"115\":1,\"117\":1}}],[\"value=\",{\"1\":{\"90\":5}}],[\"vkcode\",{\"1\":{\"45\":2}}],[\"volatile\",{\"1\":{\"39\":1}}],[\"void\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"39\":1,\"40\":1,\"90\":1,\"91\":1,\"93\":1,\"94\":1,\"96\":1,\"98\":1,\"100\":1}}],[\"version=\",{\"1\":{\"90\":1}}],[\"version>\",{\"1\":{\"89\":2}}],[\"version\",{\"1\":{\"37\":1}}],[\"v10\",{\"1\":{\"27\":1}}],[\"root\",{\"1\":{\"90\":1,\"91\":1}}],[\"rabbitmq\",{\"0\":{\"72\":1}}],[\"runtimeservice\",{\"1\":{\"96\":5}}],[\"runasync\",{\"1\":{\"54\":2}}],[\"runable\",{\"1\":{\"54\":5}}],[\"runnablescheduledfuture\",{\"1\":{\"54\":1}}],[\"repositoryservice\",{\"1\":{\"93\":3,\"94\":3}}],[\"redis\",{\"0\":{\"71\":1}}],[\"reentrantreadwritelock\",{\"1\":{\"63\":1}}],[\"reentrantlock\",{\"1\":{\"63\":1}}],[\"return\",{\"1\":{\"39\":1,\"45\":3,\"46\":1}}],[\"record在定义数据类时更为简洁\",{\"1\":{\"39\":1}}],[\"record\",{\"1\":{\"39\":1}}],[\"rev1\",{\"1\":{\"27\":1}}],[\"release\",{\"1\":{\"27\":1}}],[\"releases\",{\"1\":{\"27\":1}}],[\"rt\",{\"1\":{\"27\":1}}],[\"bean>\",{\"1\":{\"90\":1}}],[\"beans>\",{\"1\":{\"90\":1}}],[\"beans\",{\"1\":{\"90\":4}}],[\"because\",{\"1\":{\"90\":1,\"91\":1}}],[\"boot<\",{\"1\":{\"89\":1}}],[\"boot\",{\"0\":{\"67\":1},\"1\":{\"89\":2}}],[\"boolean\",{\"1\":{\"39\":1}}],[\"buildprocessengine\",{\"1\":{\"91\":1}}],[\"builds\",{\"1\":{\"27\":1}}],[\"buffer\",{\"1\":{\"46\":1}}],[\"byte\",{\"1\":{\"39\":1}}],[\"break\",{\"1\":{\"39\":1}}],[\"bin\",{\"1\":{\"36\":1}}],[\"binaries\",{\"1\":{\"27\":1}}],[\"下载地址\",{\"1\":{\"34\":1}}],[\"下载jdk\",{\"0\":{\"34\":1}}],[\"下载\",{\"1\":{\"27\":1}}],[\"环境搭建\",{\"0\":{\"27\":1,\"33\":1}}],[\"第二步\",{\"0\":{\"90\":1,\"91\":1}}],[\"第二章\",{\"1\":{\"26\":1,\"28\":1}}],[\"第一个流程\",{\"1\":{\"93\":1}}],[\"第一个java程序\",{\"0\":{\"40\":1}}],[\"第一步\",{\"0\":{\"89\":1}}],[\"第一章\",{\"1\":{\"24\":1,\"28\":1}}],[\"第十一章\",{\"1\":{\"28\":1}}],[\"第十章\",{\"1\":{\"28\":1}}],[\"第九章\",{\"1\":{\"28\":1}}],[\"第八章\",{\"1\":{\"28\":1}}],[\"第七章\",{\"1\":{\"28\":1}}],[\"第六章\",{\"1\":{\"28\":1}}],[\"第五章\",{\"1\":{\"28\":1}}],[\"第四章\",{\"1\":{\"28\":1}}],[\"第三章\",{\"1\":{\"28\":1}}],[\"受控电源\",{\"1\":{\"26\":1}}],[\"欧姆定律\",{\"1\":{\"26\":1}}],[\"电功率和能量\",{\"1\":{\"26\":1}}],[\"电流和电压的参考方向\",{\"0\":{\"26\":1}}],[\"电流\",{\"1\":{\"25\":1}}],[\"电压和电流源\",{\"1\":{\"26\":1}}],[\"电压\",{\"1\":{\"25\":1}}],[\"电路的等效变换\",{\"1\":{\"26\":1}}],[\"电路元件\",{\"1\":{\"26\":1}}],[\"电路和电路模型\",{\"0\":{\"25\":1}}],[\"电路基础\",{\"0\":{\"24\":1}}],[\"电感\",{\"0\":{\"23\":1},\"1\":{\"25\":1}}],[\"电容\",{\"0\":{\"22\":1},\"1\":{\"25\":1}}],[\"电阻的串联和并联\",{\"1\":{\"26\":1}}],[\"电阻元件\",{\"1\":{\"26\":1}}],[\"电阻\",{\"0\":{\"21\":1},\"1\":{\"25\":1}}],[\"电子元件\",{\"0\":{\"20\":1}}],[\"完全二叉树\",{\"0\":{\"19\":1}}],[\"满二叉树\",{\"0\":{\"18\":1}}],[\"二\",{\"0\":{\"55\":1,\"79\":1}}],[\"二进制\",{\"1\":{\"29\":1}}],[\"二叉树\",{\"0\":{\"17\":1}}],[\"二分查找\",{\"0\":{\"11\":1}}],[\"树表查找\",{\"0\":{\"14\":1}}],[\"斐波那契查找\",{\"0\":{\"13\":1}}],[\"插值查找\",{\"0\":{\"12\":1}}],[\"插入排序\",{\"0\":{\"4\":1}}],[\"顺序查找\",{\"0\":{\"10\":1}}],[\"快速排序\",{\"0\":{\"7\":1}}],[\"归并排序\",{\"0\":{\"6\":1}}],[\"希尔排序\",{\"0\":{\"5\":1}}],[\"edn\",{\"1\":{\"79\":1}}],[\"error\",{\"1\":{\"46\":2}}],[\"elk\",{\"0\":{\"75\":1}}],[\"elaticsearch\",{\"0\":{\"43\":1}}],[\"else\",{\"1\":{\"39\":1}}],[\"ex\",{\"0\":{\"112\":1},\"1\":{\"54\":2}}],[\"excutor\",{\"1\":{\"54\":2}}],[\"export\",{\"0\":{\"44\":1}}],[\"extends\",{\"1\":{\"39\":1}}],[\"exe\",{\"1\":{\"29\":2}}],[\"encoding=\",{\"1\":{\"90\":1}}],[\"enum\",{\"1\":{\"39\":1}}],[\"engine\",{\"1\":{\"32\":1,\"90\":3}}],[\"ethernet\",{\"1\":{\"31\":2}}],[\"e\",{\"0\":{\"102\":1},\"1\":{\"4\":3,\"29\":1}}],[\"name\",{\"1\":{\"93\":1}}],[\"name=\",{\"1\":{\"90\":5}}],[\"native\",{\"1\":{\"39\":1}}],[\"notifyall\",{\"1\":{\"54\":1}}],[\"notify\",{\"1\":{\"54\":1}}],[\"no\",{\"1\":{\"46\":1}}],[\"node\",{\"0\":{\"44\":1}}],[\"nullcatalogmeanscurrent=true\",{\"1\":{\"90\":1,\"91\":1}}],[\"null\",{\"1\":{\"45\":5,\"46\":3}}],[\"ncode\",{\"1\":{\"45\":3}}],[\"new\",{\"1\":{\"39\":1}}],[\"network\",{\"1\":{\"31\":1}}],[\"nixman\",{\"1\":{\"27\":1}}],[\"n\",{\"1\":{\"4\":2,\"45\":2,\"46\":6}}],[\"39\",{\"1\":{\"39\":1}}],[\"38\",{\"1\":{\"39\":1}}],[\"37\",{\"1\":{\"39\":1}}],[\"36\",{\"1\":{\"39\":1}}],[\"35\",{\"1\":{\"39\":1}}],[\"34\",{\"1\":{\"39\":1}}],[\"3306\",{\"1\":{\"90\":1,\"91\":1}}],[\"33\",{\"1\":{\"39\":1}}],[\"32\",{\"1\":{\"39\":1}}],[\"31\",{\"1\":{\"39\":1}}],[\"30\",{\"1\":{\"39\":1}}],[\"3\",{\"0\":{\"4\":1,\"12\":1},\"1\":{\"26\":1,\"29\":1,\"54\":1,\"63\":2}}],[\"选择排序\",{\"0\":{\"3\":1}}],[\"task\",{\"1\":{\"98\":3}}],[\"taskassignee\",{\"1\":{\"98\":1}}],[\"taskquery\",{\"1\":{\"98\":4}}],[\"taskservice\",{\"1\":{\"98\":3,\"100\":3}}],[\"target\",{\"1\":{\"46\":1}}],[\"txt\",{\"1\":{\"45\":1,\"46\":1}}],[\"true\",{\"1\":{\"91\":1}}],[\"try\",{\"1\":{\"39\":1}}],[\"translatemessage\",{\"1\":{\"45\":1}}],[\"transient\",{\"1\":{\"39\":1}}],[\"transport\",{\"1\":{\"31\":1}}],[\"thread\",{\"1\":{\"54\":2}}],[\"throws\",{\"1\":{\"39\":1}}],[\"throw\",{\"1\":{\"39\":1}}],[\"this\",{\"1\":{\"39\":1}}],[\"toos\",{\"1\":{\"36\":1}}],[\"to\",{\"1\":{\"31\":2,\"45\":1}}],[\"test07\",{\"1\":{\"100\":1}}],[\"test06\",{\"1\":{\"98\":1}}],[\"test05\",{\"1\":{\"96\":1}}],[\"test04\",{\"1\":{\"94\":1}}],[\"test03\",{\"1\":{\"93\":1}}],[\"test02\",{\"1\":{\"91\":1}}],[\"test\",{\"1\":{\"40\":1,\"91\":1,\"93\":1,\"94\":1,\"96\":1,\"98\":1,\"100\":1}}],[\"technologies\",{\"1\":{\"34\":1}}],[\"text\",{\"1\":{\"29\":7}}],[\"temp\",{\"1\":{\"3\":2}}],[\"t\",{\"0\":{\"104\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1}}],[\"p\",{\"0\":{\"102\":1}}],[\"pcurraddresses\",{\"1\":{\"46\":7}}],[\"pip\",{\"1\":{\"46\":2}}],[\"pkeystruct\",{\"1\":{\"45\":2}}],[\"paddresses\",{\"1\":{\"46\":7}}],[\"package\",{\"1\":{\"39\":1}}],[\"path\",{\"1\":{\"36\":1}}],[\"processengineconfiguration\",{\"1\":{\"90\":1,\"91\":2}}],[\"processengines\",{\"1\":{\"90\":2,\"93\":1,\"94\":1,\"96\":1,\"98\":1,\"100\":1}}],[\"processengine\",{\"1\":{\"90\":4,\"91\":2,\"93\":3,\"94\":3,\"96\":3,\"98\":3,\"100\":3}}],[\"protected\",{\"1\":{\"39\":1}}],[\"protocol\",{\"1\":{\"31\":3}}],[\"prefix\",{\"1\":{\"46\":2}}],[\"presentation\",{\"1\":{\"31\":1}}],[\"private\",{\"1\":{\"39\":1}}],[\"printf\",{\"1\":{\"45\":1,\"46\":4}}],[\"println\",{\"1\":{\"40\":1,\"90\":1,\"93\":2,\"94\":3,\"98\":1}}],[\"print\",{\"1\":{\"2\":1,\"3\":1,\"4\":1}}],[\"pom\",{\"0\":{\"89\":1}}],[\"point\",{\"1\":{\"31\":4}}],[\"posix\",{\"1\":{\"27\":1}}],[\"pppoe\",{\"1\":{\"31\":1}}],[\"ppp\",{\"1\":{\"31\":1}}],[\"physical\",{\"1\":{\"31\":1}}],[\"public\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"39\":1,\"40\":2,\"90\":2,\"91\":1,\"93\":1,\"94\":1,\"96\":1,\"98\":1,\"100\":1}}],[\"size\",{\"1\":{\"94\":1,\"98\":1}}],[\"shanghai\",{\"1\":{\"90\":1,\"91\":1}}],[\"short\",{\"1\":{\"39\":1}}],[\"schemalocation=\",{\"1\":{\"90\":1}}],[\"schema\",{\"1\":{\"90\":3,\"91\":1}}],[\"scheduledthreadpoolexecutor\",{\"1\":{\"54\":1}}],[\"sr1<\",{\"1\":{\"89\":2}}],[\"so\",{\"1\":{\"81\":1}}],[\"s1\",{\"1\":{\"79\":1}}],[\"s0\",{\"1\":{\"79\":1}}],[\"springboot\",{\"0\":{\"118\":1}}],[\"springframework\",{\"1\":{\"89\":1,\"90\":3}}],[\"spring\",{\"0\":{\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"116\":1,\"117\":1},\"1\":{\"89\":1,\"90\":1}}],[\"su\",{\"1\":{\"54\":2}}],[\"supplier<u>\",{\"1\":{\"54\":2}}],[\"supplyasync\",{\"1\":{\"54\":2}}],[\"super\",{\"1\":{\"39\":1}}],[\"sleep\",{\"1\":{\"54\":1}}],[\"slip\",{\"1\":{\"31\":1}}],[\"skywalking\",{\"0\":{\"42\":1}}],[\"synchronized\",{\"1\":{\"39\":1,\"55\":3}}],[\"system\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"40\":1,\"90\":1,\"93\":2,\"94\":3,\"98\":1}}],[\"switch\",{\"1\":{\"39\":1}}],[\"smtp协议等\",{\"1\":{\"31\":1}}],[\"servertimezone=asia\",{\"1\":{\"90\":1,\"91\":1}}],[\"serial\",{\"1\":{\"31\":1}}],[\"setdatabaseschemaupdate\",{\"1\":{\"91\":1}}],[\"setjdbcpassword\",{\"1\":{\"91\":1}}],[\"setjdbcusername\",{\"1\":{\"91\":1}}],[\"setjdbcurl\",{\"1\":{\"91\":1}}],[\"setjdbcdriver\",{\"1\":{\"91\":1}}],[\"set\",{\"0\":{\"59\":1}}],[\"setwindowshookex\",{\"1\":{\"45\":1}}],[\"session\",{\"1\":{\"31\":1}}],[\"seh\",{\"1\":{\"27\":1}}],[\"s\",{\"0\":{\"102\":1,\"104\":1},\"1\":{\"29\":5}}],[\"startprocessinstancebymessage\",{\"1\":{\"96\":1}}],[\"startprocessinstancebykey\",{\"1\":{\"96\":1}}],[\"startprocessinstancebyid\",{\"1\":{\"96\":1}}],[\"starter<\",{\"1\":{\"89\":1}}],[\"starter\",{\"1\":{\"89\":1}}],[\"standaloneinmemprocessengineconfiguration\",{\"1\":{\"90\":1}}],[\"stampedlock\",{\"1\":{\"63\":1}}],[\"static\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"39\":1,\"40\":1,\"55\":1,\"90\":1}}],[\"strict\",{\"1\":{\"39\":1}}],[\"strictfp\",{\"1\":{\"39\":1}}],[\"stringbuilder\",{\"0\":{\"50\":1,\"58\":1},\"1\":{\"47\":1}}],[\"stringbuffer\",{\"0\":{\"49\":1,\"58\":1},\"1\":{\"47\":1}}],[\"string\",{\"0\":{\"48\":1,\"58\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"40\":1,\"47\":1,\"90\":1}}],[\"m32\",{\"0\":{\"104\":1}}],[\"mysql\",{\"0\":{\"69\":1},\"1\":{\"90\":2,\"91\":2}}],[\"mybin\",{\"1\":{\"29\":1}}],[\"monitorexit\",{\"1\":{\"55\":1}}],[\"monitorenter\",{\"1\":{\"55\":1}}],[\"monitor\",{\"1\":{\"55\":1}}],[\"maven\",{\"0\":{\"89\":1}}],[\"map\",{\"0\":{\"59\":1}}],[\"malloc\",{\"1\":{\"46\":1}}],[\"main\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"40\":1,\"45\":1,\"46\":1,\"90\":1}}],[\"msg\",{\"1\":{\"45\":5}}],[\"mingw32\",{\"1\":{\"46\":1}}],[\"mingw64\",{\"1\":{\"27\":1,\"46\":1}}],[\"mingw\",{\"1\":{\"27\":1}}],[\"minindex\",{\"1\":{\"3\":6}}],[\"m\",{\"0\":{\"115\":1,\"117\":1},\"1\":{\"2\":2}}],[\">next\",{\"1\":{\"46\":1}}],[\">adaptername\",{\"1\":{\"46\":1}}],[\">description\",{\"1\":{\"46\":1}}],[\">friendlyname\",{\"1\":{\"46\":1}}],[\">vkcode\",{\"1\":{\"45\":1}}],[\">=\",{\"1\":{\"45\":1}}],[\">toolchains\",{\"1\":{\"27\":1}}],[\">build\",{\"1\":{\"27\":1}}],[\">setting\",{\"1\":{\"27\":1}}],[\">\",{\"1\":{\"2\":1,\"4\":2,\"27\":1,\"54\":1,\"90\":12}}],[\"+\",{\"1\":{\"2\":2,\"3\":2,\"4\":1,\"27\":1}}],[\"json\",{\"1\":{\"89\":1}}],[\"jstack\",{\"1\":{\"55\":1}}],[\"jdbcpassword\",{\"1\":{\"90\":1}}],[\"jdbcusername\",{\"1\":{\"90\":1}}],[\"jdbcurl\",{\"1\":{\"90\":1}}],[\"jdbc\",{\"1\":{\"90\":2,\"91\":2}}],[\"jdbcdriver\",{\"1\":{\"90\":1}}],[\"jdbc<\",{\"1\":{\"89\":1}}],[\"jdk1\",{\"1\":{\"35\":1,\"36\":1}}],[\"jvm\",{\"0\":{\"70\":1,\"77\":1}}],[\"jps\",{\"1\":{\"55\":1}}],[\"join\",{\"1\":{\"54\":1}}],[\"juc\",{\"0\":{\"53\":1}}],[\"jar\",{\"1\":{\"36\":2}}],[\"java<\",{\"1\":{\"89\":1}}],[\"java8\",{\"1\":{\"39\":1}}],[\"javac\",{\"1\":{\"37\":1}}],[\"javase8u211\",{\"1\":{\"34\":1}}],[\"javase\",{\"1\":{\"34\":1}}],[\"java\",{\"0\":{\"39\":1,\"53\":1,\"57\":1,\"77\":1,\"110\":1},\"1\":{\"34\":1,\"35\":1,\"36\":5,\"37\":2}}],[\"j++\",{\"1\":{\"2\":1,\"3\":1}}],[\"j\",{\"0\":{\"113\":1,\"115\":1},\"1\":{\"2\":5,\"3\":4,\"4\":7}}],[\"<property\",{\"1\":{\"90\":5}}],[\"<bean\",{\"1\":{\"90\":1}}],[\"<beans\",{\"1\":{\"90\":1}}],[\"<version>7\",{\"1\":{\"89\":2}}],[\"<artifactid>activiti\",{\"1\":{\"89\":2}}],[\"<artifactid>mysql\",{\"1\":{\"89\":1}}],[\"<artifactid>spring\",{\"1\":{\"89\":1}}],[\"<groupid>mysql<\",{\"1\":{\"89\":1}}],[\"<groupid>org\",{\"1\":{\"89\":3}}],[\"<dependency>\",{\"1\":{\"89\":4}}],[\"<进程号>\",{\"1\":{\"55\":1}}],[\"<iphlpapi\",{\"1\":{\"46\":1}}],[\"<winsock2\",{\"1\":{\"46\":1}}],[\"<windows\",{\"1\":{\"45\":1,\"46\":1}}],[\"<stdio\",{\"1\":{\"45\":1,\"46\":1}}],[\"<\",{\"1\":{\"2\":3,\"3\":4,\"4\":2,\"89\":4,\"90\":7,\"94\":1,\"98\":1}}],[\"09\",{\"0\":{\"114\":1},\"1\":{\"39\":1}}],[\"08\",{\"1\":{\"39\":1}}],[\"07\",{\"0\":{\"99\":1},\"1\":{\"39\":1}}],[\"06\",{\"0\":{\"97\":1},\"1\":{\"39\":1}}],[\"05\",{\"0\":{\"95\":1},\"1\":{\"39\":1}}],[\"04\",{\"0\":{\"51\":1,\"92\":1},\"1\":{\"39\":1}}],[\"03\",{\"0\":{\"47\":1,\"113\":1},\"1\":{\"39\":1}}],[\"02\",{\"0\":{\"20\":1,\"29\":1,\"30\":1,\"38\":1,\"88\":1},\"1\":{\"39\":1}}],[\"0\",{\"1\":{\"2\":2,\"3\":3,\"4\":4,\"27\":1,\"35\":1,\"36\":1,\"45\":6,\"46\":2,\"63\":1,\"89\":4,\"90\":3,\"94\":1,\"98\":1}}],[\"01\",{\"0\":{\"1\":1,\"24\":1,\"27\":1,\"33\":1,\"86\":1},\"1\":{\"39\":1}}],[\"id=\",{\"1\":{\"90\":1}}],[\"id\",{\"1\":{\"46\":1}}],[\"ip\",{\"1\":{\"46\":1}}],[\"instance\",{\"1\":{\"90\":1}}],[\"instanceof\",{\"1\":{\"39\":1}}],[\"install\",{\"1\":{\"45\":1}}],[\"include\",{\"1\":{\"45\":2,\"46\":6}}],[\"interface\",{\"1\":{\"39\":1}}],[\"internet\",{\"1\":{\"31\":1}}],[\"int\",{\"1\":{\"2\":5,\"3\":6,\"4\":6,\"39\":1,\"45\":2,\"46\":2,\"94\":1,\"98\":1}}],[\"impl\",{\"1\":{\"90\":1}}],[\"implements\",{\"1\":{\"39\":1}}],[\"import\",{\"1\":{\"39\":1,\"90\":2}}],[\"if\",{\"1\":{\"2\":1,\"3\":2,\"39\":1,\"45\":3,\"46\":3}}],[\"i++\",{\"1\":{\"2\":2,\"3\":2,\"4\":2,\"46\":1,\"94\":1,\"98\":1}}],[\"i\",{\"1\":{\"2\":9,\"3\":10,\"4\":7,\"29\":4,\"46\":1,\"94\":4,\"98\":3}}],[\"29\",{\"1\":{\"39\":1}}],[\"28\",{\"1\":{\"39\":1}}],[\"27\",{\"1\":{\"39\":1}}],[\"26\",{\"1\":{\"39\":1}}],[\"25\",{\"1\":{\"39\":1}}],[\"24\",{\"1\":{\"39\":1}}],[\"22\",{\"1\":{\"39\":1}}],[\"21\",{\"1\":{\"39\":1}}],[\"2001\",{\"1\":{\"90\":1}}],[\"20\",{\"1\":{\"39\":1}}],[\"2\",{\"0\":{\"3\":1,\"11\":1,\"26\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"27\":1,\"29\":1,\"53\":1,\"54\":1,\"63\":2,\"84\":1}}],[\"23\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"39\":1}}],[\"802\",{\"1\":{\"31\":1}}],[\"8\",{\"0\":{\"9\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"26\":1,\"35\":1,\"36\":1,\"90\":2,\"91\":1}}],[\"88\",{\"1\":{\"2\":1,\"3\":1,\"4\":1}}],[\"754算术规范\",{\"1\":{\"39\":1}}],[\"7z\",{\"1\":{\"27\":1}}],[\"7\",{\"0\":{\"8\":1,\"16\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"26\":1}}],[\"64\",{\"1\":{\"27\":1,\"46\":1}}],[\"6\",{\"0\":{\"7\":1,\"15\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"26\":1}}],[\"9\",{\"1\":{\"2\":1,\"3\":1,\"4\":1}}],[\"51\",{\"1\":{\"39\":1}}],[\"50\",{\"1\":{\"39\":1}}],[\"54\",{\"1\":{\"2\":1,\"3\":1,\"4\":1}}],[\"5\",{\"0\":{\"6\":1,\"14\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"26\":1}}],[\"4个重要的静态方法\",{\"1\":{\"54\":1}}],[\"49\",{\"1\":{\"39\":1}}],[\"48\",{\"1\":{\"39\":1}}],[\"47\",{\"1\":{\"39\":1}}],[\"46\",{\"1\":{\"39\":1}}],[\"45\",{\"1\":{\"39\":1}}],[\"44\",{\"1\":{\"39\":1}}],[\"42\",{\"1\":{\"39\":1}}],[\"41\",{\"1\":{\"39\":1}}],[\"40\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"39\":1}}],[\"43\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"39\":1}}],[\"4\",{\"0\":{\"5\":1,\"13\":1},\"1\":{\"2\":2,\"3\":2,\"4\":2,\"26\":1,\"29\":1}}],[\"==\",{\"1\":{\"45\":2,\"46\":2}}],[\"==============================================\",{\"1\":{\"93\":1,\"94\":1}}],[\"========================================================\",{\"1\":{\"93\":1}}],[\"=======================================================\",{\"1\":{\"93\":1}}],[\"========================\",{\"1\":{\"93\":1}}],[\"====================\",{\"1\":{\"84\":1}}],[\"===================\",{\"1\":{\"32\":1,\"41\":1}}],[\"==================\",{\"1\":{\"32\":1,\"41\":1,\"93\":1}}],[\"=\",{\"1\":{\"2\":7,\"3\":10,\"4\":8,\"30\":1,\"45\":6,\"46\":6,\"90\":1,\"91\":1,\"93\":3,\"94\":5,\"96\":2,\"98\":6,\"100\":2}}],[\"冒泡排序\",{\"0\":{\"2\":1}}],[\"198\",{\"1\":{\"91\":1}}],[\"19\",{\"1\":{\"39\":1}}],[\"191\",{\"1\":{\"35\":1,\"36\":1}}],[\"18\",{\"1\":{\"39\":1}}],[\"17\",{\"1\":{\"39\":1}}],[\"16\",{\"1\":{\"39\":1}}],[\"15\",{\"1\":{\"39\":1}}],[\"14\",{\"0\":{\"119\":1},\"1\":{\"39\":1}}],[\"132\",{\"1\":{\"91\":1}}],[\"139\",{\"1\":{\"91\":1}}],[\"13\",{\"0\":{\"118\":1},\"1\":{\"39\":1}}],[\"100\",{\"1\":{\"54\":1}}],[\"10\",{\"0\":{\"115\":1},\"1\":{\"39\":1}}],[\"115\",{\"1\":{\"91\":1}}],[\"11\",{\"0\":{\"116\":1},\"1\":{\"39\":1}}],[\"11系列标准\",{\"1\":{\"31\":1}}],[\"111l\",{\"1\":{\"30\":1}}],[\"127\",{\"1\":{\"90\":1}}],[\"12\",{\"0\":{\"117\":1},\"1\":{\"27\":1,\"39\":1}}],[\"1\",{\"0\":{\"2\":1,\"10\":1,\"25\":1},\"1\":{\"2\":2,\"3\":2,\"4\":3,\"29\":1,\"45\":1,\"46\":1,\"53\":1,\"54\":1,\"55\":1,\"63\":2,\"84\":1,\"90\":2}}],[\"排序算法\",{\"0\":{\"1\":1}}],[\"鱼头笔记\",{\"0\":{\"0\":1},\"1\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map

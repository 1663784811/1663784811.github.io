const e=JSON.parse('{"key":"v-ab5a6f86","path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c/15.%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86.html","title":"15.错误处理","lang":"zh-CN","frontmatter":{"article":false,"title":"15.错误处理","description":"C语言本身并不像一些高级编程语言那样具有内建的异常处理机制（如 C++ 中的 try-catch）。 因此，C 语言的错误处理主要通过以下几种方式来实现： 1. 使用返回值来报告错误 2. 使用 errno 来获取错误信息 C 语言标准库提供了一个全局变量 errno，它用于保存最近的错误码。 当标准库函数失败时，通常会设置 errno 变量，以便你在...","head":[["meta",{"property":"og:url","content":"https://xxxxxxx.xxx/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c/15.%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"鱼头笔记"}],["meta",{"property":"og:title","content":"15.错误处理"}],["meta",{"property":"og:description","content":"C语言本身并不像一些高级编程语言那样具有内建的异常处理机制（如 C++ 中的 try-catch）。 因此，C 语言的错误处理主要通过以下几种方式来实现： 1. 使用返回值来报告错误 2. 使用 errno 来获取错误信息 C 语言标准库提供了一个全局变量 errno，它用于保存最近的错误码。 当标准库函数失败时，通常会设置 errno 变量，以便你在..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-20T00:23:27.000Z"}],["meta",{"property":"article:author","content":"鱼头"}],["meta",{"property":"article:modified_time","content":"2024-12-20T00:23:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"15.错误处理\\",\\"description\\":\\"C语言本身并不像一些高级编程语言那样具有内建的异常处理机制（如 C++ 中的 try-catch）。 因此，C 语言的错误处理主要通过以下几种方式来实现： 1. 使用返回值来报告错误 2. 使用 errno 来获取错误信息 C 语言标准库提供了一个全局变量 errno，它用于保存最近的错误码。 当标准库函数失败时，通常会设置 errno 变量，以便你在...\\"}"]]},"headers":[{"level":3,"title":"1. 使用返回值来报告错误","slug":"_1-使用返回值来报告错误","link":"#_1-使用返回值来报告错误","children":[]},{"level":3,"title":"2. 使用 errno 来获取错误信息","slug":"_2-使用-errno-来获取错误信息","link":"#_2-使用-errno-来获取错误信息","children":[]},{"level":3,"title":"3. 使用 assert 来进行调试时的错误检查","slug":"_3-使用-assert-来进行调试时的错误检查","link":"#_3-使用-assert-来进行调试时的错误检查","children":[]}],"git":{"createdTime":1710696863000,"updatedTime":1734654207000,"contributors":[{"name":"why","email":"1663784811@qq.com","commits":2}]},"readingTime":{"minutes":1.33,"words":398},"filePathRelative":"编程语言/c/15.错误处理.md","localizedDate":"2024年3月17日","autoDesc":true,"excerpt":""}');export{e as data};

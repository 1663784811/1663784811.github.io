import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as a,o as s,c as i,b as e,d as t,e as o,a as d}from"./app-vmL642g-.js";const c="/assets/img_18-rbtHedpv.png",h="/assets/img-NMtrfcEu.png",l="/assets/img_14-f-wtkui-.png",p="/assets/img_16-8V9UdNsJ.png",u={},g=e("p",null,"STM32系列专为要求高性能、低成本、低功耗的嵌入式应用设计的ARM Cortex®-M0，M0+，M3, M4和M7内核",-1),m=e("h2",{id:"野火-指南者开发板",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#野火-指南者开发板","aria-hidden":"true"},"#"),t(" 野火-指南者开发板")],-1),_={href:"https://doc.embedfire.com/mcu/stm32/f103zhinanzhe/std/zh/latest/index.html",target:"_blank",rel:"noopener noreferrer"},b=d('<p>参数: CPU: STM32F103VET6 <br> 引脚: 100PIN <br> FLASH: 512K <br> RAM: 64K <br></p><p><img src="'+c+'" alt="img_18.png"></p><p>开发板 <img src="'+h+'" alt="img.png"></p><h2 id="内部结构图" tabindex="-1"><a class="header-anchor" href="#内部结构图" aria-hidden="true">#</a> 内部结构图</h2><p><img src="'+l+'" alt="img_14.png"></p><h2 id="gpio模式" tabindex="-1"><a class="header-anchor" href="#gpio模式" aria-hidden="true">#</a> GPIO模式</h2><h3 id="输入模式" tabindex="-1"><a class="header-anchor" href="#输入模式" aria-hidden="true">#</a> 输入模式</h3><p><strong>浮空输入</strong>（Floating Input）：GPIO 引脚不连接到任何外部设备，电平由外部信号确定。<br><strong>上拉输入</strong>（Pull-Up Input）：引脚通过上拉电阻连接到 VDD，当外部信号未连接时，引脚保持高电平。<br><strong>下拉输入</strong>（Pull-Down Input）：引脚通过下拉电阻连接到地，当外部信号未连接时，引脚保持低电平。<br></p><h3 id="输出模式" tabindex="-1"><a class="header-anchor" href="#输出模式" aria-hidden="true">#</a> 输出模式</h3><p><strong>推挽输出</strong>（Push-Pull Output）：引脚可以提供高电平或低电平输出，并且能够提供较大的输出电流。<br><strong>开漏输出</strong>（Open-Drain Output）：引脚可以输出低电平，但无法输出高电平，需要外部上拉电阻来提供高电平。<br></p><h3 id="复用模式" tabindex="-1"><a class="header-anchor" href="#复用模式" aria-hidden="true">#</a> 复用模式</h3><p><strong>复用推挽输出</strong>（Alternate Function Push-Pull Output）：引脚配置为特定的复用功能，并且可以提供推挽输出。<br><strong>复用开漏输出</strong>（Alternate Function Open-Drain Output）：引脚配置为特定的复用功能，并且可以提供开漏输出。<br><strong>复用输入</strong>（Alternate Function Input）：引脚配置为特定的复用功能，并且可以作为输入引脚使用。<br></p><h2 id="看门狗-watchdog" tabindex="-1"><a class="header-anchor" href="#看门狗-watchdog" aria-hidden="true">#</a> 看门狗（Watchdog）</h2><p>是一种在嵌入式系统中常见的硬件设备，用于监视系统的运行状态， 并在系统出现故障或死锁时执行特定的操作，如重启系统或执行故障处理程序。 看门狗通常由一个计时器和一个监控电路组成</p><h2 id="stm32-标准库文件" tabindex="-1"><a class="header-anchor" href="#stm32-标准库文件" aria-hidden="true">#</a> stm32 标准库文件</h2><p><img src="'+p+`" alt="img_16.png"></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>startup_stm32f10x_hd.s          启动文件

system_stm32f10x.c              


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function f(x,v){const n=a("ExternalLinkIcon");return s(),i("div",null,[g,m,e("p",null,[e("a",_,[t("指南者开发板详细教程"),o(n)])]),b])}const I=r(u,[["render",f],["__file","01.STM32简介.html.vue"]]);export{I as default};

import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as p,c as a,a as s}from"./app-lnF9Bg6o.js";const t={},n=s('<p>RTOS 系统的核心就是任务管理</p><p>任务状态迁移</p><p>(1)：创建任务→就绪态（Ready）：任务创建完成后进入就绪态，表明任务已 准备就绪，随时可以运行，只等待调度器进行调度。</p><p>(2)：就绪态→运行态（Running）：发生任务切换时，就绪列表中最高优先级 的任务被执行，从而进入运行态。</p><p>(3)：运行态→就绪态：有更高优先级任务创建或者恢复后，会发生任务调度， 此刻就绪列表中最高优先级任务变为运行态，那么原先运行的任务由运行态变为就绪态， 依然在就绪列表中，等待最高优先级的任务运行完毕继续运行原来的任务（此处可以看做 是 CPU 使用权被更高优先级的任务抢占了）。</p><p>(4)：运行态→阻塞态（Blocked）：正在运行的任务发生阻塞（挂起、延时、 读信号量等待）时，该任务会从就绪列表中删除，任务状态由运行态变成阻塞态，然后发 生任务切换，运行就绪列表中当前最高优先级任务。</p><p>(5)：阻塞态→就绪态：阻塞的任务被恢复后（任务恢复、延时时间超时、读 信号量超时或读到信号量等），此时被恢复的任务会被加入就绪列表，从而由阻塞态变成 就绪态；如果此时被恢复任务的优先级高于正在运行任务的优先级，则会发生任务切换， 将该任务将再次转换任务状态，由就绪态变成运行态。</p><p>(6) (7) (8)：就绪态、阻塞态、运行态→挂起态（Suspended）：任务可以通 过调用 vTaskSuspend() API 函数都可以将处于任何状态的任务挂起，被挂起的任务得不到 CPU 的使用权，也不会参与调度，除非它从挂起态中解除。</p><p>(9)：挂起态→就绪态：把一个挂起 状态的任务恢复的唯一途径就是调用 vTaskResume() 或 vTaskResumeFromISR() API 函数，如果此时被恢复任务的优先级高 于正在运行任务的优先级，则会发生任务切换，将该任务将再次转换任务状态，由就绪态 变成运行态。</p><h2 id="常用的任务函数讲解" tabindex="-1"><a class="header-anchor" href="#常用的任务函数讲解" aria-hidden="true">#</a> 常用的任务函数讲解</h2><p>1.任务挂起函数 vTaskSuspend()</p><p>2.将所有的任务都挂起 vTaskSuspendAll()</p><p>3.任务恢复函数 vTaskResume()</p><p>4.任务删除函数 vTaskDelete()</p><p>5.任务延时函数 vTaskDelay()</p><p>6.绝对延时函数 vTaskDelayUntil()</p>',16),r=[n];function _(o,c){return p(),a("div",null,r)}const i=e(t,[["render",_],["__file","04.FreeRTOS任务管理.html.vue"]]);export{i as default};

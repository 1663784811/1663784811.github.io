import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as e,c as p,b as s,d as o,e as l,a as c}from"./app-3xh9dfXI.js";const i="/assets/44-r1kGyKi4.png",u={},_={href:"https://www.yuque.com/icheima/vzsofu/wg88r3lxttcoxbg5",target:"_blank",rel:"noopener noreferrer"},r=c('<h2 id="_1-图层" tabindex="-1"><a class="header-anchor" href="#_1-图层" aria-hidden="true">#</a> 1.图层</h2><p>LVGL具有图层概念,从顶层到底层依次是sys_layer层、top_layer层、act_scr层。</p><p><img src="'+i+`" alt="44.png"> top_layer层及sys_layer层用来创建一些随处可见的内容。 top_layer层可以用来创建菜单栏,弹出窗口等... 鼠标光标可以放在所有层的上面以确保它始终可见,也就是放在sys_layer层。 一般都是在act_scr层创建各种控件(widgets),也就是objects对象。</p><h2 id="_2-objects" tabindex="-1"><a class="header-anchor" href="#_2-objects" aria-hidden="true">#</a> 2.objects</h2><p>在LVGL中,用户界面的基本构建块是对象,也称为Widgets。例如Button、Label、Image、List、图表或文本区域。<br> 创建objects对象并显示在act_scr层上:</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// 当前画面</span>
<span class="token class-name">lv_obj_t</span><span class="token operator">*</span> screen <span class="token operator">=</span> <span class="token function">lv_scr_act</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>objects基本属性:<br> ● 位置：void lv_obj_set_pos(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)<br> ● 尺寸：void lv_obj_set_size(lv_obj_t * obj, lv_coord_t w, lv_coord_t h)<br> ● align：void lv_obj_align(lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs)<br> ● 样式：void lv_style_init(lv_style_t * style);<br></p><p>2.1 位置 objects设置位置的方法如下: 参数1:objects对象 参数2和参数3:坐标x和y 实现代码: 2.2 尺寸 objects设置尺寸的方法如下: 参数1:objects对象 参数2:宽度 参数3:高度 实现代码: 2.3 align lv_obj_align用来设置obj在父控件中的显示位置,定义如下: 参数1:objects对象 参数2:展示方式 参数3:在x方向的偏移 参数4:在y方向的偏移 实现代码: 常见的展示方式有: LV_ALIGN_DEFAULT = 0, LV_ALIGN_TOP_LEFT,<br> LV_ALIGN_TOP_MID,<br> LV_ALIGN_TOP_RIGHT, LV_ALIGN_BOTTOM_LEFT, LV_ALIGN_BOTTOM_MID, LV_ALIGN_BOTTOM_RIGHT, LV_ALIGN_LEFT_MID, LV_ALIGN_RIGHT_MID, LV_ALIGN_CENTER 2.4 样式 Styles用于设置对象的外观。样式是一个lv_style_t类型的变量,它可以保存边框宽度、文本颜色等属性。 创建样式变量: 1 static lv_style_t style; 初始化样式方法: 1 void lv_style_init(lv_style_t * style); 给objects添加style: 1 void lv_obj_add_style(lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector) 参数1:objects对象 参数2:style样式 参数3:设置obj的状态或part,这里默认写0即可 经常设置的样式: //设置obj的宽度和高度</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">lv_style_set_width</span><span class="token punctuation">(</span><span class="token class-name">lv_style_t</span> <span class="token operator">*</span> style<span class="token punctuation">,</span> <span class="token class-name">lv_coord_t</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">lv_style_set_height</span><span class="token punctuation">(</span><span class="token class-name">lv_style_t</span> <span class="token operator">*</span> style<span class="token punctuation">,</span> <span class="token class-name">lv_coord_t</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>//设置obj的x和y坐标</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">lv_style_set_x</span><span class="token punctuation">(</span><span class="token class-name">lv_style_t</span> <span class="token operator">*</span> style<span class="token punctuation">,</span> <span class="token class-name">lv_coord_t</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">lv_style_set_y</span><span class="token punctuation">(</span><span class="token class-name">lv_style_t</span> <span class="token operator">*</span> style<span class="token punctuation">,</span> <span class="token class-name">lv_coord_t</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>//设置背景圆角半径</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">lv_style_set_radius</span><span class="token punctuation">(</span><span class="token class-name">lv_style_t</span> <span class="token operator">*</span> style<span class="token punctuation">,</span> <span class="token class-name">lv_coord_t</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>//上下左右的padding值</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">lv_style_set_pad_top</span><span class="token punctuation">(</span><span class="token class-name">lv_style_t</span> <span class="token operator">*</span> style<span class="token punctuation">,</span> <span class="token class-name">lv_coord_t</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">lv_style_set_pad_bottom</span><span class="token punctuation">(</span><span class="token class-name">lv_style_t</span> <span class="token operator">*</span> style<span class="token punctuation">,</span> <span class="token class-name">lv_coord_t</span> value<span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">lv_style_set_pad_left</span><span class="token punctuation">(</span><span class="token class-name">lv_style_t</span> <span class="token operator">*</span> style<span class="token punctuation">,</span> <span class="token class-name">lv_coord_t</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">lv_style_set_pad_right</span><span class="token punctuation">(</span><span class="token class-name">lv_style_t</span> <span class="token operator">*</span> style<span class="token punctuation">,</span> <span class="token class-name">lv_coord_t</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>// 设置背景颜色</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">lv_style_set_bg_color</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>style1<span class="token punctuation">,</span><span class="token function">lv_palette_main</span><span class="token punctuation">(</span>LV_PALETTE_PINK<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>代码实现:</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">first_screen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//创建样式</span>
    <span class="token keyword">static</span> <span class="token class-name">lv_style_t</span> style<span class="token punctuation">;</span>
    <span class="token comment">//初始化</span>
    <span class="token function">lv_style_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置宽度和高度</span>
    <span class="token function">lv_style_set_width</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>style<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">lv_style_set_height</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>style<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置圆角半径</span>
    <span class="token function">lv_style_set_radius</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>style<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置x坐标</span>
    <span class="token function">lv_style_set_x</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>style<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">lv_style_set_y</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>style<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//创建显示对象</span>
    <span class="token class-name">lv_obj_t</span> <span class="token operator">*</span> obj <span class="token operator">=</span> <span class="token function">lv_obj_create</span><span class="token punctuation">(</span><span class="token function">lv_scr_act</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置样式</span>
    <span class="token function">lv_obj_add_style</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token operator">&amp;</span>style<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19);function d(k,v){const n=t("ExternalLinkIcon");return e(),p("div",null,[s("p",null,[s("a",_,[o("原文引用、尊重作者"),l(n)])]),r])}const y=a(u,[["render",d],["__file","01LVGL.html.vue"]]);export{y as default};

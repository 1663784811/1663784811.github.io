import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as r,a as h}from"./app-H3bzXATr.js";const o={},t=h('<h3 id="第一步-硬件room程序" tabindex="-1"><a class="header-anchor" href="#第一步-硬件room程序" aria-hidden="true">#</a> 第一步: 硬件Room程序</h3><p>当开发板通电或复位时，处理器（CPU）开始执行其固有的启动代码。 这段启动代码通常是位于处理器内部的只读存储器（ROM）中的一小段代码， 称为 ROM 引导代码或初始引导程序。</p><h3 id="第二步-配置硬件" tabindex="-1"><a class="header-anchor" href="#第二步-配置硬件" aria-hidden="true">#</a> 第二步: 配置硬件</h3><p>启动模式的选择是通过 xxx 引脚的状态来配置。 不同的芯片有所不同,请参考该芯片手册 ( 启动模式 ) 比如把 1号引脚拉为高电平则从内部flash启动, 代电平为SDIO ( TF卡 )启动</p><h3 id="第三步-加载u-boot" tabindex="-1"><a class="header-anchor" href="#第三步-加载u-boot" aria-hidden="true">#</a> 第三步: 加载u-boot</h3><p>芯片通常是读取第一个扇区的512个字节，</p><h3 id="第四步-u-boot-初始化硬件" tabindex="-1"><a class="header-anchor" href="#第四步-u-boot-初始化硬件" aria-hidden="true">#</a> 第四步: u-boot 初始化硬件</h3><p>1.初始化最小的硬件组件，如时钟、串口和内存控制器。</p><p>2.初始化更多的硬件，如网络设备、存储设备和图形设备等。</p><h3 id="第五步-加载linux内核" tabindex="-1"><a class="header-anchor" href="#第五步-加载linux内核" aria-hidden="true">#</a> 第五步：加载linux内核</h3><h3 id="挂载根文件系统" tabindex="-1"><a class="header-anchor" href="#挂载根文件系统" aria-hidden="true">#</a> 挂载根文件系统</h3>',11),i=[t];function d(n,c){return e(),r("div",null,i)}const u=a(o,[["render",d],["__file","01.Linux系统启动过程.html.vue"]]);export{u as default};

import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as r,a as h}from"./app-XTH9fhBy.js";const d={},i=h('<p>发布</p><p>订阅</p><h3 id="服务端-broker" tabindex="-1"><a class="header-anchor" href="#服务端-broker" aria-hidden="true">#</a> 服务端 Broker</h3><h3 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端" aria-hidden="true">#</a> 客户端</h3><p>订阅者</p><p>发布者</p><h3 id="主题" tabindex="-1"><a class="header-anchor" href="#主题" aria-hidden="true">#</a> 主题</h3><p>主题被用来标识和区分不同的消息，它是 MQTT 消息路由的基础。发布者可以在发布时指定消息的主题，订阅者则可以选择订阅自己感兴趣的主题来接收相关的消息。</p><h3 id="通配符" tabindex="-1"><a class="header-anchor" href="#通配符" aria-hidden="true">#</a> 通配符</h3><p>订阅者可以在订阅的主题中使用通配符来达到一次订阅多个主题的目的。MQTT 提供了单层通配符和多层通配符两种主题通配符，以满足不同的订阅需要。</p><h3 id="共享订阅" tabindex="-1"><a class="header-anchor" href="#共享订阅" aria-hidden="true">#</a> 共享订阅</h3><h4 id="消息持久化和消息质量等级-qos-设置" tabindex="-1"><a class="header-anchor" href="#消息持久化和消息质量等级-qos-设置" aria-hidden="true">#</a> 消息持久化和消息质量等级（QoS）设置</h4>',12),t=[i];function n(o,c){return e(),r("div",null,t)}const p=a(d,[["render",n],["__file","02.MQTT 核心概念.html.vue"]]);export{p as default};

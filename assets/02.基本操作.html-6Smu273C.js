import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as d,c as r,a as n}from"./app-vmL642g-.js";const s={},a=n(`<h2 id="java-关键字" tabindex="-1"><a class="header-anchor" href="#java-关键字" aria-hidden="true">#</a> JAVA 关键字</h2><table><thead><tr><th>序号</th><th>关键字</th><th>含义</th></tr></thead><tbody><tr><td>01</td><td>abstract</td><td>表明类或者成员方法具有抽象属性</td></tr><tr><td>02</td><td>assert</td><td>断言，用来进行程序调试</td></tr><tr><td>03</td><td>boolean</td><td>基本数据类型之一，声明布尔类型的关键字</td></tr><tr><td>04</td><td>break</td><td>提前跳出一个块</td></tr><tr><td>05</td><td>byte</td><td>基本数据类型之一，字节类型</td></tr><tr><td>06</td><td>case</td><td>用在switch语句之中，表示其中的一个分支</td></tr><tr><td>07</td><td>catch</td><td>用在异常处理中，用来捕捉异常</td></tr><tr><td>08</td><td>char</td><td>基本数据类型之一，字符类型</td></tr><tr><td>09</td><td>class</td><td>声明一个类</td></tr><tr><td>10</td><td>const</td><td>保留关键字，没有具体含义</td></tr><tr><td>11</td><td>continue</td><td>回到一个块的开始处</td></tr><tr><td>12</td><td>default</td><td>默认，例如，用在switch语句中，表明一个默认的分支。Java8 中也作用于声明接口函数的默认实现</td></tr><tr><td>13</td><td>do</td><td>用在do-while循环结构中</td></tr><tr><td>14</td><td>double</td><td>基本数据类型之一，双精度浮点数类型</td></tr><tr><td>15</td><td>else</td><td>用在条件语句中，表明当条件不成立时的分支</td></tr><tr><td>16</td><td>enum</td><td>枚举</td></tr><tr><td>17</td><td>extends</td><td>表明一个类型是另一个类型的子类型。对于类，可以是另一个类或者抽象类；对于接口，可以是另一个接口</td></tr><tr><td>18</td><td><strong>final</strong></td><td>用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变，用来定义常量</td></tr><tr><td>19</td><td><strong>finally</strong></td><td>用于处理异常情况，用来声明一个基本肯定会被执行到的语句块</td></tr><tr><td>20</td><td>float</td><td>基本数据类型之一，单精度浮点数类型</td></tr><tr><td>21</td><td>for</td><td>一种循环结构的引导词</td></tr><tr><td>22</td><td><strong>goto</strong></td><td>保留关键字，没有具体含义</td></tr><tr><td>23</td><td>if</td><td>条件语句的引导词</td></tr><tr><td>24</td><td>implements</td><td>表明一个类实现了给定的接口</td></tr><tr><td>25</td><td>import</td><td>表明要访问指定的类或包</td></tr><tr><td>26</td><td>instanceof</td><td>用来测试一个对象是否是指定类型的实例对象</td></tr><tr><td>27</td><td>int</td><td>基本数据类型之一，整数类型</td></tr><tr><td>28</td><td>interface</td><td>接口</td></tr><tr><td>29</td><td>long</td><td>基本数据类型之一，长整数类型</td></tr><tr><td>30</td><td><strong>native</strong></td><td>用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的</td></tr><tr><td>31</td><td>new</td><td>用来创建新实例对象</td></tr><tr><td>32</td><td>package</td><td>包</td></tr><tr><td>33</td><td>private</td><td>一种访问控制方式：私用模式</td></tr><tr><td>34</td><td>protected</td><td>一种访问控制方式：保护模式</td></tr><tr><td>35</td><td>public</td><td>一种访问控制方式：共用模式</td></tr><tr><td>36</td><td><strong>record</strong></td><td>record在定义数据类时更为简洁、易读和易用。</td></tr><tr><td>37</td><td>return</td><td>从成员方法中返回数据</td></tr><tr><td>38</td><td>short</td><td>基本数据类型之一,短整数类型</td></tr><tr><td>39</td><td>static</td><td>表明具有静态属性</td></tr><tr><td>40</td><td><strong>strictfp</strong></td><td>用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范</td></tr><tr><td>41</td><td>super</td><td>表明当前对象的父类型的引用或者父类型的构造方法</td></tr><tr><td>42</td><td>switch</td><td>分支语句结构的引导词</td></tr><tr><td>43</td><td>synchronized</td><td>表明一段代码需要同步执行</td></tr><tr><td>44</td><td>this</td><td>指向当前实例对象的引用</td></tr><tr><td>45</td><td><strong>throw</strong></td><td>抛出一个异常</td></tr><tr><td>46</td><td><strong>throws</strong></td><td>声明在当前定义的成员方法中所有需要抛出的异常</td></tr><tr><td>47</td><td><strong>transient</strong></td><td>声明不用序列化的成员域</td></tr><tr><td>48</td><td>try</td><td>尝试一个可能抛出异常的程序块</td></tr><tr><td>49</td><td>void</td><td>声明当前成员方法没有返回值</td></tr><tr><td>50</td><td><strong>volatile</strong></td><td>表明两个或者多个变量必须同步地发生变化</td></tr><tr><td>51</td><td>while</td><td>用在循环结构中</td></tr></tbody></table><h2 id="第一个java程序" tabindex="-1"><a class="header-anchor" href="#第一个java程序" aria-hidden="true">#</a> 第一个java程序</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> arg<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),e=[a];function o(c,i){return d(),r("div",null,e)}const u=t(s,[["render",o],["__file","02.基本操作.html.vue"]]);export{u as default};

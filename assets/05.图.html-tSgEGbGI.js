import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as r,c as e,a as h}from"./app-JXXVuIpY.js";const s="/assets/graphs-rpjsaqjT.png",t="/assets/graph-OyqBZnv6.png",d="/assets/250124356471485-7_8SBqom.png",n="/assets/250127431007918-IxdMEybz.png",i={},c=h('<h3 id="图-graph-是一种复杂的非线性表结构。" tabindex="-1"><a class="header-anchor" href="#图-graph-是一种复杂的非线性表结构。" aria-hidden="true">#</a> 图（Graph）是一种复杂的非线性表结构。</h3><p>顶点（vertex）：图中的元素； <br> 边（edge）：图中的顶点与其他任意顶点建立连接的关系；<br> 顶点的度（degree)：跟顶点相连接的边的条数。<br> 入度（In-degree）和出度（Out-degree）：对于有向图，一个顶点的入度是指以其为终点的边数；出度指以该顶点为起点的边数；<br> 图有多种类型，包括有向图、无向图、简单图、多重图、有向图、无向图等；<br></p><h2 id="图的分类" tabindex="-1"><a class="header-anchor" href="#图的分类" aria-hidden="true">#</a> 图的分类</h2><p><img src="'+s+'" alt="graphs.png"></p><h2 id="图的存储" tabindex="-1"><a class="header-anchor" href="#图的存储" aria-hidden="true">#</a> 图的存储</h2><h3 id="邻接矩阵表示法" tabindex="-1"><a class="header-anchor" href="#邻接矩阵表示法" aria-hidden="true">#</a> 邻接矩阵表示法</h3><p>是图的常用存储表示，它的底层依赖一个二维数组。它用<strong>两个数组</strong>分别存储数据元素（顶点）的信息和数据元素之间的关系（边或弧）的信息 <img src="'+t+'" alt="graph.png"></p><h4 id="无向图" tabindex="-1"><a class="header-anchor" href="#无向图" aria-hidden="true">#</a> 无向图</h4><p>我们可以设置两个数组，顶点数组为vertex[4]={v0,v1,v2,v3}，边数组arc[4][4]为上图右边这样的一个矩阵。<br> 对于矩阵的主对角线的值，即arc[0][0]、arc[1][1]、arc[2][2]、arc[3][3]，全为0是因为不存在顶点的边。 <img src="'+d+'" alt="250124356471485.png"></p><h4 id="有向图" tabindex="-1"><a class="header-anchor" href="#有向图" aria-hidden="true">#</a> 有向图：</h4><p>顶点数组为vertex[4]={v0,v1,v2,v3}，弧数组arc[4][4]为下图右边这样的一个矩阵。主对角线上数值依然为0。<br> 但因为是有向图，所以此矩阵并不对称，比如由v1到v0有弧，得到arc[1][0]=1，而v到v没有弧，因此arc[0][1]=0。 <img src="'+n+'" alt="250127431007918.png"></p><h3 id="邻接表表示法" tabindex="-1"><a class="header-anchor" href="#邻接表表示法" aria-hidden="true">#</a> 邻接表表示法</h3><h2 id="图的遍历" tabindex="-1"><a class="header-anchor" href="#图的遍历" aria-hidden="true">#</a> 图的遍历</h2><h2 id="最短路径" tabindex="-1"><a class="header-anchor" href="#最短路径" aria-hidden="true">#</a> 最短路径</h2><h2 id="最长路径" tabindex="-1"><a class="header-anchor" href="#最长路径" aria-hidden="true">#</a> 最长路径</h2>',15),o=[c];function p(_,g){return r(),e("div",null,o)}const f=a(i,[["render",p],["__file","05.图.html.vue"]]);export{f as default};

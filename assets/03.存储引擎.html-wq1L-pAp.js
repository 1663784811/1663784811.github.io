import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o,c as n,b as e,d as t}from"./app-6_i_Rtq6.js";const s={},_=e("h2",{id:"innodb",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#innodb","aria-hidden":"true"},"#"),t(" InnoDB")],-1),r=e("p",null,"支持事务处理、 行级锁定和外键约束， 是默认的存储引擎 采用聚簇索引（Clustered Index），数据文件和索引文件一体化管理，数据存储较紧凑。同时支持自动增长的表空间（tablespace），可以在多个文件间分配。 使用缓冲池（Buffer Pool）来缓存索引和数据，提高访问速度",-1),c=e("h2",{id:"myisam-适用于需要高性能读操作的场景",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#myisam-适用于需要高性能读操作的场景","aria-hidden":"true"},"#"),t(" MyISAM 适用于需要高性能读操作的场景")],-1),d=e("p",null,"不支持事务处理 不支持外键约束 使用表级锁: 当对表进行读写操作时会锁定整个表，适用于读多写少的场景。 数据文件和索引文件分离，表的存储空间可以根据需要调整，适用于大规模的存储需求。 使用键缓存（Key Cache）来缓存索引，但不缓存数据",-1),i=[_,r,c,d];function h(l,f){return o(),n("div",null,i)}const p=a(s,[["render",h],["__file","03.存储引擎.html.vue"]]);export{p as default};

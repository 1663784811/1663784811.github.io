import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as a,a as t}from"./app-481BJMUQ.js";const p={},o=t(`<h2 id="基本数据类型" tabindex="-1"><a class="header-anchor" href="#基本数据类型" aria-hidden="true">#</a> 基本数据类型</h2><p>int：整数类型 <br> short：短整数类型 <br> long：长整数类型 <br> long long：长长整数类型 <br> char：字符类型，通常为一个字节大小，表示单个字符 <br> signed char：有符号字符类型 <br> unsigned char：无符号字符类型 <br> float：单精度浮点数类型 <br> double：双精度浮点数类型 <br> long double：扩展精度浮点数类型 <br></p><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><p>&lt;类型&gt; &lt;变量名&gt;;</p><h2 id="常量" tabindex="-1"><a class="header-anchor" href="#常量" aria-hidden="true">#</a> 常量</h2><p>#define 常量名 值 <br> const 类型 常量名 = 值;</p><h2 id="宏定义" tabindex="-1"><a class="header-anchor" href="#宏定义" aria-hidden="true">#</a> 宏定义</h2><p>#define 宏名称 替换值</p><h2 id="typedef-声明" tabindex="-1"><a class="header-anchor" href="#typedef-声明" aria-hidden="true">#</a> typedef 声明</h2><p><strong>1.使用 typedef 为一个已有的类型取一个新的名字</strong> <br> typedef &lt;已存在的数据类型&gt; &lt;新的数据类型名称&gt;;</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> type newname<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2.用于定义复杂的数据类型</strong></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> x<span class="token punctuation">;</span>
    <span class="token keyword">int</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span> Point<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="枚举类型" tabindex="-1"><a class="header-anchor" href="#枚举类型" aria-hidden="true">#</a> 枚举类型</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">enum</span> 枚举名<span class="token punctuation">{</span> 
     标识符<span class="token punctuation">[</span><span class="token operator">=</span>整型常数<span class="token punctuation">]</span><span class="token punctuation">,</span> 
     标识符<span class="token punctuation">[</span><span class="token operator">=</span>整型常数<span class="token punctuation">]</span><span class="token punctuation">,</span> 
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 
    标识符<span class="token punctuation">[</span><span class="token operator">=</span>整型常数<span class="token punctuation">]</span>
<span class="token punctuation">}</span> 枚举变量<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据类型的大小" tabindex="-1"><a class="header-anchor" href="#数据类型的大小" aria-hidden="true">#</a> 数据类型的大小</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span>  </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;limits&gt;</span></span>
 
using namespace std<span class="token punctuation">;</span>  
  
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
<span class="token punctuation">{</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;type: \\t\\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;************size**************&quot;</span><span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;bool: \\t\\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span>bool<span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span>bool<span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;char: \\t\\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">char</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">char</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;signed char: \\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">signed</span> <span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">signed</span> <span class="token keyword">char</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">signed</span> <span class="token keyword">char</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;unsigned char: \\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;wchar_t: \\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token class-name">wchar_t</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token class-name">wchar_t</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token class-name">wchar_t</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;short: \\t\\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">short</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">short</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;int: \\t\\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;unsigned: \\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">unsigned</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">unsigned</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;long: \\t\\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">long</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">long</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;unsigned long: \\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;double: \\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;long double: \\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">double</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">long</span> <span class="token keyword">double</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">long</span> <span class="token keyword">double</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;float: \\t\\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;size_t: \\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token class-name">size_t</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最大值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token class-name">size_t</span><span class="token operator">&gt;</span><span class="token operator">::</span>max<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\t最小值：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>numeric_limits<span class="token operator">&lt;</span><span class="token class-name">size_t</span><span class="token operator">&gt;</span><span class="token operator">::</span>min<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;string: \\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;所占字节数：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    <span class="token comment">// &lt;&lt; &quot;\\t最大值：&quot; &lt;&lt; (numeric_limits&lt;string&gt;::max)() &lt;&lt; &quot;\\t最小值：&quot; &lt;&lt; (numeric_limits&lt;string&gt;::min)() &lt;&lt; endl;  </span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;type: \\t\\t&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;************size**************&quot;</span><span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),e=[o];function l(c,r){return n(),a("div",null,e)}const k=s(p,[["render",l],["__file","04.数据类型.html.vue"]]);export{k as default};

import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as n,a as e}from"./app-dOakPCSh.js";const i={},d=e(`<h2 id="复制-replication" tabindex="-1"><a class="header-anchor" href="#复制-replication" aria-hidden="true">#</a> 复制 (Replication)：</h2><p>支持主从复制，实现数据同步和负载均衡。</p><h3 id="配置步骤" tabindex="-1"><a class="header-anchor" href="#配置步骤" aria-hidden="true">#</a> 配置步骤</h3><h3 id="主服务器配置" tabindex="-1"><a class="header-anchor" href="#主服务器配置" aria-hidden="true">#</a> 主服务器配置</h3><p>编辑 MySQL 配置文件 /etc/my.cnf</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
server-id <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment"># 设置主服务器的唯一标识，每个服务器必须唯一</span>
log_bin <span class="token operator">=</span> /var/log/mysql/mysql-bin.log  <span class="token comment"># 启用二进制日志，并指定日志文件路径</span>
binlog-do-db <span class="token operator">=</span> your_database_name  <span class="token comment"># 可选，指定要复制的数据库名，可以多次设置</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启 MySQL 服务器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart mysql  <span class="token comment"># Linux 系统下的示例命令，Windows 下可能使用 net start mysql</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建用于复制的用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>CREATE <span class="token environment constant">USER</span> <span class="token string">&#39;replication_user&#39;</span>@<span class="token string">&#39;%&#39;</span> IDENTIFIED BY <span class="token string">&#39;password&#39;</span><span class="token punctuation">;</span>
GRANT REPLICATION SLAVE ON *.* TO <span class="token string">&#39;replication_user&#39;</span>@<span class="token string">&#39;%&#39;</span><span class="token punctuation">;</span>
FLUSH PRIVILEGES<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取当前的主服务器状态：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>SHOW MASTER STATUS<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="从服务器配置" tabindex="-1"><a class="header-anchor" href="#从服务器配置" aria-hidden="true">#</a> 从服务器配置</h3><p>编辑 MySQL 配置文件/etc/my.cnf</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
server-id <span class="token operator">=</span> <span class="token number">2</span>  <span class="token comment"># 设置从服务器的唯一标识，每个服务器必须唯一</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>重启 MySQL 服务器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart mysql  <span class="token comment"># Linux 系统下的示例命令，Windows 下可能使用 net start mysql</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>连接主服务器并配置复制</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>CHANGE MASTER TO
    MASTER_HOST <span class="token operator">=</span> <span class="token string">&#39;ip_address_of_master&#39;</span>,
    MASTER_USER <span class="token operator">=</span> <span class="token string">&#39;replication_user&#39;</span>,
    MASTER_PASSWORD <span class="token operator">=</span> <span class="token string">&#39;password&#39;</span>,
    MASTER_LOG_FILE <span class="token operator">=</span> <span class="token string">&#39;mysql-bin.xxxxxx&#39;</span>,  -- 主服务器上 SHOW MASTER STATUS 获取的 File 值
    MASTER_LOG_POS <span class="token operator">=</span> xxxxxx<span class="token punctuation">;</span>               -- 主服务器上 SHOW MASTER STATUS 获取的 Position 值
START SLAVE<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>检查复制状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>SHOW SLAVE STATUS<span class="token punctuation">\\</span>G<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="集群-cluster" tabindex="-1"><a class="header-anchor" href="#集群-cluster" aria-hidden="true">#</a> 集群 (Cluster)：</h2><p>MySQL Cluster 通过分布式存储和多节点实现高可用性和高性能。</p><h3 id="架构和组件" tabindex="-1"><a class="header-anchor" href="#架构和组件" aria-hidden="true">#</a> 架构和组件</h3><p>管理节点（Management Nodes）：负责集群的配置、管理和监控。</p><p>数据节点（Data Nodes）：实际存储数据的节点，负责数据的分片存储和处理。</p><p>SQL 节点（SQL Nodes）：提供 SQL 接口的节点，允许应用程序通过标准的 MySQL 协议访问数据。</p><p>NoSQL 节点（NoSQL API Nodes）：通过 NoSQL 接口（如 NDB API、Memcached API）访问数据的节点。</p><h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h3>`,29),t=[d];function l(r,c){return a(),n("div",null,t)}const u=s(i,[["render",l],["__file","06.高可用性和集群.html.vue"]]);export{u as default};
